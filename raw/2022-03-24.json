[{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/a5e0/0132/146_large.png?m=1647188713","name":"js","avatar_normal":"https://cdn.v2ex.com/navatar/a5e0/0132/146_normal.png?m=1647188713","title":"JavaScript","url":"https://www.v2ex.com/go/js","topics":2760,"footer":"","header":"JavaScript (sometimes abbreviated JS) is a prototype-based scripting language that is dynamic, weakly typed and has first-class functions.","title_alternative":"JavaScript","avatar_mini":"https://cdn.v2ex.com/navatar/a5e0/0132/146_mini.png?m=1647188713","stars":2762,"aliases":[],"root":false,"id":146,"parent_node_name":"programming"},"member":{"id":111562,"username":"yazoox","url":"https://www.v2ex.com/u/yazoox","website":"","twitter":"","psn":"","github":"","btc":"","location":"Shanghai","tagline":"","bio":"三人行，必有我师\r\n勤学与好问","avatar_mini":"https://cdn.v2ex.com/avatar/7b39/2690/111562_mini.png?m=1635297358","avatar_normal":"https://cdn.v2ex.com/avatar/7b39/2690/111562_normal.png?m=1635297358","avatar_large":"https://cdn.v2ex.com/avatar/7b39/2690/111562_large.png?m=1635297358","created":1429328866,"last_modified":1635297358},"last_reply_by":"eason1874","last_touched":1648083054,"title":"阅读源码，无意中看到这到一段，请教一下，这算是同步的还是异步的代码？","url":"https://www.v2ex.com/t/842504","created":1648080906,"deleted":0,"content":"leran cli 的源代码\r\nhttps://github.com/lerna/lerna/blob/main/core/command/index.js#L45\r\n\r\n这个 command 的 constructor 里面，\r\n\r\n1. 这种执行方式，是同步的么？\r\n\r\n```\r\n      let chain = Promise.resolve();\r\n\r\n      chain = chain.then(() => {\r\n        this.project = new Project(argv.cwd);\r\n      });\r\n      chain = chain.then(() => this.configureEnvironment());\r\n      chain = chain.then(() => this.configureOptions());\r\n      chain = chain.then(() => this.configureProperties());\r\n      chain = chain.then(() => this.configureLogging());\r\n      chain = chain.then(() => this.runValidations());\r\n      chain = chain.then(() => this.runPreparations());\r\n      chain = chain.then(() => this.runCommand());\r\n```\r\n\r\n2. 然后上面 1 中的代码，外面套了一层 let runner = new Promise((resolve, reject) => { ... }\r\n后面继续 runer.then(...)\r\n这个是同步还是异步？\r\n3. command 的 constructor 是同步还是异步？\r\n4. 该类 Command 的方法，runCommand()呢？\r\n```\r\n runCommand() {\r\n    return Promise.resolve()\r\n      .then(() => this.initialize())\r\n      .then((proceed) => {\r\n        if (proceed !== false) {\r\n          return this.execute();\r\n        }\r\n        // early exits set their own exitCode (if non-zero)\r\n      });\r\n  }\r\n```\r\n\r\n看得我好迷糊，也都没有添加 async 关键。\r\n\r\n求指点。\r\n\r\n谢谢！","content_rendered":"<p>leran cli 的源代码\n<a href=\"https://github.com/lerna/lerna/blob/main/core/command/index.js#L45\" rel=\"nofollow\">https://github.com/lerna/lerna/blob/main/core/command/index.js#L45</a></p>\n<p>这个 command 的 constructor 里面，</p>\n<ol>\n<li>这种执行方式，是同步的么？</li>\n</ol>\n<pre><code>      let chain = Promise.resolve();\n\n      chain = chain.then(() =&gt; {\n        this.project = new Project(argv.cwd);\n      });\n      chain = chain.then(() =&gt; this.configureEnvironment());\n      chain = chain.then(() =&gt; this.configureOptions());\n      chain = chain.then(() =&gt; this.configureProperties());\n      chain = chain.then(() =&gt; this.configureLogging());\n      chain = chain.then(() =&gt; this.runValidations());\n      chain = chain.then(() =&gt; this.runPreparations());\n      chain = chain.then(() =&gt; this.runCommand());\n</code></pre>\n<ol>\n<li>然后上面 1 中的代码，外面套了一层 let runner = new Promise((resolve, reject) =&gt; { ... }\n后面继续 runer.then(...)\n这个是同步还是异步？</li>\n<li>command 的 constructor 是同步还是异步？</li>\n<li>该类 Command 的方法，runCommand()呢？</li>\n</ol>\n<pre><code> runCommand() {\n    return Promise.resolve()\n      .then(() =&gt; this.initialize())\n      .then((proceed) =&gt; {\n        if (proceed !== false) {\n          return this.execute();\n        }\n        // early exits set their own exitCode (if non-zero)\n      });\n  }\n</code></pre>\n<p>看得我好迷糊，也都没有添加 async 关键。</p>\n<p>求指点。</p>\n<p>谢谢！</p>\n","last_modified":1648080906,"replies":7,"id":842504}]