[{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/a4f2/3670/260_large.png?m=1650095354","name":"security","avatar_normal":"https://cdn.v2ex.com/navatar/a4f2/3670/260_normal.png?m=1650095354","title":"信息安全","url":"https://www.v2ex.com/go/security","topics":1358,"footer":"","header":"我们都希望自己管理的计算机系统在运转过程中不要遇到任何安全事件。只是，这个不完美的世界的现实告诉我们：学无止境。","title_alternative":"Security","avatar_mini":"https://cdn.v2ex.com/navatar/a4f2/3670/260_mini.png?m=1650095354","stars":1531,"aliases":[],"root":false,"id":260,"parent_node_name":"geek"},"member":{"id":317926,"username":"jeesk","url":"https://www.v2ex.com/u/jeesk","website":"","twitter":null,"psn":null,"github":null,"btc":null,"location":"","tagline":"","bio":"大神指导你， 方法搞对你就领先别人一半了。","avatar_mini":"https://cdn.v2ex.com/gravatar/6b2239f37212b91a6471047afd08de67?s=24&d=retro","avatar_normal":"https://cdn.v2ex.com/gravatar/6b2239f37212b91a6471047afd08de67?s=48&d=retro","avatar_large":"https://cdn.v2ex.com/gravatar/6b2239f37212b91a6471047afd08de67?s=73&d=retro","created":1526996668,"last_modified":1656178670},"last_reply_by":"jeesk","last_touched":1657440048,"title":"现在互联网公司扫描用户信息吃香太难看了， 端到端加密是否合法？","url":"https://www.v2ex.com/t/865227","created":1657424924,"deleted":0,"content":"[皱眉]有个想法， 就是现在不管是国内还是国外的互联网公司 都会扫描用户文件， 如果要做一个端到端加密的文件同步， 在中国和其它国家合法吗？ 会不会收到上级要求， 必须扫描用户是否有违法文件","content_rendered":"[皱眉]有个想法， 就是现在不管是国内还是国外的互联网公司 都会扫描用户文件， 如果要做一个端到端加密的文件同步， 在中国和其它国家合法吗？ 会不会收到上级要求， 必须扫描用户是否有违法文件","last_modified":1657424924,"replies":87,"id":865227},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1650095340","name":"qna","avatar_normal":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1650095340","title":"问与答","url":"https://www.v2ex.com/go/qna","topics":187153,"footer":"","header":"一个更好的世界需要你持续地提出好问题。","title_alternative":"Questions and Answers","avatar_mini":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1650095340","stars":3508,"aliases":[],"root":false,"id":12,"parent_node_name":"v2ex"},"member":{"id":113482,"username":"v2byy","url":"https://www.v2ex.com/u/v2byy","website":null,"twitter":null,"psn":null,"github":null,"btc":null,"location":null,"tagline":null,"bio":null,"avatar_mini":"https://cdn.v2ex.com/avatar/9f22/fc68/113482_mini.png?m=1651133849","avatar_normal":"https://cdn.v2ex.com/avatar/9f22/fc68/113482_normal.png?m=1651133849","avatar_large":"https://cdn.v2ex.com/avatar/9f22/fc68/113482_large.png?m=1651133849","created":1430013393,"last_modified":1651133849},"last_reply_by":"documentzhangx66","last_touched":1657440313,"title":"两家人的烦恼","url":"https://www.v2ex.com/t/865210","created":1657416948,"deleted":0,"content":"娃还没满月，爸妈和岳母都来了帮忙。现在家里经常就有一些小事小闹。\r\n\r\n首先家里房子比较小，公共空间就只有个小客厅了，所以经常上午，下午，可能就各自呆在房间的时间居多。\r\n\r\n我爸妈的一些想法跟我们一些想法不一样，比如说产妇饮食问题，他们建议喝汤，排骨汤，鲫鱼汤等等，做饭有点咸，油腻。由于我媳妇现在不存在奶水不足的问题，而且她也不喜欢喝汤。这个沟通了几次，有所改善。生活习惯也很不一样，我爸妈习惯起早，但是起早又没什么事情干，基本也是在沙发上刷抖音之类的。\r\n\r\n我爸是脾气比较不好的人，以前家里都是他说了算，所以有一些饮食等等有冲突的时候，一说他就不开心，一不开心就说要回老家，说一堆再也不来的气话。\r\n\r\n我其实一开始也是想着以后我爸回去，我妈在这边帮忙带娃。后来跟我妈沟通之后，她说她一个人不适应，一个人她不太愿意。她是愿意带娃的。\r\n\r\n然后是我岳母，说真的，在育儿方面，她是更愿意学习，她在这边带娃我也觉得没问题。但是由于我媳妇还有个弟弟(已上大学)，现在老家没人照顾(吃饭问题)。\r\n\r\n我爸这个人经常脸色很难看，其实我是不希望跟他生活在一起的，否则免不了矛盾，况且家里小。\r\n\r\n今天就是因为岳母买了一些李子之类的水果，我爸说不要吃，他说娃现在拉的太多。我说没吃多少，水果适量就行，况且娃现在是正常的吃喝拉撒。我让他们别老是留在老一套上。\r\n\r\n结果我爸就说要回老家，再也不来。现在娃还没有满月，这样的事情已经发生过 3 ，4 回了。\r\n\r\n真的心累。","content_rendered":"<p>娃还没满月，爸妈和岳母都来了帮忙。现在家里经常就有一些小事小闹。</p>\n<p>首先家里房子比较小，公共空间就只有个小客厅了，所以经常上午，下午，可能就各自呆在房间的时间居多。</p>\n<p>我爸妈的一些想法跟我们一些想法不一样，比如说产妇饮食问题，他们建议喝汤，排骨汤，鲫鱼汤等等，做饭有点咸，油腻。由于我媳妇现在不存在奶水不足的问题，而且她也不喜欢喝汤。这个沟通了几次，有所改善。生活习惯也很不一样，我爸妈习惯起早，但是起早又没什么事情干，基本也是在沙发上刷抖音之类的。</p>\n<p>我爸是脾气比较不好的人，以前家里都是他说了算，所以有一些饮食等等有冲突的时候，一说他就不开心，一不开心就说要回老家，说一堆再也不来的气话。</p>\n<p>我其实一开始也是想着以后我爸回去，我妈在这边帮忙带娃。后来跟我妈沟通之后，她说她一个人不适应，一个人她不太愿意。她是愿意带娃的。</p>\n<p>然后是我岳母，说真的，在育儿方面，她是更愿意学习，她在这边带娃我也觉得没问题。但是由于我媳妇还有个弟弟(已上大学)，现在老家没人照顾(吃饭问题)。</p>\n<p>我爸这个人经常脸色很难看，其实我是不希望跟他生活在一起的，否则免不了矛盾，况且家里小。</p>\n<p>今天就是因为岳母买了一些李子之类的水果，我爸说不要吃，他说娃现在拉的太多。我说没吃多少，水果适量就行，况且娃现在是正常的吃喝拉撒。我让他们别老是留在老一套上。</p>\n<p>结果我爸就说要回老家，再也不来。现在娃还没有满月，这样的事情已经发生过 3 ，4 回了。</p>\n<p>真的心累。</p>\n","last_modified":1657416948,"replies":52,"id":865210},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/4ea0/6fbc/770_large.png?m=1652980294","name":"career","avatar_normal":"https://cdn.v2ex.com/navatar/4ea0/6fbc/770_normal.png?m=1652980294","title":"职场话题","url":"https://www.v2ex.com/go/career","topics":13282,"footer":"","header":"这里，我们聊聊那些工作中遇到的开心和不开心的事。","title_alternative":"Career","avatar_mini":"https://cdn.v2ex.com/navatar/4ea0/6fbc/770_mini.png?m=1652980294","stars":2404,"aliases":[],"root":false,"id":770,"parent_node_name":"work"},"member":{"id":550541,"username":"Turkestan","url":"https://www.v2ex.com/u/Turkestan","website":"","twitter":null,"psn":null,"github":null,"btc":null,"location":"","tagline":"","bio":"","avatar_mini":"https://cdn.v2ex.com/avatar/a6da/35dc/550541_mini.png?m=1657233374","avatar_normal":"https://cdn.v2ex.com/avatar/a6da/35dc/550541_normal.png?m=1657233374","avatar_large":"https://cdn.v2ex.com/avatar/a6da/35dc/550541_large.png?m=1657233374","created":1625892398,"last_modified":1657233374},"last_reply_by":"bluehtt","last_touched":1657438505,"title":"程序员的最终归宿是什么","url":"https://www.v2ex.com/t/865217","created":1657419330,"deleted":0,"content":"据我了解：Engineer Manager 和 架构 两个方向","content_rendered":"据我了解：Engineer Manager 和 架构 两个方向","last_modified":1657419330,"replies":40,"id":865217},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1656605007","name":"programmer","avatar_normal":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1656605007","title":"程序员","url":"https://www.v2ex.com/go/programmer","topics":49690,"footer":"","header":"While code monkeys are not eating bananas, they're coding.","title_alternative":"Programmer","avatar_mini":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1656605007","stars":7890,"aliases":[],"root":false,"id":300,"parent_node_name":"computer"},"member":{"id":579199,"username":"JiaNa","url":"https://www.v2ex.com/u/JiaNa","website":null,"twitter":null,"psn":null,"github":null,"btc":null,"location":null,"tagline":null,"bio":null,"avatar_mini":"https://cdn.v2ex.com/gravatar/00e618f9d1908398f53001a4d0192163?s=24&d=retro","avatar_normal":"https://cdn.v2ex.com/gravatar/00e618f9d1908398f53001a4d0192163?s=48&d=retro","avatar_large":"https://cdn.v2ex.com/gravatar/00e618f9d1908398f53001a4d0192163?s=73&d=retro","created":1650794028,"last_modified":1656127303},"last_reply_by":"luban","last_touched":1657438822,"title":"国外程序员工作的代价有多大？","url":"https://www.v2ex.com/t/865233","created":1657428089,"deleted":0,"content":"代价指由于工作花费的所有时间、离公司近的更贵的房租、上下班拥挤的交通、办公环境（桌面大小、安静程度）等等。如果去办公室上班，代价多大；在家里远程上班，代价多大？\r\n\r\n我估计花费的时间在 10 小时。这里不仅仅指坐在电脑前写代码，还包括路上的交通（不去上班就不用花费）、办公室摸鱼（如果不去上班可以做其他更有意义的事情）等。吃饭不用花额外时间，但可能限制了你的选择，也是一种代价。\r\n\r\n相关的程序员视频：\r\n- [Amazon 西雅图 - 步行几分钟]( https://www.youtube.com/watch?v=deLf6eynC40) 09:00 ~ 19:00\r\n- [澳大利亚 - 自驾上班]( https://www.youtube.com/watch?v=UXrmdS2bLBI) 11:30 到天黑之后，没发现视频中出现具体的结束时间\r\n- [新西兰 - 开放式、狭小、拥挤的办公环境]( https://www.youtube.com/watch?v=BbvnU-6XIAo)\r\n\r\n我的疑问是，就工作来看，国内外程序员都差不多。花费了 10 小时后，也没有多少剩余时间享受生活，相比于国内，可能就是上班时候的强度更低？","content_rendered":"<p>代价指由于工作花费的所有时间、离公司近的更贵的房租、上下班拥挤的交通、办公环境（桌面大小、安静程度）等等。如果去办公室上班，代价多大；在家里远程上班，代价多大？</p>\n<p>我估计花费的时间在 10 小时。这里不仅仅指坐在电脑前写代码，还包括路上的交通（不去上班就不用花费）、办公室摸鱼（如果不去上班可以做其他更有意义的事情）等。吃饭不用花额外时间，但可能限制了你的选择，也是一种代价。</p>\n<p>相关的程序员视频：</p>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=deLf6eynC40\" rel=\"nofollow\">Amazon 西雅图 - 步行几分钟</a> 09:00 ~ 19:00</li>\n<li><a href=\"https://www.youtube.com/watch?v=UXrmdS2bLBI\" rel=\"nofollow\">澳大利亚 - 自驾上班</a> 11:30 到天黑之后，没发现视频中出现具体的结束时间</li>\n<li><a href=\"https://www.youtube.com/watch?v=BbvnU-6XIAo\" rel=\"nofollow\">新西兰 - 开放式、狭小、拥挤的办公环境</a></li>\n</ul>\n<p>我的疑问是，就工作来看，国内外程序员都差不多。花费了 10 小时后，也没有多少剩余时间享受生活，相比于国内，可能就是上班时候的强度更低？</p>\n","last_modified":1657428397,"replies":30,"id":865233},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/4ea0/6fbc/770_large.png?m=1652980294","name":"career","avatar_normal":"https://cdn.v2ex.com/navatar/4ea0/6fbc/770_normal.png?m=1652980294","title":"职场话题","url":"https://www.v2ex.com/go/career","topics":13282,"footer":"","header":"这里，我们聊聊那些工作中遇到的开心和不开心的事。","title_alternative":"Career","avatar_mini":"https://cdn.v2ex.com/navatar/4ea0/6fbc/770_mini.png?m=1652980294","stars":2404,"aliases":[],"root":false,"id":770,"parent_node_name":"work"},"member":{"id":426498,"username":"hello158","url":"https://www.v2ex.com/u/hello158","website":null,"twitter":null,"psn":null,"github":null,"btc":null,"location":null,"tagline":null,"bio":null,"avatar_mini":"https://cdn.v2ex.com/gravatar/4c52d2be404606ac4e95eb1e20b7563d?s=24&d=retro","avatar_normal":"https://cdn.v2ex.com/gravatar/4c52d2be404606ac4e95eb1e20b7563d?s=48&d=retro","avatar_large":"https://cdn.v2ex.com/gravatar/4c52d2be404606ac4e95eb1e20b7563d?s=73&d=retro","created":1562135339,"last_modified":1562135339},"last_reply_by":"clearc","last_touched":1657441657,"title":"劳动仲裁成功！获赔 2N。","url":"https://www.v2ex.com/t/865255","created":1657439395,"deleted":0,"content":"本来不准备在 V 站分享这种内容，但由于之前 360+天之前在这里提过问。\r\n\r\n所以，为了 [有始有终] ，交代一下后续吧。\r\n\r\n\r\n360 多天之前，我发了这篇帖子：\r\nhttps://v2ex.com/t/788989\r\n\r\n\r\n如今这个事情有了结果，时间线如下：\r\n\r\n\r\n- 2021 年 2 月初收到解雇通知\r\n- 2021-03-02 开始劳动仲裁\r\n- 2022-07-02 收到终审判决（终审即二审，此前还有一审）\r\n- 2022-07-08 收到赔偿钱款（全程总耗时约 1 年 5 个月）\r\n\r\n\r\n [最终获赔] \r\n1.违法裁员赔偿金 2N 。\r\n2.未休完的年假，折成 2 倍工资。\r\n\r\n\r\n\r\n这里贴上一份《劳动人事争议仲裁办事指南.zip 》希望诸位永远用不上。\r\n\r\n链接: https://pan.baidu.com/s/16t8kjN4IJTkLSSRQslEWDw 提取码: abeq \r\n\r\n\r\n\r\n\r\n关于劳动仲裁过程中的经历，我写了 10 片“水文”《劳动仲裁回忆录》，放在个人号里面了。\r\n（由于我无意广告，且相关纪录文章就是相关节点事情的回顾和纪录，也没啥含金量，这里就不贴了，真的有人想看故事的话，我再贴。）","content_rendered":"<p>本来不准备在 V 站分享这种内容，但由于之前 360+天之前在这里提过问。</p>\n<p>所以，为了 [有始有终] ，交代一下后续吧。</p>\n<p>360 多天之前，我发了这篇帖子：\n<a href=\"https://v2ex.com/t/788989\" rel=\"nofollow\">https://v2ex.com/t/788989</a></p>\n<p>如今这个事情有了结果，时间线如下：</p>\n<ul>\n<li>2021 年 2 月初收到解雇通知</li>\n<li>2021-03-02 开始劳动仲裁</li>\n<li>2022-07-02 收到终审判决（终审即二审，此前还有一审）</li>\n<li>2022-07-08 收到赔偿钱款（全程总耗时约 1 年 5 个月）</li>\n</ul>\n<p>[最终获赔]\n1.违法裁员赔偿金 2N 。\n2.未休完的年假，折成 2 倍工资。</p>\n<p>这里贴上一份《劳动人事争议仲裁办事指南.zip 》希望诸位永远用不上。</p>\n<p>链接: <a href=\"https://pan.baidu.com/s/16t8kjN4IJTkLSSRQslEWDw\" rel=\"nofollow\">https://pan.baidu.com/s/16t8kjN4IJTkLSSRQslEWDw</a> 提取码: abeq </p>\n<p>关于劳动仲裁过程中的经历，我写了 10 片“水文”《劳动仲裁回忆录》，放在个人号里面了。\n（由于我无意广告，且相关纪录文章就是相关节点事情的回顾和纪录，也没啥含金量，这里就不贴了，真的有人想看故事的话，我再贴。）</p>\n","last_modified":1657439395,"replies":22,"id":865255},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/3417/3cb3/30_large.png?m=1598508698","name":"chengdu","avatar_normal":"https://cdn.v2ex.com/navatar/3417/3cb3/30_normal.png?m=1598508698","title":"成都","url":"https://www.v2ex.com/go/chengdu","topics":1251,"footer":"","header":"","title_alternative":"Chengdu","avatar_mini":"https://cdn.v2ex.com/navatar/3417/3cb3/30_mini.png?m=1598508698","stars":1020,"aliases":[],"root":false,"id":30,"parent_node_name":"cn"},"member":{"id":581718,"username":"ayogo","url":"https://www.v2ex.com/u/ayogo","website":"ayuphy.top","twitter":null,"psn":null,"github":null,"btc":null,"location":"","tagline":"用百分之九十的时间去摆烂，然后用百分之十的时间完成百分之六十的任务。","bio":"集产品经理，码农，用户于一身的矛盾型开发者。\r\n日常把小问题做大。","avatar_mini":"https://cdn.v2ex.com/avatar/b7cd/3a4e/581718_mini.png?m=1652677823","avatar_normal":"https://cdn.v2ex.com/avatar/b7cd/3a4e/581718_normal.png?m=1652677823","avatar_large":"https://cdn.v2ex.com/avatar/b7cd/3a4e/581718_large.png?m=1652677823","avatar_xlarge":"https://cdn.v2ex.com/avatar/b7cd/3a4e/581718_xlarge.png?m=1652677823","avatar_xxlarge":"https://cdn.v2ex.com/avatar/b7cd/3a4e/581718_xlarge.png?m=1652677823","created":1652598539,"last_modified":1652677823},"last_reply_by":"aneureka","last_touched":1657441264,"title":"成都第一次租房子有什么注意事项和推荐的房子吗","url":"https://www.v2ex.com/t/865226","created":1657423040,"deleted":0,"content":"如题，因为前几天刚被橙子大哥收留\n\n现在在考虑租房子的问题，这两天被中介杀疯了\n\n预算 1800 ，套一，民用电。打算租离成都南站坐地铁四十分钟内的。\n\n如果是公寓之类的话预算就是 1600 ，套一。\n\n但是最近被各种中介和虚假信息坑蒙拐骗，想问问 v2er 有没有合适的方案或者房源\n\n以及有哪些要注意的\n\n=\n\n另外因为最近租房子实在是太难了，我在考虑写一个爬虫去爬成都租房公示平台，然后用 Django 做一个 租房信息助手和避坑平台\n\n把每个房子都加一个评论功能和网友看房照片，让大伙能直接在评论区评论房子的好坏。\n\n青年旅舍我也考虑做一个这样子的避坑平台，最近被各种青年旅舍坑的人都傻了。。。\n\n-----\n\n等我租好房子之后有空一起耍游戏撒","content_rendered":"如题，因为前几天刚被橙子大哥收留<br /><br />现在在考虑租房子的问题，这两天被中介杀疯了<br /><br />预算 1800 ，套一，民用电。打算租离成都南站坐地铁四十分钟内的。<br /><br />如果是公寓之类的话预算就是 1600 ，套一。<br /><br />但是最近被各种中介和虚假信息坑蒙拐骗，想问问 v2er 有没有合适的方案或者房源<br /><br />以及有哪些要注意的<br /><br />=<br /><br />另外因为最近租房子实在是太难了，我在考虑写一个爬虫去爬成都租房公示平台，然后用 Django 做一个 租房信息助手和避坑平台<br /><br />把每个房子都加一个评论功能和网友看房照片，让大伙能直接在评论区评论房子的好坏。<br /><br />青年旅舍我也考虑做一个这样子的避坑平台，最近被各种青年旅舍坑的人都傻了。。。<br /><br />-----<br /><br />等我租好房子之后有空一起耍游戏撒","last_modified":1657423040,"replies":13,"id":865226},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/6cdd/60ea/184_large.png?m=1630643913","name":"apple","avatar_normal":"https://cdn.v2ex.com/navatar/6cdd/60ea/184_normal.png?m=1630643913","title":"Apple","url":"https://www.v2ex.com/go/apple","topics":18958,"footer":"","header":"设计了 <a href=\"/go/watch\">Apple Watch</a>，<a href=\"/go/ipad\">iPad</a>，<a href=\"/go/iphone\">iPhone</a>，<a href=\"/go/imac\">iMac</a> 及 <a href=\"/go/mbp\">MacBook Pro</a> 等电子产品的美国公司。","title_alternative":"Apple","avatar_mini":"https://cdn.v2ex.com/navatar/6cdd/60ea/184_mini.png?m=1630643913","stars":2213,"aliases":[],"root":false,"id":184,"parent_node_name":"hardware"},"member":{"id":459094,"username":"siwadiya","url":"https://www.v2ex.com/u/siwadiya","website":null,"twitter":null,"psn":null,"github":null,"btc":null,"location":null,"tagline":null,"bio":null,"avatar_mini":"https://cdn.v2ex.com/gravatar/9dbf43740981bd8bd6a931b483798fd6?s=24&d=retro","avatar_normal":"https://cdn.v2ex.com/gravatar/9dbf43740981bd8bd6a931b483798fd6?s=48&d=retro","avatar_large":"https://cdn.v2ex.com/gravatar/9dbf43740981bd8bd6a931b483798fd6?s=73&d=retro","created":1576226728,"last_modified":1576226728},"last_reply_by":"mofeishiwoa","last_touched":1657433372,"title":"m1 air 外接显示器为啥感觉字体模糊","url":"https://www.v2ex.com/t/865225","created":1657421975,"deleted":0,"content":"显示器：u2720qm\r\n系统：bigsur 11.6.1\r\n外接后缩放：1920*1080 \r\n显示器颜色输入格式 Ypbpr ，接 win10 时设置里显示 YCbCr444\r\nwin10 接的 HDMI ，mac 接的 typec\r\n\r\n同样的界面，mac 还没有 win10 的清晰。\r\n是设置的问题吗?","content_rendered":"显示器：u2720qm<br />系统：bigsur 11.6.1<br />外接后缩放：1920*1080 <br />显示器颜色输入格式 Ypbpr ，接 win10 时设置里显示 YCbCr444<br />win10 接的 HDMI ，mac 接的 typec<br /><br />同样的界面，mac 还没有 win10 的清晰。<br />是设置的问题吗?","last_modified":1657422025,"replies":13,"id":865225},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/d3d9/4468/10_large.png?m=1630643933","name":"mbp","avatar_normal":"https://cdn.v2ex.com/navatar/d3d9/4468/10_normal.png?m=1630643933","title":"MacBook Pro","url":"https://www.v2ex.com/go/mbp","topics":8116,"footer":"","header":"State-of-the-art processors. All-new graphics. Breakthrough high-speed I/O. Three very big leaps forward.","title_alternative":"MacBook Pro","avatar_mini":"https://cdn.v2ex.com/navatar/d3d9/4468/10_mini.png?m=1630643933","stars":3126,"aliases":[],"root":false,"id":10,"parent_node_name":"apple"},"member":{"id":533394,"username":"nexuszjq","url":"https://www.v2ex.com/u/nexuszjq","website":null,"twitter":null,"psn":null,"github":null,"btc":null,"location":null,"tagline":null,"bio":null,"avatar_mini":"https://cdn.v2ex.com/gravatar/6e4a5d3397fe62146a878800421ff85c?s=24&d=retro","avatar_normal":"https://cdn.v2ex.com/gravatar/6e4a5d3397fe62146a878800421ff85c?s=48&d=retro","avatar_large":"https://cdn.v2ex.com/gravatar/6e4a5d3397fe62146a878800421ff85c?s=73&d=retro","created":1613465073,"last_modified":1613465073},"last_reply_by":"hertzry","last_touched":1657436230,"title":"2021 mbp14 屏幕胶垫粘 c 面","url":"https://www.v2ex.com/t/865221","created":1657420946,"deleted":0,"content":"之前在 V2EX 看过类似的帖子，今年六月入手的 mbp14 也出现了这问题，装在内胆包里或者合盖当桌机时间久一点，下次开盖明显感觉胶圈粘到了 c 面，基本可以排除温度问题，电脑一直放在空调房里。相比之下，家里有台 13 年的老 mbp13 ，经过多年老化也没出现该问题。有遇到类似情况的 v 友吗？","content_rendered":"之前在 V2EX 看过类似的帖子，今年六月入手的 mbp14 也出现了这问题，装在内胆包里或者合盖当桌机时间久一点，下次开盖明显感觉胶圈粘到了 c 面，基本可以排除温度问题，电脑一直放在空调房里。相比之下，家里有台 13 年的老 mbp13 ，经过多年老化也没出现该问题。有遇到类似情况的 v 友吗？","last_modified":1657420946,"replies":11,"id":865221},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/6cdd/60ea/184_large.png?m=1630643913","name":"apple","avatar_normal":"https://cdn.v2ex.com/navatar/6cdd/60ea/184_normal.png?m=1630643913","title":"Apple","url":"https://www.v2ex.com/go/apple","topics":18958,"footer":"","header":"设计了 <a href=\"/go/watch\">Apple Watch</a>，<a href=\"/go/ipad\">iPad</a>，<a href=\"/go/iphone\">iPhone</a>，<a href=\"/go/imac\">iMac</a> 及 <a href=\"/go/mbp\">MacBook Pro</a> 等电子产品的美国公司。","title_alternative":"Apple","avatar_mini":"https://cdn.v2ex.com/navatar/6cdd/60ea/184_mini.png?m=1630643913","stars":2213,"aliases":[],"root":false,"id":184,"parent_node_name":"hardware"},"member":{"id":40309,"username":"qdwang","url":"https://www.v2ex.com/u/qdwang","website":"","twitter":null,"psn":null,"github":null,"btc":null,"location":"","tagline":"","bio":"","avatar_mini":"https://cdn.v2ex.com/avatar/4be3/f330/40309_mini.png?m=1557747990","avatar_normal":"https://cdn.v2ex.com/avatar/4be3/f330/40309_normal.png?m=1557747990","avatar_large":"https://cdn.v2ex.com/avatar/4be3/f330/40309_large.png?m=1557747990","created":1370598288,"last_modified":1557747990},"last_reply_by":"wangkun025","last_touched":1657439782,"title":"macbook pro m2 低配 几乎完败给 m1 air 低配","url":"https://www.v2ex.com/t/865242","created":1657433473,"deleted":0,"content":"https://www.youtube.com/watch?v=lF09gsS3vdM\r\n\r\n苹果真有意思，看来 ssd 影响真的很大","content_rendered":"<p><a href=\"https://www.youtube.com/watch?v=lF09gsS3vdM\" rel=\"nofollow\">https://www.youtube.com/watch?v=lF09gsS3vdM</a></p>\n<p>苹果真有意思，看来 ssd 影响真的很大</p>\n","last_modified":1657433473,"replies":10,"id":865242},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1656605007","name":"programmer","avatar_normal":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1656605007","title":"程序员","url":"https://www.v2ex.com/go/programmer","topics":49689,"footer":"","header":"While code monkeys are not eating bananas, they're coding.","title_alternative":"Programmer","avatar_mini":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1656605007","stars":7890,"aliases":[],"root":false,"id":300,"parent_node_name":"computer"},"member":{"id":511352,"username":"James369","url":"https://www.v2ex.com/u/James369","website":null,"twitter":null,"psn":null,"github":null,"btc":null,"location":null,"tagline":null,"bio":null,"avatar_mini":"https://cdn.v2ex.com/gravatar/8b64ecd4b42da39f0025e467ce8497d6?s=24&d=retro","avatar_normal":"https://cdn.v2ex.com/gravatar/8b64ecd4b42da39f0025e467ce8497d6?s=48&d=retro","avatar_large":"https://cdn.v2ex.com/gravatar/8b64ecd4b42da39f0025e467ce8497d6?s=73&d=retro","created":1602036009,"last_modified":1655953695},"last_reply_by":"securityCoding","last_touched":1657430271,"title":"git 有没有必要专门拉一个分支来放标签？","url":"https://www.v2ex.com/t/865215","created":1657419248,"deleted":0,"content":"我看有的地方除了有一个 release 分支之外，还专门开了一个 tag 或 master 分支来放 Tag 。\r\n\r\n那么，为什么不直接在 release 分支上打 tag 就好了？少一个分支，这样还更省事？","content_rendered":"<p>我看有的地方除了有一个 release 分支之外，还专门开了一个 tag 或 master 分支来放 Tag 。</p>\n<p>那么，为什么不直接在 release 分支上打 tag 就好了？少一个分支，这样还更省事？</p>\n","last_modified":1657419248,"replies":9,"id":865215},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/4ea0/6fbc/770_large.png?m=1652980294","name":"career","avatar_normal":"https://cdn.v2ex.com/navatar/4ea0/6fbc/770_normal.png?m=1652980294","title":"职场话题","url":"https://www.v2ex.com/go/career","topics":13282,"footer":"","header":"这里，我们聊聊那些工作中遇到的开心和不开心的事。","title_alternative":"Career","avatar_mini":"https://cdn.v2ex.com/navatar/4ea0/6fbc/770_mini.png?m=1652980294","stars":2404,"aliases":[],"root":false,"id":770,"parent_node_name":"work"},"member":{"id":354034,"username":"treblex","url":"https://www.v2ex.com/u/treblex","website":"https://quan.youshayouhui.cn/","twitter":"","psn":"","github":"lazyfury","btc":"","location":"中国","tagline":"不说了","bio":"如果天总也不亮，那就摸黑过生活；\r\n如果发出声音是危险的，那就保持沉默；\r\n如果自觉无力发光，那就不必去照亮别人。\r\n\r\n我们可以卑微如尘士，不可扭曲如蛆虫。","avatar_mini":"https://cdn.v2ex.com/avatar/a197/3cc5/354034_mini.png?m=1616387796","avatar_normal":"https://cdn.v2ex.com/avatar/a197/3cc5/354034_normal.png?m=1616387796","avatar_large":"https://cdn.v2ex.com/avatar/a197/3cc5/354034_large.png?m=1616387796","created":1538758106,"last_modified":1616387796},"last_reply_by":"wu67","last_touched":1657371816,"title":"都在说最近行情不好，广州的初级前端怎么样？","url":"https://www.v2ex.com/t/865236","created":1657429476,"deleted":0,"content":"初中辍学，自学的菜鸡，所以一直还在初中级混\r\n再比较社恐，不爱背题，面试比较随缘\r\n\r\n业余学了挺多其他方向的技术，go ，flutter(做这个的时候还接触了一点安卓和 iOS 开发，接过微信支付宝支付)这两个算比较熟悉的，最近还看了 unity c#和 unreal c++，没做出什么像样的东西。这些都不太有转行的勇气，比较菜，自娱自乐的水平\r\n\r\n之前做过一段时间电商客服，负能量聚集地，那时候店里推荐想让我试试运营，那时候不太懂就没答应，现在又考虑要不要不搞代码了，作为业余爱好好了\r\n\r\n去年六月到现在宅了一年，四处瞎跑，没想到钱花完了准备上班赶上这么个情况，虽然年年都有说行情不好的吧","content_rendered":"<p>初中辍学，自学的菜鸡，所以一直还在初中级混\n再比较社恐，不爱背题，面试比较随缘</p>\n<p>业余学了挺多其他方向的技术，go ，flutter(做这个的时候还接触了一点安卓和 iOS 开发，接过微信支付宝支付)这两个算比较熟悉的，最近还看了 unity c#和 unreal c++，没做出什么像样的东西。这些都不太有转行的勇气，比较菜，自娱自乐的水平</p>\n<p>之前做过一段时间电商客服，负能量聚集地，那时候店里推荐想让我试试运营，那时候不太懂就没答应，现在又考虑要不要不搞代码了，作为业余爱好好了</p>\n<p>去年六月到现在宅了一年，四处瞎跑，没想到钱花完了准备上班赶上这么个情况，虽然年年都有说行情不好的吧</p>\n","last_modified":1657429476,"replies":7,"id":865236},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/2421/fcb1/436_large.png?m=1650095204","name":"nodejs","avatar_normal":"https://cdn.v2ex.com/navatar/2421/fcb1/436_normal.png?m=1650095204","title":"Node.js","url":"https://www.v2ex.com/go/nodejs","topics":2280,"footer":"","header":"Node.js is a platform built on <a href=\"http://code.google.com/p/v8/\" target=\"_blank\">Chrome's JavaScript runtime</a> for easily building fast, scalable network applications.","title_alternative":"Node.js","avatar_mini":"https://cdn.v2ex.com/navatar/2421/fcb1/436_mini.png?m=1650095204","stars":2732,"aliases":[],"root":false,"id":436,"parent_node_name":"js"},"member":{"id":180710,"username":"lichnow","url":"https://www.v2ex.com/u/lichnow","website":null,"twitter":null,"psn":null,"github":null,"btc":null,"location":null,"tagline":null,"bio":null,"avatar_mini":"https://cdn.v2ex.com/gravatar/65ee8f082f01eaea1669c0e65e7f6a5f?s=24&d=retro","avatar_normal":"https://cdn.v2ex.com/gravatar/65ee8f082f01eaea1669c0e65e7f6a5f?s=48&d=retro","avatar_large":"https://cdn.v2ex.com/gravatar/65ee8f082f01eaea1669c0e65e7f6a5f?s=73&d=retro","created":1467860142,"last_modified":1467860142},"last_reply_by":"Desiree","last_touched":1657417250,"title":"自己制作了一套 React18+Nestjs 的全栈开发教程","url":"https://www.v2ex.com/t/865220","created":1657420850,"deleted":0,"content":"> 本教程部分视频也会在 V2EX 更新\r\n\r\n本人从 08 年到 18 年一直从事于 PHP 的开发。从 18 年开始转向 Typescript+React+Nestjs 的技术栈。目前来说 React 应该是一个非常好用的前端框架，生态非常完善，并且十分灵活简单。Nestjs 则是 Node.js 中唯一且无敌存在的后端 web 框架。因为我个人从事这套技术栈开发已经 4 年多，所以颇有心得，做了这套 React18 视频教程和 Nestjs 实战视频教程。现在视频教程也是刚刚开始做了一部分，还在持续更新。使用 TS 全栈开发可以基本涵盖各种平台的方方面面，比如开发桌面应用的 Electron,开发小程序的 Taro,开发 Spa 中后台的 React ，开发 SSR 网站的 next.js ，开发移动应用的 React Native,开发 CLI 的 Yargs,以及开发后端的 Nestjs 。\r\n\r\n基本学会一套，全面够用，再加上 Monorepo 组织结构，一个仓库所有平台都可以搞定。\r\n\r\n我制作的这个 TS+React18+Nestjs 的全栈开发体系类的实战教程，包括周边的 Electron,RN,Taro 等都会讲解，当然不包含 TS 或 ES6 基础语法这些网上文档满天飞的，主要是以项目实际开发为主，所以每套子教程都命名成最佳实践，比如《 React18 最佳实践》，《 Nestjs 最佳实践》等，想要学习的同学可以在我的小站哦平克小站或者平克教程里学习，有问题也可以加群讨论。","content_rendered":"<blockquote>\n<p>本教程部分视频也会在 V2EX 更新</p>\n</blockquote>\n<p>本人从 08 年到 18 年一直从事于 PHP 的开发。从 18 年开始转向 Typescript+React+Nestjs 的技术栈。目前来说 React 应该是一个非常好用的前端框架，生态非常完善，并且十分灵活简单。Nestjs 则是 Node.js 中唯一且无敌存在的后端 web 框架。因为我个人从事这套技术栈开发已经 4 年多，所以颇有心得，做了这套 React18 视频教程和 Nestjs 实战视频教程。现在视频教程也是刚刚开始做了一部分，还在持续更新。使用 TS 全栈开发可以基本涵盖各种平台的方方面面，比如开发桌面应用的 Electron,开发小程序的 Taro,开发 Spa 中后台的 React ，开发 SSR 网站的 next.js ，开发移动应用的 React Native,开发 CLI 的 Yargs,以及开发后端的 Nestjs 。</p>\n<p>基本学会一套，全面够用，再加上 Monorepo 组织结构，一个仓库所有平台都可以搞定。</p>\n<p>我制作的这个 TS+React18+Nestjs 的全栈开发体系类的实战教程，包括周边的 Electron,RN,Taro 等都会讲解，当然不包含 TS 或 ES6 基础语法这些网上文档满天飞的，主要是以项目实际开发为主，所以每套子教程都命名成最佳实践，比如《 React18 最佳实践》，《 Nestjs 最佳实践》等，想要学习的同学可以在我的小站哦平克小站或者平克教程里学习，有问题也可以加群讨论。</p>\n","last_modified":1657420850,"replies":7,"id":865220},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/fc49/0ca4/65_large.png?m=1524891806","name":"google","avatar_normal":"https://cdn.v2ex.com/navatar/fc49/0ca4/65_normal.png?m=1524891806","title":"Google","url":"https://www.v2ex.com/go/google","topics":2834,"footer":"","header":"Google’s mission is to organize the world’s information and make it universally accessible and useful.","title_alternative":"Google","avatar_mini":"https://cdn.v2ex.com/navatar/fc49/0ca4/65_mini.png?m=1524891806","stars":3409,"aliases":[],"root":false,"id":65,"parent_node_name":"internet"},"member":{"id":60109,"username":"Biwood","url":"https://www.v2ex.com/u/Biwood","website":"","twitter":"","psn":"","github":"oodzchen","btc":"","location":"","tagline":"","bio":"web developer","avatar_mini":"https://cdn.v2ex.com/avatar/4473/d870/60109_mini.png?m=1657438476","avatar_normal":"https://cdn.v2ex.com/avatar/4473/d870/60109_normal.png?m=1657438476","avatar_large":"https://cdn.v2ex.com/avatar/4473/d870/60109_large.png?m=1657438476","created":1397149800,"last_modified":1657438476},"last_reply_by":"Thymolblue","last_touched":1657440865,"title":"头条搜索（m.toutiao.com）最近攻占了 Google 中文结果页？","url":"https://www.v2ex.com/t/865254","created":1657438678,"deleted":0,"content":"最近用 Google 搜中文内容几乎每次都能看到头条搜索的结果，而且点进去之后不能直接看到内容，而是把关键词带过去,显示他们自家的搜索结果。说实话，给出来的结果也没有点击的欲望，只觉得很奇怪，这又是什么奇技淫巧？\r\n\r\n比如我 Google 搜索“生火”，第一页就能看到头条的搜索结果\r\nhttps://i.v2ex.co/0ze8QQI8.jpeg\r\n\r\n点进去之后就是头条自家的搜索界面 https://i.v2ex.co/D1isC754.jpeg\r\n\r\n他家网站在中文内容区权重还挺高的，不过这导流风格有点像 kknews 这一类的内容农场。","content_rendered":"<p>最近用 Google 搜中文内容几乎每次都能看到头条搜索的结果，而且点进去之后不能直接看到内容，而是把关键词带过去,显示他们自家的搜索结果。说实话，给出来的结果也没有点击的欲望，只觉得很奇怪，这又是什么奇技淫巧？</p>\n<p>比如我 Google 搜索“生火”，第一页就能看到头条的搜索结果\n<a href=\"https://i.v2ex.co/0ze8QQI8.jpeg\" rel=\"nofollow\">https://i.v2ex.co/0ze8QQI8.jpeg</a></p>\n<p>点进去之后就是头条自家的搜索界面 <a href=\"https://i.v2ex.co/D1isC754.jpeg\" rel=\"nofollow\">https://i.v2ex.co/D1isC754.jpeg</a></p>\n<p>他家网站在中文内容区权重还挺高的，不过这导流风格有点像 kknews 这一类的内容农场。</p>\n","last_modified":1657438678,"replies":6,"id":865254},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/6cdd/60ea/184_large.png?m=1630643913","name":"apple","avatar_normal":"https://cdn.v2ex.com/navatar/6cdd/60ea/184_normal.png?m=1630643913","title":"Apple","url":"https://www.v2ex.com/go/apple","topics":18958,"footer":"","header":"设计了 <a href=\"/go/watch\">Apple Watch</a>，<a href=\"/go/ipad\">iPad</a>，<a href=\"/go/iphone\">iPhone</a>，<a href=\"/go/imac\">iMac</a> 及 <a href=\"/go/mbp\">MacBook Pro</a> 等电子产品的美国公司。","title_alternative":"Apple","avatar_mini":"https://cdn.v2ex.com/navatar/6cdd/60ea/184_mini.png?m=1630643913","stars":2213,"aliases":[],"root":false,"id":184,"parent_node_name":"hardware"},"member":{"id":568500,"username":"BigDi","url":"https://www.v2ex.com/u/BigDi","website":null,"twitter":null,"psn":null,"github":null,"btc":null,"location":null,"tagline":null,"bio":null,"avatar_mini":"https://cdn.v2ex.com/avatar/c81b/ee43/568500_mini.png?m=1655901823","avatar_normal":"https://cdn.v2ex.com/avatar/c81b/ee43/568500_normal.png?m=1655901823","avatar_large":"https://cdn.v2ex.com/avatar/c81b/ee43/568500_large.png?m=1655901823","avatar_xlarge":"https://cdn.v2ex.com/avatar/c81b/ee43/568500_xlarge.png?m=1655901823","created":1641782608,"last_modified":1655901823},"last_reply_by":"sapphires","last_touched":1657441630,"title":"Apple One 美区 空出 1 座位 99/季，长期稳定的来！","url":"https://www.v2ex.com/t/865253","created":1657438288,"deleted":0,"content":"美区\r\n\r\n99 季付送 Infuse Pro 共享，中间退出不补不退\r\n\r\n2T icloud 空间平分，340G 每人\r\n\r\n需要长期一起驾车的来哦，找车友也费精费神的","content_rendered":"<p>美区</p>\n<p>99 季付送 Infuse Pro 共享，中间退出不补不退</p>\n<p>2T icloud 空间平分，340G 每人</p>\n<p>需要长期一起驾车的来哦，找车友也费精费神的</p>\n","last_modified":1657438555,"replies":6,"id":865253},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1656605007","name":"programmer","avatar_normal":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1656605007","title":"程序员","url":"https://www.v2ex.com/go/programmer","topics":49689,"footer":"","header":"While code monkeys are not eating bananas, they're coding.","title_alternative":"Programmer","avatar_mini":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1656605007","stars":7890,"aliases":[],"root":false,"id":300,"parent_node_name":"computer"},"member":{"id":431158,"username":"xieqiqiang00","url":"https://www.v2ex.com/u/xieqiqiang00","website":"","twitter":null,"psn":null,"github":null,"btc":null,"location":"","tagline":"","bio":"","avatar_mini":"https://cdn.v2ex.com/avatar/2a2a/ed0f/431158_mini.png?m=1654511732","avatar_normal":"https://cdn.v2ex.com/avatar/2a2a/ed0f/431158_normal.png?m=1654511732","avatar_large":"https://cdn.v2ex.com/avatar/2a2a/ed0f/431158_large.png?m=1654511732","avatar_xlarge":"https://cdn.v2ex.com/avatar/2a2a/ed0f/431158_xlarge.png?m=1654511732","avatar_xxlarge":"https://cdn.v2ex.com/avatar/2a2a/ed0f/431158_xlarge.png?m=1654511732","avatar_xxxlarge":"https://cdn.v2ex.com/avatar/2a2a/ed0f/431158_xlarge.png?m=1654511732","created":1563785579,"last_modified":1654511732},"last_reply_by":"limonchoms","last_touched":1657408993,"title":"我自己指向内网的域名都被污染了","url":"https://www.v2ex.com/t/865252","created":1657437853,"deleted":0,"content":"给自己的 NAS 整了个域名，指向的是 192.168\r\n结果我刚才连不上，发现解析出来是 198.18.0.33\r\n这都要管？","content_rendered":"给自己的 NAS 整了个域名，指向的是 192.168<br />结果我刚才连不上，发现解析出来是 198.18.0.33<br />这都要管？","last_modified":1657437864,"replies":6,"id":865252},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/d3d9/4468/10_large.png?m=1630643933","name":"mbp","avatar_normal":"https://cdn.v2ex.com/navatar/d3d9/4468/10_normal.png?m=1630643933","title":"MacBook Pro","url":"https://www.v2ex.com/go/mbp","topics":8116,"footer":"","header":"State-of-the-art processors. All-new graphics. Breakthrough high-speed I/O. Three very big leaps forward.","title_alternative":"MacBook Pro","avatar_mini":"https://cdn.v2ex.com/navatar/d3d9/4468/10_mini.png?m=1630643933","stars":3126,"aliases":[],"root":false,"id":10,"parent_node_name":"apple"},"member":{"id":470005,"username":"Naykcin","url":"https://www.v2ex.com/u/Naykcin","website":"","twitter":"","psn":"","github":"","btc":"","location":"","tagline":"","bio":"","avatar_mini":"https://cdn.v2ex.com/avatar/4f3e/d14d/470005_mini.png?m=1657436344","avatar_normal":"https://cdn.v2ex.com/avatar/4f3e/d14d/470005_normal.png?m=1657436344","avatar_large":"https://cdn.v2ex.com/avatar/4f3e/d14d/470005_large.png?m=1657436344","avatar_xlarge":"https://cdn.v2ex.com/avatar/4f3e/d14d/470005_xlarge.png?m=1657436344","avatar_xxlarge":"https://cdn.v2ex.com/avatar/4f3e/d14d/470005_xlarge.png?m=1657436344","avatar_xxxlarge":"https://cdn.v2ex.com/avatar/4f3e/d14d/470005_xlarge.png?m=1657436344","created":1582047812,"last_modified":1657436344},"last_reply_by":"Naykcin","last_touched":1657437609,"title":"[请教] Studio Display 似乎没有跑满雷雳 3 的 40Gbps 传输速度","url":"https://www.v2ex.com/t/865249","created":1657437033,"deleted":0,"content":"起因：我的 Mac 处理器是 2.4 GHz 四核 Intel Core i5 ，最近新买了 Studio Display 显示器，其他使用正常，但在打开调度中心的时候，肉眼可见的非常卡顿。\r\n\r\n\r\n一开始我认为是 i5 芯片比较老旧，已经拉不动 Studio Display 这辆「大车」了，可是后来我打开系统信息一看，Studio Display 的传输速率竟然只有 USB 2.0 的 480 Mbps ！而 Samsung T7 则是 USB 3.1 G2 正常的 10 Gbps （如图），WTF 。。。\r\n\r\n\r\n想请问下其他 V 友在使用 Studio Display 时是否有同样的问题？你们的 Mac 在连接显示器时的传输速率是？\r\n\r\n\r\nMacBook Pro (13-inch, 2019, Four Thunderbolt 3 ports)\r\n\r\n处理器：2.4 GHz 四核 Intel Core i5\r\n\r\n系统版本：macOS Monterey 12.4\r\n\r\n图形卡：Intel Iris Plus Graphics 655 1536 MB\r\n\r\n连接线材：购买 Studio Display 附赠的雷雳连接线\r\n\r\n\r\nSamsung T7:\r\n\r\n\r\n![b498908aa128c2f33ce6f27b7ac251ae.jpg]( https://us1.myximage.com/2022/07/10/b498908aa128c2f33ce6f27b7ac251ae.jpg)\r\n\r\n\r\nStudio Display:\r\n\r\n\r\n![bf319ce490dfeae9a2e6e0de7a9daad4.jpg]( https://us1.myximage.com/2022/07/10/bf319ce490dfeae9a2e6e0de7a9daad4.jpg)","content_rendered":"<p>起因：我的 Mac 处理器是 2.4 GHz 四核 Intel Core i5 ，最近新买了 Studio Display 显示器，其他使用正常，但在打开调度中心的时候，肉眼可见的非常卡顿。</p>\n<p>一开始我认为是 i5 芯片比较老旧，已经拉不动 Studio Display 这辆「大车」了，可是后来我打开系统信息一看，Studio Display 的传输速率竟然只有 USB 2.0 的 480 Mbps ！而 Samsung T7 则是 USB 3.1 G2 正常的 10 Gbps （如图），WTF 。。。</p>\n<p>想请问下其他 V 友在使用 Studio Display 时是否有同样的问题？你们的 Mac 在连接显示器时的传输速率是？</p>\n<p>MacBook Pro (13-inch, 2019, Four Thunderbolt 3 ports)</p>\n<p>处理器：2.4 GHz 四核 Intel Core i5</p>\n<p>系统版本：macOS Monterey 12.4</p>\n<p>图形卡：Intel Iris Plus Graphics 655 1536 MB</p>\n<p>连接线材：购买 Studio Display 附赠的雷雳连接线</p>\n<p>Samsung T7:</p>\n<p><img alt=\"b498908aa128c2f33ce6f27b7ac251ae.jpg\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://us1.myximage.com/2022/07/10/b498908aa128c2f33ce6f27b7ac251ae.jpg\"/></p>\n<p>Studio Display:</p>\n<p><img alt=\"bf319ce490dfeae9a2e6e0de7a9daad4.jpg\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://us1.myximage.com/2022/07/10/bf319ce490dfeae9a2e6e0de7a9daad4.jpg\"/></p>\n","last_modified":1657437033,"replies":6,"id":865249},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1650095340","name":"qna","avatar_normal":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1650095340","title":"问与答","url":"https://www.v2ex.com/go/qna","topics":187153,"footer":"","header":"一个更好的世界需要你持续地提出好问题。","title_alternative":"Questions and Answers","avatar_mini":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1650095340","stars":3508,"aliases":[],"root":false,"id":12,"parent_node_name":"v2ex"},"member":{"id":531564,"username":"ghmum","url":"https://www.v2ex.com/u/ghmum","website":null,"twitter":null,"psn":null,"github":null,"btc":null,"location":null,"tagline":null,"bio":null,"avatar_mini":"https://cdn.v2ex.com/gravatar/20df4054a3fad9d7da357dcef2ecf8b6?s=24&d=retro","avatar_normal":"https://cdn.v2ex.com/gravatar/20df4054a3fad9d7da357dcef2ecf8b6?s=48&d=retro","avatar_large":"https://cdn.v2ex.com/gravatar/20df4054a3fad9d7da357dcef2ecf8b6?s=73&d=retro","created":1612180125,"last_modified":1655766135},"last_reply_by":"youbaoer","last_touched":1657436354,"title":"求推荐一款手环","url":"https://www.v2ex.com/t/865237","created":1657430593,"deleted":0,"content":"用手机看时间不太方便，求各位大佬推荐一款手环，要求如下：\r\n\r\n- 最好能够息屏显示。拿起来等着他亮很烦人\r\n- 要 nfc 功能，如果我录入门禁卡，公交卡，楼道卡，能够自动选择卡，如果还要自己点选卡，还不如实体卡来的方便\r\n- 配合 ios 使用\r\n- 待机时间尽量长一点\r\n- 能够来电手环提醒，能看短信最好，不能也无所谓。能提醒 ios 推送到手机的消息","content_rendered":"<p>用手机看时间不太方便，求各位大佬推荐一款手环，要求如下：</p>\n<ul>\n<li>最好能够息屏显示。拿起来等着他亮很烦人</li>\n<li>要 nfc 功能，如果我录入门禁卡，公交卡，楼道卡，能够自动选择卡，如果还要自己点选卡，还不如实体卡来的方便</li>\n<li>配合 ios 使用</li>\n<li>待机时间尽量长一点</li>\n<li>能够来电手环提醒，能看短信最好，不能也无所谓。能提醒 ios 推送到手机的消息</li>\n</ul>\n","last_modified":1657430593,"replies":6,"id":865237},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/2421/fcb1/436_large.png?m=1650095204","name":"nodejs","avatar_normal":"https://cdn.v2ex.com/navatar/2421/fcb1/436_normal.png?m=1650095204","title":"Node.js","url":"https://www.v2ex.com/go/nodejs","topics":2280,"footer":"","header":"Node.js is a platform built on <a href=\"http://code.google.com/p/v8/\" target=\"_blank\">Chrome's JavaScript runtime</a> for easily building fast, scalable network applications.","title_alternative":"Node.js","avatar_mini":"https://cdn.v2ex.com/navatar/2421/fcb1/436_mini.png?m=1650095204","stars":2732,"aliases":[],"root":false,"id":436,"parent_node_name":"js"},"member":{"id":180710,"username":"lichnow","url":"https://www.v2ex.com/u/lichnow","website":null,"twitter":null,"psn":null,"github":null,"btc":null,"location":null,"tagline":null,"bio":null,"avatar_mini":"https://cdn.v2ex.com/gravatar/65ee8f082f01eaea1669c0e65e7f6a5f?s=24&d=retro","avatar_normal":"https://cdn.v2ex.com/gravatar/65ee8f082f01eaea1669c0e65e7f6a5f?s=48&d=retro","avatar_large":"https://cdn.v2ex.com/gravatar/65ee8f082f01eaea1669c0e65e7f6a5f?s=73&d=retro","created":1467860142,"last_modified":1467860142},"last_reply_by":"lichnow","last_touched":1657425570,"title":"Nestjs 最佳实践教程:4 排序,分页与过滤","url":"https://www.v2ex.com/t/865211","created":1657417539,"deleted":0,"content":"- 教程地址: https://v.pincman.com/courses/64.html\r\n- 视频地址: https://www.bilibili.com/video/BV1DZ4y1Y78S?spm_id_from=333.999.0.0&vd_source=6ed9f449094fe5d35bc09c3feee1c8e2\r\n- qq: 1849600177\r\n- qq 群: 455820533\r\n\r\n> 另，本人在找工作中，希望能有远程工作匹配(无法去外地)，有需要的老板可以看一下我的个人介绍： https://pincman.com/about\r\n\r\n## 学习目标\r\n\r\n* 重载 TreeRepository 自带方法来对树形结构的数据进行扁平化处理\r\n* 对 Typeorm 查询出的数据列表进行分页处理\r\n* 通过请求中的 query 查询对数据进行筛选处理,比如排序,过滤等\r\n* 实现发布文章和取消发布的功能\r\n* Typeorm 模型事件和 Subscriber(订阅者)的使用\r\n* 使用`sanitize-html`对文章内容进行防注入攻击处理\r\n\r\n## 预装依赖\r\n\r\n* [nestjs-typeorm-paginate]( https://github.com/nestjsx/nestjs-typeorm-paginate)实现分页\r\n* [sanitize-html]( https://github.com/apostrophecms/sanitize-html)过滤`html`标签,防注入攻击\r\n* [deepmerge]( https://github.com/TehShrike/deepmerge)深度合并对象\r\n\r\n```shell\r\n~ pnpm add nestjs-typeorm-paginate sanitize-html deepmerge && pnpm add @types/sanitize-html -D\r\n```\r\n\r\n## 文件结构\r\n创建文件\r\n\r\n```shell\r\ncd src/modules/content && \\\r\nmkdir subscribers && \\\r\ntouch dtos/query-category.dto.ts \\\r\ndtos/query-post.dto.ts \\\r\nsubscribers/post.subscriber.ts \\\r\nsubscribers/index.ts \\\r\nservices/sanitize.service.ts \\\r\n&& cd ../../../\r\n```\r\n\r\n与上一节一样,这一节的新增和修改集中于`ContentModule`\r\n\r\n```\r\nsrc/modules/content\r\n├── constants.ts\r\n├── content.module.ts\r\n├── controllers\r\n│   ├── category.controller.ts\r\n│   ├── comment.controller.ts\r\n│   ├── index.ts\r\n│   └── post.controller.ts\r\n├── dtos\r\n│   ├── create-category.dto.ts\r\n│   ├── create-comment.dto.ts\r\n│   ├── create-post.dto.ts\r\n│   ├── index.ts\r\n│   ├── query-category.dto.ts\r\n│   ├── query-post.dto.ts\r\n│   ├── update-category.dto.ts\r\n│   └── update-post.dto.ts\r\n├── entities\r\n│   ├── category.entity.ts\r\n│   ├── comment.entity.ts\r\n│   ├── index.ts\r\n│   └── post.entity.ts\r\n├── repositories\r\n│   ├── category.repository.ts\r\n│   ├── comment.repository.ts\r\n│   ├── index.ts\r\n│   └── post.repository.ts\r\n├── services\r\n│   ├── category.service.ts\r\n│   ├── comment.service.ts\r\n│   ├── index.ts\r\n│   ├── post.service.ts\r\n│   └── sanitize.service.ts\r\n└── subscribers\r\n    ├── index.ts\r\n    └── post.subscriber.ts\r\n```\r\n\r\n## 应用编码\r\n\r\n这节多了一个新的概念,即`subscriber`,具体请查阅`typeorm`文档,当然你也可以在模型中使用事件处理函数,效果没差别\r\n\r\n### 模型\r\n\r\n#### `CategoryEntity`\r\n\r\n*代码:src/modules/content/entities/category.entity.ts*\r\n\r\n* 添加`order`字段用于排序\r\n* 添加`level`属性(虚拟字段)用于在打平树形数据的时候添加当前项的等级\r\n\r\n#### PostEntity\r\n\r\n*代码: src/modules/content/entities/post.entity.ts*\r\n\r\n`type`字段的类型用`enum`枚举来设置,首先需要定义一个`PostBodyType`的`enum`类型,可以添加一个`constants.ts`文件来统一定义这些`enum`和常量\r\n\r\n* 添加`publishedAt`字段用于控制发布时间和发布状态\r\n* 添加` type`字段用于设置发布类型\r\n* 添加`customOrder`字段用于自定义排序\r\n\r\n### 存储类\r\n\r\n#### `CategoryRepository`\r\n\r\n*代码: src/modules/content/repositories/category.repository.ts*\r\n\r\n因为`CategoryRepository`继承自`TreeRepository`,所以我们在`typeorm`源码中找到这个类,并对部分方法进行覆盖,如此我们就可以对树形分类进行排序,覆盖的方法如下\r\n\r\n> 当然后面会讲到更加深入的再次封装,此处暂时先这么用\r\n\r\n* `findRoots` 为根分类列表查询添加排序\r\n* `createDescendantsQueryBuilder` 为子孙分类查询器添加排序\r\n* `createAncestorsQueryBuilder` 为祖先分类查询器添加排序\r\n\r\n### DTO 验证\r\n\r\n新增`QueryCategoryDto`和`QueryPostDto`用于查询分类和文章时进行分页以及过滤数据和设置排序类型等\r\n\r\n在添加`DTO`之前,现在添加几个数据转义函数,以便把请求中的字符串改成需要的数据类型\r\n\r\n```\r\n// src/core/helpers.ts\r\n\r\n// 用于请求验证中的 number 数据转义\r\nexport function tNumber(value?: string | number): string |number | undefined\r\n// 用于请求验证中的 boolean 数据转义\r\nexport function tBoolean(value?: string | boolean): string |boolean | undefined\r\n// 用于请求验证中转义 null\r\nexport function tNull(value?: string | null): string | null | undefined\r\n```\r\n\r\n修改`create-category.dto.ts`和`create-comment.dto.ts`的`parent`字段的`@Transform`装饰器\r\n\r\n```\r\nexport class CreateCategoryDto {\r\n...\r\n    @Transform(({ value }) => tNull(value))\r\n    parent?: string;\r\n}\r\n```\r\n\r\n添加一个通用的`DTO`接口类型\r\n\r\n```\r\n// src/core/types.ts\r\n\r\n// 分页验证 DTO 接口\r\nexport interface PaginateDto {\r\n    page: number;\r\n    limit: number;\r\n}\r\n```\r\n\r\n#### `QueryCategoryDto`\r\n\r\n*代码: src/modules/content/dtos/query-category.dto.ts*\r\n\r\n* `page`属性设置当前分页\r\n* `limit`属性设置每页数据量\r\n\r\n#### `QueryPostDto`\r\n\r\n除了与`QueryCateogryDto`一样的分页属性外,其它属性如下\r\n\r\n* `orderBy`用于设置排序类型\r\n* `isPublished`根据发布状态过滤文章\r\n* `category`过滤出一下分类及其子孙分类下的文章\r\n\r\n`orderBy`字段是一个`enum`类型的字段,它的可取值如下\r\n\r\n* `CREATED`: 根据创建时间降序\r\n* `UPDATED`: 根据更新时间降序\r\n* `PUBLISHED`: 根据发布时间降序\r\n* `COMMENTCOUNT`: 根据评论数量降序\r\n* `CUSTOM`: 根据自定义的`order`字段升序\r\n\r\n### 服务类\r\n\r\n#### `SanitizeService`\r\n\r\n*代码: src/modules/content/services/sanitize.service.ts*\r\n\r\n此服务类用于`clean html`\r\n\r\n`sanitize`方法用于对 HTML 数据进行防注入处理\r\n\r\n#### `CategoryService`\r\n\r\n*代码:src/modules/content/services/category.service.ts*\r\n\r\n添加一个辅助函数,用于对打平后的树形数据进行分页\r\n\r\n```\r\n// src/core/helpers.ts\r\nexport function manualPaginate<T extends ObjectLiteral>(\r\n    { page, limit }: PaginateDto,\r\n    data: T[],\r\n): Pagination<T>\r\n```\r\n\r\n新增`paginate(query: QueryCategoryDto)`方法用于处理分页\r\n\r\n```\r\nasync paginate(query: QueryCategoryDto) {\r\n    // 获取树形数据\r\n    const tree = await this.findTrees();\r\n    // 打平树形数据\r\n    const list = await this.categoryRepository.toFlatTrees(tree);\r\n    // 调用手动分页函数进行分页\r\n    return manualPaginate(query, list);\r\n}\r\n```\r\n\r\n#### `PostService`\r\n\r\n*代码:src/modules/content/services/post.service.ts*\r\n\r\n* `getListQuery`: 用于构建过滤与排序以及通过分类查询文章数据等功能的`query`构建器\r\n* `paginate`: 调用`getListQuery`生成`query`,并作为`nestjs-typeorm-paginate`的` paginate`的参数对数据进行分页\r\n\r\n```\r\nasync paginate(params: FindParams, options: IPaginationOptions) {\r\n    const query = await this.getListQuery(params);\r\n    return paginate<PostEntity>(query, options);\r\n}\r\n```\r\n\r\n### 订阅者\r\n\r\n#### `PostSubscriber`\r\n\r\n*代码: src/modules/content/subscribers/post.subscriber.ts*\r\n\r\n* `beforeInsert`(插入数据前事件): 如果在添加文章的同时发布文章,则设置当前时间为发布时间\r\n* `beforeUpdate`(更新数据前事件): 更改发布状态会同时更新发布时间的值,如果文章更新为未发布状态,则把发布时间设置为 null\r\n* `afterLoad`(加载数据后事件): 对 HTML 类型的文章内容进行去标签处理防止注入攻击\r\n\r\n**一个需要注意的点是需要在**`subcriber`类的构造函数中注入`Connection`才能获取链接\r\n\r\n```\r\n   constructor(\r\n        connection: Connection,\r\n        protected sanitizeService: SanitizeService,\r\n    ) {\r\n        connection.subscribers.push(this);\r\n    }\r\n```\r\n\r\n#### 注册订阅者\r\n\r\n把订阅者注册成服务后,由于在构造函数中注入了`connection`这个连接对象,所以`typeorm`会自动把它加载到这个默认连接的`subscribers`配置中\r\n\r\n```\r\n// src/modules/content/subscribers/post.subscriber.ts\r\nimport * as SubscriberMaps from './subscribers';\r\nconst subscribers = Object.values(SubscriberMaps);\r\n@Module({\r\n    ....\r\n    providers: [...subscribers, ...dtos, ...services],\r\n})\r\n```\r\n\r\n### 控制器\r\n\r\n#### `CategoryController`\r\n\r\n*代码: src/modules/content/controllers/category.controller.ts*\r\n\r\n* `list`: 通过分页来查找扁平化的分类列表\r\n* `index`: 把 url 设置成` @Get('tree')`\r\n\r\n```\r\n    @Get()\r\n    // 分页查询\r\n    async list(\r\n        @Query(\r\n            new ValidationPipe({\r\n                transform: true,\r\n                forbidUnknownValues: true,\r\n                validationError: { target: false },\r\n            }),\r\n        )\r\n        query: QueryCategoryDto,\r\n    ) {\r\n        return this.categoryService.paginate(query);\r\n    }\r\n\r\n    // 查询树形分类\r\n    @Get('tree')\r\n    async index() {\r\n        return this.categoryService.findTrees();\r\n    }\r\n```\r\n\r\n#### `PostController`\r\n\r\n**代码: src/modules/content/controllers/post.controller.ts**\r\n\r\n修改`index`方法用于分页查询\r\n\r\n```\r\n// 通过分页查询数据\r\nasync index(\r\n        @Query(\r\n            new ValidationPipe({\r\n                transform: true,\r\n                forbidUnknownValues: true,\r\n                validationError: { target: false },\r\n            }),\r\n        )\r\n        { page, limit, ...params }: QueryPostDto,\r\n    ) {\r\n        return this.postService.paginate(params, { page, limit });\r\n    }\r\n```","content_rendered":"<ul>\n<li>教程地址: <a href=\"https://v.pincman.com/courses/64.html\" rel=\"nofollow\">https://v.pincman.com/courses/64.html</a></li>\n<li>视频地址: <a href=\"https://www.bilibili.com/video/BV1DZ4y1Y78S?spm_id_from=333.999.0.0&amp;vd_source=6ed9f449094fe5d35bc09c3feee1c8e2\" rel=\"nofollow\">https://www.bilibili.com/video/BV1DZ4y1Y78S?spm_id_from=333.999.0.0&amp;vd_source=6ed9f449094fe5d35bc09c3feee1c8e2</a></li>\n<li>qq: 1849600177</li>\n<li>qq 群: 455820533</li>\n</ul>\n<blockquote>\n<p>另，本人在找工作中，希望能有远程工作匹配(无法去外地)，有需要的老板可以看一下我的个人介绍： <a href=\"https://pincman.com/about\" rel=\"nofollow\">https://pincman.com/about</a></p>\n</blockquote>\n<h2>学习目标</h2>\n<ul>\n<li>重载 TreeRepository 自带方法来对树形结构的数据进行扁平化处理</li>\n<li>对 Typeorm 查询出的数据列表进行分页处理</li>\n<li>通过请求中的 query 查询对数据进行筛选处理,比如排序,过滤等</li>\n<li>实现发布文章和取消发布的功能</li>\n<li>Typeorm 模型事件和 Subscriber(订阅者)的使用</li>\n<li>使用<code>sanitize-html</code>对文章内容进行防注入攻击处理</li>\n</ul>\n<h2>预装依赖</h2>\n<ul>\n<li><a href=\"https://github.com/nestjsx/nestjs-typeorm-paginate\" rel=\"nofollow\">nestjs-typeorm-paginate</a>实现分页</li>\n<li><a href=\"https://github.com/apostrophecms/sanitize-html\" rel=\"nofollow\">sanitize-html</a>过滤<code>html</code>标签,防注入攻击</li>\n<li><a href=\"https://github.com/TehShrike/deepmerge\" rel=\"nofollow\">deepmerge</a>深度合并对象</li>\n</ul>\n<pre><code class=\"language-shell\">~ pnpm add nestjs-typeorm-paginate sanitize-html deepmerge &amp;&amp; pnpm add @types/sanitize-html -D\n</code></pre>\n<h2>文件结构</h2>\n<p>创建文件</p>\n<pre><code class=\"language-shell\">cd src/modules/content &amp;&amp; \\\nmkdir subscribers &amp;&amp; \\\ntouch dtos/query-category.dto.ts \\\ndtos/query-post.dto.ts \\\nsubscribers/post.subscriber.ts \\\nsubscribers/index.ts \\\nservices/sanitize.service.ts \\\n&amp;&amp; cd ../../../\n</code></pre>\n<p>与上一节一样,这一节的新增和修改集中于<code>ContentModule</code></p>\n<pre><code>src/modules/content\n├── constants.ts\n├── content.module.ts\n├── controllers\n│   ├── category.controller.ts\n│   ├── comment.controller.ts\n│   ├── index.ts\n│   └── post.controller.ts\n├── dtos\n│   ├── create-category.dto.ts\n│   ├── create-comment.dto.ts\n│   ├── create-post.dto.ts\n│   ├── index.ts\n│   ├── query-category.dto.ts\n│   ├── query-post.dto.ts\n│   ├── update-category.dto.ts\n│   └── update-post.dto.ts\n├── entities\n│   ├── category.entity.ts\n│   ├── comment.entity.ts\n│   ├── index.ts\n│   └── post.entity.ts\n├── repositories\n│   ├── category.repository.ts\n│   ├── comment.repository.ts\n│   ├── index.ts\n│   └── post.repository.ts\n├── services\n│   ├── category.service.ts\n│   ├── comment.service.ts\n│   ├── index.ts\n│   ├── post.service.ts\n│   └── sanitize.service.ts\n└── subscribers\n    ├── index.ts\n    └── post.subscriber.ts\n</code></pre>\n<h2>应用编码</h2>\n<p>这节多了一个新的概念,即<code>subscriber</code>,具体请查阅<code>typeorm</code>文档,当然你也可以在模型中使用事件处理函数,效果没差别</p>\n<h3>模型</h3>\n<h4><code>CategoryEntity</code></h4>\n<p><em>代码:src/modules/content/entities/category.entity.ts</em></p>\n<ul>\n<li>添加<code>order</code>字段用于排序</li>\n<li>添加<code>level</code>属性(虚拟字段)用于在打平树形数据的时候添加当前项的等级</li>\n</ul>\n<h4>PostEntity</h4>\n<p><em>代码: src/modules/content/entities/post.entity.ts</em></p>\n<p><code>type</code>字段的类型用<code>enum</code>枚举来设置,首先需要定义一个<code>PostBodyType</code>的<code>enum</code>类型,可以添加一个<code>constants.ts</code>文件来统一定义这些<code>enum</code>和常量</p>\n<ul>\n<li>添加<code>publishedAt</code>字段用于控制发布时间和发布状态</li>\n<li>添加<code> type</code>字段用于设置发布类型</li>\n<li>添加<code>customOrder</code>字段用于自定义排序</li>\n</ul>\n<h3>存储类</h3>\n<h4><code>CategoryRepository</code></h4>\n<p><em>代码: src/modules/content/repositories/category.repository.ts</em></p>\n<p>因为<code>CategoryRepository</code>继承自<code>TreeRepository</code>,所以我们在<code>typeorm</code>源码中找到这个类,并对部分方法进行覆盖,如此我们就可以对树形分类进行排序,覆盖的方法如下</p>\n<blockquote>\n<p>当然后面会讲到更加深入的再次封装,此处暂时先这么用</p>\n</blockquote>\n<ul>\n<li><code>findRoots</code> 为根分类列表查询添加排序</li>\n<li><code>createDescendantsQueryBuilder</code> 为子孙分类查询器添加排序</li>\n<li><code>createAncestorsQueryBuilder</code> 为祖先分类查询器添加排序</li>\n</ul>\n<h3>DTO 验证</h3>\n<p>新增<code>QueryCategoryDto</code>和<code>QueryPostDto</code>用于查询分类和文章时进行分页以及过滤数据和设置排序类型等</p>\n<p>在添加<code>DTO</code>之前,现在添加几个数据转义函数,以便把请求中的字符串改成需要的数据类型</p>\n<pre><code>// src/core/helpers.ts\n\n// 用于请求验证中的 number 数据转义\nexport function tNumber(value?: string | number): string |number | undefined\n// 用于请求验证中的 boolean 数据转义\nexport function tBoolean(value?: string | boolean): string |boolean | undefined\n// 用于请求验证中转义 null\nexport function tNull(value?: string | null): string | null | undefined\n</code></pre>\n<p>修改<code>create-category.dto.ts</code>和<code>create-comment.dto.ts</code>的<code>parent</code>字段的<code>@Transform</code>装饰器</p>\n<pre><code>export class CreateCategoryDto {\n...\n    @Transform(({ value }) =&gt; tNull(value))\n    parent?: string;\n}\n</code></pre>\n<p>添加一个通用的<code>DTO</code>接口类型</p>\n<pre><code>// src/core/types.ts\n\n// 分页验证 DTO 接口\nexport interface PaginateDto {\n    page: number;\n    limit: number;\n}\n</code></pre>\n<h4><code>QueryCategoryDto</code></h4>\n<p><em>代码: src/modules/content/dtos/query-category.dto.ts</em></p>\n<ul>\n<li><code>page</code>属性设置当前分页</li>\n<li><code>limit</code>属性设置每页数据量</li>\n</ul>\n<h4><code>QueryPostDto</code></h4>\n<p>除了与<code>QueryCateogryDto</code>一样的分页属性外,其它属性如下</p>\n<ul>\n<li><code>orderBy</code>用于设置排序类型</li>\n<li><code>isPublished</code>根据发布状态过滤文章</li>\n<li><code>category</code>过滤出一下分类及其子孙分类下的文章</li>\n</ul>\n<p><code>orderBy</code>字段是一个<code>enum</code>类型的字段,它的可取值如下</p>\n<ul>\n<li><code>CREATED</code>: 根据创建时间降序</li>\n<li><code>UPDATED</code>: 根据更新时间降序</li>\n<li><code>PUBLISHED</code>: 根据发布时间降序</li>\n<li><code>COMMENTCOUNT</code>: 根据评论数量降序</li>\n<li><code>CUSTOM</code>: 根据自定义的<code>order</code>字段升序</li>\n</ul>\n<h3>服务类</h3>\n<h4><code>SanitizeService</code></h4>\n<p><em>代码: src/modules/content/services/sanitize.service.ts</em></p>\n<p>此服务类用于<code>clean html</code></p>\n<p><code>sanitize</code>方法用于对 HTML 数据进行防注入处理</p>\n<h4><code>CategoryService</code></h4>\n<p><em>代码:src/modules/content/services/category.service.ts</em></p>\n<p>添加一个辅助函数,用于对打平后的树形数据进行分页</p>\n<pre><code>// src/core/helpers.ts\nexport function manualPaginate&lt;T extends ObjectLiteral&gt;(\n    { page, limit }: PaginateDto,\n    data: T[],\n): Pagination&lt;T&gt;\n</code></pre>\n<p>新增<code>paginate(query: QueryCategoryDto)</code>方法用于处理分页</p>\n<pre><code>async paginate(query: QueryCategoryDto) {\n    // 获取树形数据\n    const tree = await this.findTrees();\n    // 打平树形数据\n    const list = await this.categoryRepository.toFlatTrees(tree);\n    // 调用手动分页函数进行分页\n    return manualPaginate(query, list);\n}\n</code></pre>\n<h4><code>PostService</code></h4>\n<p><em>代码:src/modules/content/services/post.service.ts</em></p>\n<ul>\n<li><code>getListQuery</code>: 用于构建过滤与排序以及通过分类查询文章数据等功能的<code>query</code>构建器</li>\n<li><code>paginate</code>: 调用<code>getListQuery</code>生成<code>query</code>,并作为<code>nestjs-typeorm-paginate</code>的<code> paginate</code>的参数对数据进行分页</li>\n</ul>\n<pre><code>async paginate(params: FindParams, options: IPaginationOptions) {\n    const query = await this.getListQuery(params);\n    return paginate&lt;PostEntity&gt;(query, options);\n}\n</code></pre>\n<h3>订阅者</h3>\n<h4><code>PostSubscriber</code></h4>\n<p><em>代码: src/modules/content/subscribers/post.subscriber.ts</em></p>\n<ul>\n<li><code>beforeInsert</code>(插入数据前事件): 如果在添加文章的同时发布文章,则设置当前时间为发布时间</li>\n<li><code>beforeUpdate</code>(更新数据前事件): 更改发布状态会同时更新发布时间的值,如果文章更新为未发布状态,则把发布时间设置为 null</li>\n<li><code>afterLoad</code>(加载数据后事件): 对 HTML 类型的文章内容进行去标签处理防止注入攻击</li>\n</ul>\n<p><strong>一个需要注意的点是需要在</strong><code>subcriber</code>类的构造函数中注入<code>Connection</code>才能获取链接</p>\n<pre><code>   constructor(\n        connection: Connection,\n        protected sanitizeService: SanitizeService,\n    ) {\n        connection.subscribers.push(this);\n    }\n</code></pre>\n<h4>注册订阅者</h4>\n<p>把订阅者注册成服务后,由于在构造函数中注入了<code>connection</code>这个连接对象,所以<code>typeorm</code>会自动把它加载到这个默认连接的<code>subscribers</code>配置中</p>\n<pre><code>// src/modules/content/subscribers/post.subscriber.ts\nimport * as SubscriberMaps from './subscribers';\nconst subscribers = Object.values(SubscriberMaps);\n@Module({\n    ....\n    providers: [...subscribers, ...dtos, ...services],\n})\n</code></pre>\n<h3>控制器</h3>\n<h4><code>CategoryController</code></h4>\n<p><em>代码: src/modules/content/controllers/category.controller.ts</em></p>\n<ul>\n<li><code>list</code>: 通过分页来查找扁平化的分类列表</li>\n<li><code>index</code>: 把 url 设置成<code> @Get('tree')</code></li>\n</ul>\n<pre><code>    @Get()\n    // 分页查询\n    async list(\n        @Query(\n            new ValidationPipe({\n                transform: true,\n                forbidUnknownValues: true,\n                validationError: { target: false },\n            }),\n        )\n        query: QueryCategoryDto,\n    ) {\n        return this.categoryService.paginate(query);\n    }\n\n    // 查询树形分类\n    @Get('tree')\n    async index() {\n        return this.categoryService.findTrees();\n    }\n</code></pre>\n<h4><code>PostController</code></h4>\n<p><strong>代码: src/modules/content/controllers/post.controller.ts</strong></p>\n<p>修改<code>index</code>方法用于分页查询</p>\n<pre><code>// 通过分页查询数据\nasync index(\n        @Query(\n            new ValidationPipe({\n                transform: true,\n                forbidUnknownValues: true,\n                validationError: { target: false },\n            }),\n        )\n        { page, limit, ...params }: QueryPostDto,\n    ) {\n        return this.postService.paginate(params, { page, limit });\n    }\n</code></pre>\n","last_modified":1657417539,"replies":6,"id":865211},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/6cdd/60ea/184_large.png?m=1630643913","name":"apple","avatar_normal":"https://cdn.v2ex.com/navatar/6cdd/60ea/184_normal.png?m=1630643913","title":"Apple","url":"https://www.v2ex.com/go/apple","topics":18958,"footer":"","header":"设计了 <a href=\"/go/watch\">Apple Watch</a>，<a href=\"/go/ipad\">iPad</a>，<a href=\"/go/iphone\">iPhone</a>，<a href=\"/go/imac\">iMac</a> 及 <a href=\"/go/mbp\">MacBook Pro</a> 等电子产品的美国公司。","title_alternative":"Apple","avatar_mini":"https://cdn.v2ex.com/navatar/6cdd/60ea/184_mini.png?m=1630643913","stars":2213,"aliases":[],"root":false,"id":184,"parent_node_name":"hardware"},"member":{"id":442662,"username":"xtyao","url":"https://www.v2ex.com/u/xtyao","website":null,"twitter":null,"psn":null,"github":null,"btc":null,"location":null,"tagline":null,"bio":null,"avatar_mini":"https://cdn.v2ex.com/gravatar/02cdca84191c28739708a26c5d8d2369?s=24&d=retro","avatar_normal":"https://cdn.v2ex.com/gravatar/02cdca84191c28739708a26c5d8d2369?s=48&d=retro","avatar_large":"https://cdn.v2ex.com/gravatar/02cdca84191c28739708a26c5d8d2369?s=73&d=retro","created":1569168525,"last_modified":1657411823},"last_reply_by":"riceathome","last_touched":1657438143,"title":"apple watch 无限重启，怎么办？","url":"https://www.v2ex.com/t/865206","created":1657413521,"deleted":0,"content":"今晚从 13pm 导资料到 13pro ，导完后顺便在 apple watch 上重置，想不到的是过了一会黑屏了，按键无反应，试着放到充电座上，就出现了现在这种情况，无限重启，每一次都是出现白苹果界面后，五六秒后就息屏，息屏五六秒后又白苹果，反复循环…\r\n试过从底座上拿起，同时按着表冠+侧边按键十秒，还是一样先白苹果，五六秒后又息屏…\r\n\r\n2019 年 9 月时从 pdd 买的 s5 ，本来想着撑到 s8 出来再换，没想到…\r\n\r\n现在这情况还有救吗？","content_rendered":"<p>今晚从 13pm 导资料到 13pro ，导完后顺便在 apple watch 上重置，想不到的是过了一会黑屏了，按键无反应，试着放到充电座上，就出现了现在这种情况，无限重启，每一次都是出现白苹果界面后，五六秒后就息屏，息屏五六秒后又白苹果，反复循环…\n试过从底座上拿起，同时按着表冠+侧边按键十秒，还是一样先白苹果，五六秒后又息屏…</p>\n<p>2019 年 9 月时从 pdd 买的 s5 ，本来想着撑到 s8 出来再换，没想到…</p>\n<p>现在这情况还有救吗？</p>\n","last_modified":1657413521,"replies":6,"id":865206}]