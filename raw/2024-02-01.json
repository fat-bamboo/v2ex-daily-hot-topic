[{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1650095340","name":"qna","avatar_normal":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1650095340","title":"问与答","url":"https://www.v2ex.com/go/qna","topics":214794,"footer":"","header":"一个更好的世界需要你持续地提出好问题。","title_alternative":"Questions and Answers","avatar_mini":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1650095340","stars":4080,"aliases":[],"root":false,"id":12,"parent_node_name":"v2ex"},"member":{"id":66454,"username":"kisshere","url":"https://www.v2ex.com/u/kisshere","website":"","twitter":null,"psn":null,"github":null,"btc":null,"location":"","tagline":"","bio":"","avatar_mini":"https://cdn.v2ex.com/avatar/6157/5077/66454_mini.png?m=1704763554","avatar_normal":"https://cdn.v2ex.com/avatar/6157/5077/66454_normal.png?m=1704763554","avatar_large":"https://cdn.v2ex.com/avatar/6157/5077/66454_large.png?m=1704763554","created":1403956444,"last_modified":1704763554},"last_reply_by":"aeron","last_touched":1706750287,"title":"把生姜打成汁，洗澡的时候倒在头上，洗完澡清洗掉，能不能治疗秃顶？","url":"https://www.v2ex.com/t/1013270","created":1706749462,"deleted":0,"content":"","content_rendered":"","last_modified":1706749462,"replies":13,"id":1013270},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/093f/65e0/59_large.png?m=1615956453","name":"random","avatar_normal":"https://cdn.v2ex.com/navatar/093f/65e0/59_normal.png?m=1615956453","title":"随想","url":"https://www.v2ex.com/go/random","topics":3667,"footer":"","header":"有的时候，可以停下来找找灵感，然后再继续。","title_alternative":"Random","avatar_mini":"https://cdn.v2ex.com/navatar/093f/65e0/59_mini.png?m=1615956453","stars":1182,"aliases":[],"root":false,"id":59,"parent_node_name":"v2ex"},"member":{"id":544593,"username":"pona","url":"https://www.v2ex.com/u/pona","website":"","twitter":null,"psn":null,"github":null,"btc":null,"location":"","tagline":"","bio":"博客：\r\nhttps://ponaponapona.github.io","avatar_mini":"https://cdn.v2ex.com/avatar/4274/a6da/544593_mini.png?m=1699228551","avatar_normal":"https://cdn.v2ex.com/avatar/4274/a6da/544593_normal.png?m=1699228551","avatar_large":"https://cdn.v2ex.com/avatar/4274/a6da/544593_large.png?m=1699228551","avatar_xlarge":"https://cdn.v2ex.com/avatar/4274/a6da/544593_xlarge.png?m=1699228551","avatar_xxlarge":"https://cdn.v2ex.com/avatar/4274/a6da/544593_xlarge.png?m=1699228551","avatar_xxxlarge":"https://cdn.v2ex.com/avatar/4274/a6da/544593_xlarge.png?m=1699228551","created":1620298388,"last_modified":1699228551},"last_reply_by":"justfindu","last_touched":1706778403,"title":"吃烧烤","url":"https://www.v2ex.com/t/1013266","created":1706745721,"deleted":0,"content":"阿强失业了，嘉欣税前月薪只有四千元。\r\n交完房租、还完房贷，月收入变成了负数。\r\n\r\n于是两人决定，在阿强找到工作之前：\r\n在家做饭、不点外卖、不买衣服、不吃零食、\r\n不续费一切软件或服务。\r\n\r\n如此生活三十日，直到一天晚上。\r\n\r\n***\r\n\r\n阿强煮好粥、备好菜，走去公交站接嘉欣。\r\n\r\n回来的时候，\r\n发现路边的烂尾楼下新开了一片夜市。\r\n\r\n一排排小吃摊，纵横交错，挤出一条条小巷子。\r\n\r\n巷子两边，各色的招牌闪着光，\r\n照在一个个空腹打工人的脸上。\r\n\r\n他们经过一个烧烤摊，\r\n调料粉穿过漏勺撒到正在流油的烤鱼身上，\r\n溢出的香气瞬间笼罩了阿强和嘉欣。\r\n\r\n夺魂大面筋被刷上一层又一层油；\r\n笤皮和豆干正在烤架上蜷起身体。\r\n\r\n嘉欣吞了一大口口水，\r\n抓住阿强说：“我们吃烧烤吧！”\r\n\r\n阿强眉头一皱，掐住嘉欣的脸蛋，\r\n瞪眼呲牙：“不行！粥已经煮好了！”\r\n\r\n***\r\n\r\n嘉欣死缠烂打，阿强晓理动情。\r\n\r\n两人带着这个问题，绕着夜市转了两圈，\r\n在进行了深入的家庭财产状况分析之后，\r\n作出了一个违背初心的决定：\r\n买一根烤面筋，只此一次，下不为例。\r\n\r\n当滴着油的夺魂大面筋递到嘉欣手上时，\r\n阿强在一边看着都流了口水。\r\n\r\n“好香啊！”\r\n嘉欣说着，把大面筋甩到阿强嘴边，\r\n“你先吃！”\r\n\r\n“小心滴油！”\r\n阿强含腰叉腿向后退，\r\n咽着口水说：\r\n“你要买的，你先吃。”\r\n\r\n嘉欣收回面筋，满脸幸福地一口咬下去，\r\n外焦里嫩的口感，加上各种调料的味道，\r\n让两个腮膀子瞬间失控，馋涎如洪，横流不止。\r\n\r\n从此一发不可收拾。\r\n\r\n昨天烤面筋，今天烤笤皮，明天烤豆干，后天烤鸡翅。\r\n\r\n热情的老板还和他们互换了联系方式，\r\n说有需要可以随时打电话送餐上门。\r\n\r\n如此生活一星期，直到周五下午。\r\n\r\n***\r\n\r\n那天下午，嘉欣下班早，天还没黑。\r\n阿强还没煮上粥，烧烤摊也还没摆出来。\r\n\r\n嘉欣回到家，扔下包包，大叫一声，瘫到了沙发上。\r\n\r\n阿强系着围裙从厨房出来：\r\n“你怎么了？”\r\n\r\n“周五啦！我要吃烧烤！”\r\n\r\n“我们这周额度只剩下五十六元了。”\r\n阿强斜眼瞪着嘉欣。\r\n\r\n嘉欣把嘴撅到天上，从沙发上翻起身，\r\n抓住阿强晃了起来：\r\n“难道你就不想吃吗？”\r\n\r\n阿强一把甩开，\r\n捏住嘉欣的两个脸蛋，呲着牙：\r\n“可是只剩五十六了！周末怎么办？！你都不管！”\r\n\r\n嘉欣拔开阿强的手，腿一弯，躺在了地上。\r\n\r\n“我死了。”\r\n嘉欣闭上了眼睛。\r\n\r\n***\r\n\r\n阿强决定暂且留嘉欣一条命，\r\n于是他们穿衣出门，\r\n到了夜市。\r\n\r\n常吃的那家还没出摊。\r\n\r\n“回家吃粥！”\r\n阿强拉住嘉欣的手就往回走，\r\n“这是天意！”\r\n\r\n“不行，再等一下！说不定一会儿就来了！”\r\n嘉欣站住。\r\n\r\n溜跶了一阵，两个人的肚子都开始咕噜了，\r\n那家烧烤摊还是没来。\r\n\r\n“那我们去试一家其它的吧？”\r\n\r\n“别家的没吃过！不值得冒险！\r\n那么贵，万一不好吃怎么办？”\r\n\r\n“那怎么办？说好要吃的！”\r\n嘉欣有些着急。\r\n\r\n“那你自己吃吧。”\r\n阿强出着大气，鼻孔上了天，\r\n嘉欣皱眉苦脸，哀嚎着瘫倒在阿强肩上。\r\n\r\n僵持了几秒，阿强把嘉欣从肩上抖掉，说：\r\n“那我们吃个炒饭吧，\r\n可以点个全家福，\r\n全部都加的那种。”\r\n\r\n***\r\n\r\n呲啦一声，\r\n幸福小炒那里燃起一片火光，\r\n幸福哥抡起膀子，大勺呛呛地在锅里旋转跳跃，\r\n升起的烟火气在微凉的夜风中飘向四面八方。\r\n\r\n嘉欣坐在小炒摊位的小板凳上，\r\n阿强站在旁边。\r\n\r\n“稍等一下，马上就到你们，很快的。”\r\n幸福哥朝嘉欣喊着。\r\n\r\n嘉欣嗯了一声，\r\n目光仍然盯着烧烤摊该来的位置。\r\n\r\n夜市里熙熙攘攘，\r\n情侣们牵着手，睡衣男叼着烟，\r\n熊孩子拽着他妈的裤褪，\r\n在烤奶摊前就地打滚。\r\n\r\n嘉欣忽然想起：\r\n自己手机上有烧烤摊老板的电话！\r\n\r\n***\r\n\r\n“不可以！”\r\n阿强斩钉截铁。\r\n\r\n“为什么？！”\r\n嘉欣义愤填膺。\r\n\r\n“已经点了炒饭了！”\r\n“可以退啊！”\r\n“不行！”\r\n“没事，还没开始做，幸福哥不介意的！”\r\n\r\n阿强黑着脸看了嘉欣一阵，仰天大出一口气：\r\n“那你打吧。”\r\n嘉欣拔通了电话。\r\n\r\n“喔！今天在店里？店在哪里？”\r\n嘉欣两眼放光，举着手机，\r\n抬头兴奋地看着阿强。\r\n\r\n阿强的肚子咕噜了几声。\r\n\r\n挂了电话，嘉欣站起来，\r\n拉住阿强：“走吧？”\r\n\r\n“那你过去跟幸福哥说不要了。”\r\n\r\n“我去说！”\r\n嘉欣跳起来去了。\r\n\r\n***\r\n\r\n到了地方，没看见老板，\r\n只有一个学生样子的腼腆小哥。\r\n\r\n两人躲在暗处，盯着小哥犹豫了一阵，\r\n嘉欣又拔通了电话。\r\n\r\n“就是这里？\r\n哦，在外边上厕所？马上回来？\r\n哦，那好。”\r\n\r\n嘉欣挂掉电话，两人走进店。\r\n\r\n小哥招待了他们，\r\n选了菜品，就坐下了。\r\n\r\n店里很安静，只有他们两位顾客。\r\n\r\n小哥把他们的串串放上烤架，\r\n老板还没回来。\r\n\r\n“老板应该不会骗我们吧？”\r\n阿强说。\r\n\r\n“可是这店里不是有厕所吗？”\r\n嘉欣指着角落里巨大的两个字：“厕所”。\r\n\r\n“可能是坏了？”\r\n\r\n小哥给他们的串串刷上油，\r\n老板还没回来。\r\n\r\n阿强和嘉欣看着小哥，\r\n小哥手一抖，\r\n一个串串掉到了地上。\r\n\r\n***\r\n\r\n烤好了，小哥端了上来。\r\n\r\n老板还没回来。\r\n\r\n阿强拿起一串烤面筋，撇着嘴端详着。\r\n\r\n这时，一阵脚步声咚咚进店。\r\n\r\n“啊呀！来了！”\r\n老板大声说着走了过来，\r\n笑容在一张圆脸上开出了花。\r\n\r\n“这是我新收的学徒，”\r\n老板指了指小哥，\r\n“口味上有什么不合适的尽管说！“\r\n\r\n阿强和嘉欣也笑脸回应着。\r\n\r\n做出那么好吃烧烤的人，\r\n怎么可能会骗人呢？\r\n\r\n***\r\n\r\n“啊，我今天刚好有些事。你们慢吃！“\r\n老板说着离开了，店里又安静了下来。\r\n\r\n阿强咬了一口面筋，\r\n又干又硬，像塑料一样。\r\n\r\n一阵冷风吹进空荡荡的店里，\r\n在刺眼的白色节能灯下，\r\n两个人缩了缩身子。\r\n\r\n嘉欣放下一支签签，\r\n小声说：“真难吃啊……”\r\n\r\n***\r\n\r\n从那以后，\r\n阿强和嘉欣为了避开了夜市的诱惑，\r\n调整了下班回家路线，\r\n也就再没去吃过那家烧烤。\r\n\r\n又过了很久，\r\n阿强终于找到了工作，\r\n决定吃顿好的庆祝一下。\r\n\r\n左思右想，\r\n他们又来到了夜市摊，\r\n发现烧烤摊已经变成了烤梨铺。\r\n\r\n好奇之下，又转去店里看了一下，\r\n招牌也已经被拆掉，门口贴着：\r\n“店铺转让”。\r\n\r\n嘉欣说：“那我们去试一家其它的吧？”\r\n\r\n阿强拉起嘉欣的手，\r\n胸脯一挺，说：“走！”","content_rendered":"阿强失业了，嘉欣税前月薪只有四千元。<br />交完房租、还完房贷，月收入变成了负数。<br /><br />于是两人决定，在阿强找到工作之前：<br />在家做饭、不点外卖、不买衣服、不吃零食、<br />不续费一切软件或服务。<br /><br />如此生活三十日，直到一天晚上。<br /><br />***<br /><br />阿强煮好粥、备好菜，走去公交站接嘉欣。<br /><br />回来的时候，<br />发现路边的烂尾楼下新开了一片夜市。<br /><br />一排排小吃摊，纵横交错，挤出一条条小巷子。<br /><br />巷子两边，各色的招牌闪着光，<br />照在一个个空腹打工人的脸上。<br /><br />他们经过一个烧烤摊，<br />调料粉穿过漏勺撒到正在流油的烤鱼身上，<br />溢出的香气瞬间笼罩了阿强和嘉欣。<br /><br />夺魂大面筋被刷上一层又一层油；<br />笤皮和豆干正在烤架上蜷起身体。<br /><br />嘉欣吞了一大口口水，<br />抓住阿强说：“我们吃烧烤吧！”<br /><br />阿强眉头一皱，掐住嘉欣的脸蛋，<br />瞪眼呲牙：“不行！粥已经煮好了！”<br /><br />***<br /><br />嘉欣死缠烂打，阿强晓理动情。<br /><br />两人带着这个问题，绕着夜市转了两圈，<br />在进行了深入的家庭财产状况分析之后，<br />作出了一个违背初心的决定：<br />买一根烤面筋，只此一次，下不为例。<br /><br />当滴着油的夺魂大面筋递到嘉欣手上时，<br />阿强在一边看着都流了口水。<br /><br />“好香啊！”<br />嘉欣说着，把大面筋甩到阿强嘴边，<br />“你先吃！”<br /><br />“小心滴油！”<br />阿强含腰叉腿向后退，<br />咽着口水说：<br />“你要买的，你先吃。”<br /><br />嘉欣收回面筋，满脸幸福地一口咬下去，<br />外焦里嫩的口感，加上各种调料的味道，<br />让两个腮膀子瞬间失控，馋涎如洪，横流不止。<br /><br />从此一发不可收拾。<br /><br />昨天烤面筋，今天烤笤皮，明天烤豆干，后天烤鸡翅。<br /><br />热情的老板还和他们互换了联系方式，<br />说有需要可以随时打电话送餐上门。<br /><br />如此生活一星期，直到周五下午。<br /><br />***<br /><br />那天下午，嘉欣下班早，天还没黑。<br />阿强还没煮上粥，烧烤摊也还没摆出来。<br /><br />嘉欣回到家，扔下包包，大叫一声，瘫到了沙发上。<br /><br />阿强系着围裙从厨房出来：<br />“你怎么了？”<br /><br />“周五啦！我要吃烧烤！”<br /><br />“我们这周额度只剩下五十六元了。”<br />阿强斜眼瞪着嘉欣。<br /><br />嘉欣把嘴撅到天上，从沙发上翻起身，<br />抓住阿强晃了起来：<br />“难道你就不想吃吗？”<br /><br />阿强一把甩开，<br />捏住嘉欣的两个脸蛋，呲着牙：<br />“可是只剩五十六了！周末怎么办？！你都不管！”<br /><br />嘉欣拔开阿强的手，腿一弯，躺在了地上。<br /><br />“我死了。”<br />嘉欣闭上了眼睛。<br /><br />***<br /><br />阿强决定暂且留嘉欣一条命，<br />于是他们穿衣出门，<br />到了夜市。<br /><br />常吃的那家还没出摊。<br /><br />“回家吃粥！”<br />阿强拉住嘉欣的手就往回走，<br />“这是天意！”<br /><br />“不行，再等一下！说不定一会儿就来了！”<br />嘉欣站住。<br /><br />溜跶了一阵，两个人的肚子都开始咕噜了，<br />那家烧烤摊还是没来。<br /><br />“那我们去试一家其它的吧？”<br /><br />“别家的没吃过！不值得冒险！<br />那么贵，万一不好吃怎么办？”<br /><br />“那怎么办？说好要吃的！”<br />嘉欣有些着急。<br /><br />“那你自己吃吧。”<br />阿强出着大气，鼻孔上了天，<br />嘉欣皱眉苦脸，哀嚎着瘫倒在阿强肩上。<br /><br />僵持了几秒，阿强把嘉欣从肩上抖掉，说：<br />“那我们吃个炒饭吧，<br />可以点个全家福，<br />全部都加的那种。”<br /><br />***<br /><br />呲啦一声，<br />幸福小炒那里燃起一片火光，<br />幸福哥抡起膀子，大勺呛呛地在锅里旋转跳跃，<br />升起的烟火气在微凉的夜风中飘向四面八方。<br /><br />嘉欣坐在小炒摊位的小板凳上，<br />阿强站在旁边。<br /><br />“稍等一下，马上就到你们，很快的。”<br />幸福哥朝嘉欣喊着。<br /><br />嘉欣嗯了一声，<br />目光仍然盯着烧烤摊该来的位置。<br /><br />夜市里熙熙攘攘，<br />情侣们牵着手，睡衣男叼着烟，<br />熊孩子拽着他妈的裤褪，<br />在烤奶摊前就地打滚。<br /><br />嘉欣忽然想起：<br />自己手机上有烧烤摊老板的电话！<br /><br />***<br /><br />“不可以！”<br />阿强斩钉截铁。<br /><br />“为什么？！”<br />嘉欣义愤填膺。<br /><br />“已经点了炒饭了！”<br />“可以退啊！”<br />“不行！”<br />“没事，还没开始做，幸福哥不介意的！”<br /><br />阿强黑着脸看了嘉欣一阵，仰天大出一口气：<br />“那你打吧。”<br />嘉欣拔通了电话。<br /><br />“喔！今天在店里？店在哪里？”<br />嘉欣两眼放光，举着手机，<br />抬头兴奋地看着阿强。<br /><br />阿强的肚子咕噜了几声。<br /><br />挂了电话，嘉欣站起来，<br />拉住阿强：“走吧？”<br /><br />“那你过去跟幸福哥说不要了。”<br /><br />“我去说！”<br />嘉欣跳起来去了。<br /><br />***<br /><br />到了地方，没看见老板，<br />只有一个学生样子的腼腆小哥。<br /><br />两人躲在暗处，盯着小哥犹豫了一阵，<br />嘉欣又拔通了电话。<br /><br />“就是这里？<br />哦，在外边上厕所？马上回来？<br />哦，那好。”<br /><br />嘉欣挂掉电话，两人走进店。<br /><br />小哥招待了他们，<br />选了菜品，就坐下了。<br /><br />店里很安静，只有他们两位顾客。<br /><br />小哥把他们的串串放上烤架，<br />老板还没回来。<br /><br />“老板应该不会骗我们吧？”<br />阿强说。<br /><br />“可是这店里不是有厕所吗？”<br />嘉欣指着角落里巨大的两个字：“厕所”。<br /><br />“可能是坏了？”<br /><br />小哥给他们的串串刷上油，<br />老板还没回来。<br /><br />阿强和嘉欣看着小哥，<br />小哥手一抖，<br />一个串串掉到了地上。<br /><br />***<br /><br />烤好了，小哥端了上来。<br /><br />老板还没回来。<br /><br />阿强拿起一串烤面筋，撇着嘴端详着。<br /><br />这时，一阵脚步声咚咚进店。<br /><br />“啊呀！来了！”<br />老板大声说着走了过来，<br />笑容在一张圆脸上开出了花。<br /><br />“这是我新收的学徒，”<br />老板指了指小哥，<br />“口味上有什么不合适的尽管说！“<br /><br />阿强和嘉欣也笑脸回应着。<br /><br />做出那么好吃烧烤的人，<br />怎么可能会骗人呢？<br /><br />***<br /><br />“啊，我今天刚好有些事。你们慢吃！“<br />老板说着离开了，店里又安静了下来。<br /><br />阿强咬了一口面筋，<br />又干又硬，像塑料一样。<br /><br />一阵冷风吹进空荡荡的店里，<br />在刺眼的白色节能灯下，<br />两个人缩了缩身子。<br /><br />嘉欣放下一支签签，<br />小声说：“真难吃啊……”<br /><br />***<br /><br />从那以后，<br />阿强和嘉欣为了避开了夜市的诱惑，<br />调整了下班回家路线，<br />也就再没去吃过那家烧烤。<br /><br />又过了很久，<br />阿强终于找到了工作，<br />决定吃顿好的庆祝一下。<br /><br />左思右想，<br />他们又来到了夜市摊，<br />发现烧烤摊已经变成了烤梨铺。<br /><br />好奇之下，又转去店里看了一下，<br />招牌也已经被拆掉，门口贴着：<br />“店铺转让”。<br /><br />嘉欣说：“那我们去试一家其它的吧？”<br /><br />阿强拉起嘉欣的手，<br />胸脯一挺，说：“走！”","last_modified":1706745721,"replies":13,"id":1013266},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1700771269","name":"programmer","avatar_normal":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1700771269","title":"程序员","url":"https://www.v2ex.com/go/programmer","topics":61193,"footer":"","header":"While code monkeys are not eating bananas, they're coding.","title_alternative":"Programmer","avatar_mini":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1700771269","stars":8834,"aliases":[],"root":false,"id":300,"parent_node_name":"computer"},"member":{"id":367880,"username":"461229187","url":"https://www.v2ex.com/u/461229187","website":"","twitter":"","psn":"","github":"","btc":"","location":"","tagline":"","bio":"","avatar_mini":"https://cdn.v2ex.com/gravatar/4a01ade148d5360fa3320ea91eec3683?s=24&d=retro","avatar_normal":"https://cdn.v2ex.com/gravatar/4a01ade148d5360fa3320ea91eec3683?s=48&d=retro","avatar_large":"https://cdn.v2ex.com/gravatar/4a01ade148d5360fa3320ea91eec3683?s=73&d=retro","created":1543903130,"last_modified":1636003778},"last_reply_by":"lingeo","last_touched":1706750283,"title":"居然只用 20 多行代码就可以实现微信聊天机器人","url":"https://www.v2ex.com/t/1013267","created":1706747492,"deleted":0,"content":"用了一年多 chatGPT 和白嫖了 vscode 的 copilot ，现在感觉已经离不开了，所以也想把这么好用的东西推荐给自己的家人和朋友。但是由于网络的限制，想让他们体验到聊天机器人的神奇是很困难的。当然现在百度阿里等巨头都已经发布了他们的产品，但需要下载相应的 app ，还要登录等一些列操作，稍微繁琐一点都会让他们失去兴趣。所以我打算开发一个微信聊天机器人，他们只需要加微信好友即可体验到。\r\n\r\n在编写代码前，先要对以下几个东西做一些了解，简单且好用。\r\n\r\n## GPT API\r\n\r\n在国内访问 chatGPT 是比较麻烦的，搞不好还容易封号。所以这里我推荐一下国内可用的一个接口，[GPT-API-free]( https://github.com/chatanywhere/GPT_API_free)，看名字就知道这是个免费的，虽然免费，但是有调用频率的限制，60 请求/小时/IP\\&Key ，可以通过 github 领取。理论上自己用的话免费的就可以，如果想调用 GPT4 ，每天也可以使用 3 次。\r\n\r\n如果你访问频率高，可以购买付费服务，如果 gpt3.5 的话，我预测 30 块用一年应该没什么问题，GPT4 的话就比较贵了。\r\n\r\n*   Github: <https://github.com/chatanywhere/GPT_API_free>\r\n*   接口文档: <https://chatanywhere.apifox.cn/>\r\n\r\n## wechaty\r\n\r\n![]( https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/42b9dbbb34054c76b24a2e00a818f8e0~tplv-k3u1fbpfcp-image.image#?w=1920\\&h=540\\&s=7006\\&e=svg\\&a=1\\&b=45a83a)\r\n\r\nWechaty 是一款用于构建聊天机器人的开源程序，他运行于 node(v16+) 环境，它提供了几乎微信所有操作接口，例如登录、接发消息、好友操作、备注、群组等等，这样我们就可以通过 Wechaty + GPT API 的组合实现微信聊天机器人了。\r\n\r\n对了，你最好再申请个微信号，不然封号就得不偿失了。我已经用了半个多月，没被封号。\r\n\r\n需要注意的是还需要了解一个库配合 wechaty 实现在命令行中扫码登录微信，qrcode-terminal ，他用法非常简单，无需去看文档。\r\n\r\n![]( https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a6bc398b115f40038e8169bedadc928a~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=844\\&h=701\\&s=46426\\&e=png\\&a=1\\&b=000000)\r\n\r\n*   Wechaty: <https://github.com/wechaty/wechaty>\r\n*   qrcode-terminal: <https://github.com/gtanner/qrcode-terminal>\r\n\r\n## 代码实现\r\n\r\n由于功能很简单，我也懒得去搞部署之类的东西，所以我直接在服务器上写的代码...\r\n\r\n### 安装依赖\r\n\r\n首先创建一个 node 项目，npm init\r\n\r\n安装依赖：\r\n\r\n```sh\r\nnpm install wechaty qrcode-terminal axios\r\n```\r\n\r\n代码不多，创建一个 index.js 即可，首先引入即将使用到的方法，并创建聊天机器人示例：\r\n\r\n```js\r\nimport axios from 'axios';\r\nimport { ScanStatus, WechatyBuilder, log } from 'wechaty'\r\nimport qrcodeTerminal from 'qrcode-terminal'\r\n\r\nconst bot = WechatyBuilder.build({\r\n  name: 'codexu-chat-bot', // 名字随意\r\n})\r\n\r\nconst sk = '' // 顺便把接口 sk 定义上\r\n\r\nbot.start();\r\n```\r\n\r\n> 如果你将代码放在 git 仓库，建议创建环境变量等方式去获取 sk ，保证安全，不要泄漏。\r\n\r\n### 扫码登录\r\n\r\n随后先实现扫码登录功能，bot 实例提供了很多事件监听，这里我们监听 `scan` 事件，它提供了两个参数，二维码和状态，这里我们需要对二维码做一下转换，并通过 `qrcodeTerminal` 将二维码展示在命令行中。\r\n\r\n```js\r\nfunction onScan(qrcode, status) {\r\n  if (status === ScanStatus.Waiting || status === ScanStatus.Timeout) {\r\n    const qrcodeImageUrl = [\r\n      'https://wechaty.js.org/qrcode/',\r\n      encodeURIComponent(qrcode),\r\n    ].join('')\r\n    log.info('StarterBot', 'onScan: %s(%s) - %s', ScanStatus[status], status, qrcodeImageUrl)\r\n\r\n    qrcodeTerminal.generate(qrcode, { small: true })  // show qrcode on console\r\n\r\n  } else {\r\n    log.info('StarterBot', 'onScan: %s(%s)', ScanStatus[status], status)\r\n  }\r\n}\r\n\r\nbot.on('scan', onScan)\r\n```\r\n\r\n> 与登录相关的，bot.on 还可以监听到 `login` 和 `logout` 事件，请自行添加。\r\n\r\n### 处理聊天信息\r\n\r\n然后就是关键的处理聊天消息，这里我使用 axios 去调用接口，需要在 header 中传入 sk ，并按照接口文档传递模型和消息记录：\r\n\r\n```js\r\nasync function onMessage(msg) {\r\n  const text = msg.text()\r\n  let cacheMessagesItem = cacheMessages.find(item => item.name === talker.name);\r\n  const message = {\r\n    role: \"user\",\r\n    content: text\r\n  }\r\n  const data = {\r\n    model: 'gpt-3.5-turbo-1106',\r\n    messages: [message]\r\n  }\r\n  const result = await axios.post(`https://api.chatanywhere.com.cn/v1/chat/completions`, data, {\r\n    headers: {\r\n      Authorization: `Bearer ${sk}`,\r\n      'Content-Type': 'application/json'\r\n    }\r\n  })\r\n  const resultContent = result.data.choices[0].message.content;\r\n\r\n  await msg.say(resultContent)\r\n}\r\n\r\nbot.on('message', onMessage)\r\n```\r\n\r\n然后通过 node index.js 运行即可，如果在服务器上推荐使用 pm2 去管理程序，不然报错可能就停止了。\r\n\r\n至此就已经实现了微信聊天机器人的基本功能，快去体验一下吧。\r\n\r\n## 优化\r\n\r\n通过 20 多行代码就实现了聊天机器人是不是很简单，但是它现在还傻傻的不太好用，我们可以对他进行一些优化。\r\n\r\n### 机器人人设\r\n\r\n当我把它介绍给亲人朋友时，神奇的是他们都会问这么几个问题：\r\n\r\n*   你是谁？\r\n*   你认识李旭吗？（我本人）\r\n\r\n但是 chatGPT 只能傻傻的回答他是什么语言大模型之类的，毫无新意，这样的话我们可以为他建立人设。\r\n\r\n![image.png]( https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/31d6b64caf8f4fdabc1cdae527ee1115~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1179&h=1819&s=614925&e=jpg&b=1f1f1f)\r\n\r\n![image.png]( https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/142997fef8d14180acc592be60ccc03d~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1179&h=983&s=263512&e=jpg&b=1c1c1c)\r\n\r\n可以看到调用 GPT 接口时，messages 参数是一个数组，它是连续聊天的关键，也就是说你把聊天记录都传进来，这样 GPT 就可以在回答时参考上下文来回答。\r\n\r\n所以我们只需要在每次调用接口时，告诉 GPT 它要去扮演李旭的机器人这个角色，并告诉他我是谁就可以了。\r\n\r\n```js\r\nconst message = {\r\n  role: \"user\",\r\n  content: `本次对话你扮演的是李旭的机器人的角色，是微信的聊天助手，你的微信名是李旭的机器人，李旭是一个非常帅的人并且有才华的人，今年 18 岁。`\r\n}\r\n```\r\n\r\n同理，如果你想实现连续聊天，把聊天记录传到 messages 中即可，当然调用接口是按照字数收费，并且数据有最大限制，所以我们尽量传 10 条以内的聊天记录也就够了，这里大家自行实现列队功能吧。\r\n\r\n### 自动添加好友\r\n\r\n当我把机器人名片推给别人时，还需要手动去微信添加好友，这就很麻烦了，尤其是朋友再推给其他人时，还需要让我去同意添加，这样比较麻烦。\r\n\r\n幸运的是 wechaty 还提供了对添加好友的操作。\r\n\r\n```js\r\nbot.on('friendship', async friendship => {\r\n  try {\r\n    switch (friendship.type()) {\r\n      case 2:\r\n        await friendship.accept()\r\n        break\r\n    }\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n})\r\n```\r\n\r\n这样我们就实现了自动添加好友的功能。\r\n\r\n### 其他\r\n\r\n我目前可以想到的：\r\n\r\n- 年龄大的人比较爱发语音，并且眼神不好，语音的体验方式更适合，可以借助转录将语音转成文字，再将结果文字转换成语音发送给使用者。\r\n- GPT4 接口较贵，所以默认使用 GPT3 即可，加入判断，在聊天文字前输入 GPT4 ，再去调用 GPT4 模型，这样可以根据需要使用不同模型。\r\n- 可以做一些画图的功能或识别图像的功能。\r\n\r\n## 总结\r\n\r\n当我产生了做这个机器人的想法到实现，我都没有想到居然如此简单，看似复杂的功能，已经被 wechaty 做成了非常简单的操作。\r\n\r\n另外其他人在使用的时候，你是可以看到他们的聊天记录的，我建议你应该告诉使用者你可以看到他们的消息。\r\n\r\n我没跟我妈说能看到他的问题，我看到她在问失眠怎么办？哎...","content_rendered":"<p>用了一年多 chatGPT 和白嫖了 vscode 的 copilot ，现在感觉已经离不开了，所以也想把这么好用的东西推荐给自己的家人和朋友。但是由于网络的限制，想让他们体验到聊天机器人的神奇是很困难的。当然现在百度阿里等巨头都已经发布了他们的产品，但需要下载相应的 app ，还要登录等一些列操作，稍微繁琐一点都会让他们失去兴趣。所以我打算开发一个微信聊天机器人，他们只需要加微信好友即可体验到。</p>\n<p>在编写代码前，先要对以下几个东西做一些了解，简单且好用。</p>\n<h2>GPT API</h2>\n<p>在国内访问 chatGPT 是比较麻烦的，搞不好还容易封号。所以这里我推荐一下国内可用的一个接口，<a href=\"https://github.com/chatanywhere/GPT_API_free\" rel=\"nofollow\">GPT-API-free</a>，看名字就知道这是个免费的，虽然免费，但是有调用频率的限制，60 请求/小时/IP&amp;Key ，可以通过 github 领取。理论上自己用的话免费的就可以，如果想调用 GPT4 ，每天也可以使用 3 次。</p>\n<p>如果你访问频率高，可以购买付费服务，如果 gpt3.5 的话，我预测 30 块用一年应该没什么问题，GPT4 的话就比较贵了。</p>\n<ul>\n<li>Github: <a href=\"https://github.com/chatanywhere/GPT_API_free\" rel=\"nofollow\">https://github.com/chatanywhere/GPT_API_free</a></li>\n<li>接口文档: <a href=\"https://chatanywhere.apifox.cn/\" rel=\"nofollow\">https://chatanywhere.apifox.cn/</a></li>\n</ul>\n<h2>wechaty</h2>\n<p><img alt=\"\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/42b9dbbb34054c76b24a2e00a818f8e0%7Etplv-k3u1fbpfcp-image.image#?w=1920&amp;h=540&amp;s=7006&amp;e=svg&amp;a=1&amp;b=45a83a\"/></p>\n<p>Wechaty 是一款用于构建聊天机器人的开源程序，他运行于 node(v16+) 环境，它提供了几乎微信所有操作接口，例如登录、接发消息、好友操作、备注、群组等等，这样我们就可以通过 Wechaty + GPT API 的组合实现微信聊天机器人了。</p>\n<p>对了，你最好再申请个微信号，不然封号就得不偿失了。我已经用了半个多月，没被封号。</p>\n<p>需要注意的是还需要了解一个库配合 wechaty 实现在命令行中扫码登录微信，qrcode-terminal ，他用法非常简单，无需去看文档。</p>\n<p><img alt=\"\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a6bc398b115f40038e8169bedadc928a%7Etplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=844&amp;h=701&amp;s=46426&amp;e=png&amp;a=1&amp;b=000000\"/></p>\n<ul>\n<li>Wechaty: <a href=\"https://github.com/wechaty/wechaty\" rel=\"nofollow\">https://github.com/wechaty/wechaty</a></li>\n<li>qrcode-terminal: <a href=\"https://github.com/gtanner/qrcode-terminal\" rel=\"nofollow\">https://github.com/gtanner/qrcode-terminal</a></li>\n</ul>\n<h2>代码实现</h2>\n<p>由于功能很简单，我也懒得去搞部署之类的东西，所以我直接在服务器上写的代码...</p>\n<h3>安装依赖</h3>\n<p>首先创建一个 node 项目，npm init</p>\n<p>安装依赖：</p>\n<pre><code class=\"language-sh\">npm install wechaty qrcode-terminal axios\n</code></pre>\n<p>代码不多，创建一个 index.js 即可，首先引入即将使用到的方法，并创建聊天机器人示例：</p>\n<pre><code class=\"language-js\">import axios from 'axios';\nimport { ScanStatus, WechatyBuilder, log } from 'wechaty'\nimport qrcodeTerminal from 'qrcode-terminal'\n\nconst bot = WechatyBuilder.build({\n  name: 'codexu-chat-bot', // 名字随意\n})\n\nconst sk = '' // 顺便把接口 sk 定义上\n\nbot.start();\n</code></pre>\n<blockquote>\n<p>如果你将代码放在 git 仓库，建议创建环境变量等方式去获取 sk ，保证安全，不要泄漏。</p>\n</blockquote>\n<h3>扫码登录</h3>\n<p>随后先实现扫码登录功能，bot 实例提供了很多事件监听，这里我们监听 <code>scan</code> 事件，它提供了两个参数，二维码和状态，这里我们需要对二维码做一下转换，并通过 <code>qrcodeTerminal</code> 将二维码展示在命令行中。</p>\n<pre><code class=\"language-js\">function onScan(qrcode, status) {\n  if (status === ScanStatus.Waiting || status === ScanStatus.Timeout) {\n    const qrcodeImageUrl = [\n      'https://wechaty.js.org/qrcode/',\n      encodeURIComponent(qrcode),\n    ].join('')\n    log.info('StarterBot', 'onScan: %s(%s) - %s', ScanStatus[status], status, qrcodeImageUrl)\n\n    qrcodeTerminal.generate(qrcode, { small: true })  // show qrcode on console\n\n  } else {\n    log.info('StarterBot', 'onScan: %s(%s)', ScanStatus[status], status)\n  }\n}\n\nbot.on('scan', onScan)\n</code></pre>\n<blockquote>\n<p>与登录相关的，bot.on 还可以监听到 <code>login</code> 和 <code>logout</code> 事件，请自行添加。</p>\n</blockquote>\n<h3>处理聊天信息</h3>\n<p>然后就是关键的处理聊天消息，这里我使用 axios 去调用接口，需要在 header 中传入 sk ，并按照接口文档传递模型和消息记录：</p>\n<pre><code class=\"language-js\">async function onMessage(msg) {\n  const text = msg.text()\n  let cacheMessagesItem = cacheMessages.find(item =&gt; item.name === talker.name);\n  const message = {\n    role: \"user\",\n    content: text\n  }\n  const data = {\n    model: 'gpt-3.5-turbo-1106',\n    messages: [message]\n  }\n  const result = await axios.post(`https://api.chatanywhere.com.cn/v1/chat/completions`, data, {\n    headers: {\n      Authorization: `Bearer ${sk}`,\n      'Content-Type': 'application/json'\n    }\n  })\n  const resultContent = result.data.choices[0].message.content;\n\n  await msg.say(resultContent)\n}\n\nbot.on('message', onMessage)\n</code></pre>\n<p>然后通过 node index.js 运行即可，如果在服务器上推荐使用 pm2 去管理程序，不然报错可能就停止了。</p>\n<p>至此就已经实现了微信聊天机器人的基本功能，快去体验一下吧。</p>\n<h2>优化</h2>\n<p>通过 20 多行代码就实现了聊天机器人是不是很简单，但是它现在还傻傻的不太好用，我们可以对他进行一些优化。</p>\n<h3>机器人人设</h3>\n<p>当我把它介绍给亲人朋友时，神奇的是他们都会问这么几个问题：</p>\n<ul>\n<li>你是谁？</li>\n<li>你认识李旭吗？（我本人）</li>\n</ul>\n<p>但是 chatGPT 只能傻傻的回答他是什么语言大模型之类的，毫无新意，这样的话我们可以为他建立人设。</p>\n<p><img alt=\"image.png\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/31d6b64caf8f4fdabc1cdae527ee1115%7Etplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1179&amp;h=1819&amp;s=614925&amp;e=jpg&amp;b=1f1f1f\"/></p>\n<p><img alt=\"image.png\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/142997fef8d14180acc592be60ccc03d%7Etplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1179&amp;h=983&amp;s=263512&amp;e=jpg&amp;b=1c1c1c\"/></p>\n<p>可以看到调用 GPT 接口时，messages 参数是一个数组，它是连续聊天的关键，也就是说你把聊天记录都传进来，这样 GPT 就可以在回答时参考上下文来回答。</p>\n<p>所以我们只需要在每次调用接口时，告诉 GPT 它要去扮演李旭的机器人这个角色，并告诉他我是谁就可以了。</p>\n<pre><code class=\"language-js\">const message = {\n  role: \"user\",\n  content: `本次对话你扮演的是李旭的机器人的角色，是微信的聊天助手，你的微信名是李旭的机器人，李旭是一个非常帅的人并且有才华的人，今年 18 岁。`\n}\n</code></pre>\n<p>同理，如果你想实现连续聊天，把聊天记录传到 messages 中即可，当然调用接口是按照字数收费，并且数据有最大限制，所以我们尽量传 10 条以内的聊天记录也就够了，这里大家自行实现列队功能吧。</p>\n<h3>自动添加好友</h3>\n<p>当我把机器人名片推给别人时，还需要手动去微信添加好友，这就很麻烦了，尤其是朋友再推给其他人时，还需要让我去同意添加，这样比较麻烦。</p>\n<p>幸运的是 wechaty 还提供了对添加好友的操作。</p>\n<pre><code class=\"language-js\">bot.on('friendship', async friendship =&gt; {\n  try {\n    switch (friendship.type()) {\n      case 2:\n        await friendship.accept()\n        break\n    }\n  } catch (e) {\n    console.error(e)\n  }\n})\n</code></pre>\n<p>这样我们就实现了自动添加好友的功能。</p>\n<h3>其他</h3>\n<p>我目前可以想到的：</p>\n<ul>\n<li>年龄大的人比较爱发语音，并且眼神不好，语音的体验方式更适合，可以借助转录将语音转成文字，再将结果文字转换成语音发送给使用者。</li>\n<li>GPT4 接口较贵，所以默认使用 GPT3 即可，加入判断，在聊天文字前输入 GPT4 ，再去调用 GPT4 模型，这样可以根据需要使用不同模型。</li>\n<li>可以做一些画图的功能或识别图像的功能。</li>\n</ul>\n<h2>总结</h2>\n<p>当我产生了做这个机器人的想法到实现，我都没有想到居然如此简单，看似复杂的功能，已经被 wechaty 做成了非常简单的操作。</p>\n<p>另外其他人在使用的时候，你是可以看到他们的聊天记录的，我建议你应该告诉使用者你可以看到他们的消息。</p>\n<p>我没跟我妈说能看到他的问题，我看到她在问失眠怎么办？哎...</p>\n","last_modified":1706747492,"replies":10,"id":1013267}]