[{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/c9e1/074f/104_large.png?m=1625081793","name":"cloud","avatar_normal":"https://cdn.v2ex.com/navatar/c9e1/074f/104_normal.png?m=1625081793","title":"云计算","url":"https://www.v2ex.com/go/cloud","topics":4526,"footer":"","header":"关于云计算技术和平台的综合讨论区。","title_alternative":"Cloud Computing","avatar_mini":"https://cdn.v2ex.com/navatar/c9e1/074f/104_mini.png?m=1625081793","stars":2722,"aliases":[],"root":false,"id":104,"parent_node_name":"webmaster"},"member":{"username":"jasondennis12139","website":null,"github":null,"psn":null,"avatar_normal":"https://cdn.v2ex.com/gravatar/c0d156bdc802ad1e5b7890e903e620d8?s=24&d=retro","bio":null,"url":"https://www.v2ex.com/u/jasondennis12139","tagline":null,"twitter":null,"created":1606876692,"avatar_large":"https://cdn.v2ex.com/gravatar/c0d156bdc802ad1e5b7890e903e620d8?s=24&d=retro","avatar_mini":"https://cdn.v2ex.com/gravatar/c0d156bdc802ad1e5b7890e903e620d8?s=24&d=retro","location":null,"btc":null,"id":521719},"last_reply_by":"zpfhbyx","last_touched":1631154980,"title":"AdGuard Home 搭在腾讯云上，一天被封·······","url":"https://www.v2ex.com/t/800740","created":1631150059,"content":"害，真的难搞，搭在腾讯云上一天就被封了\r\n还有解封的希望么？","content_rendered":"<p>害，真的难搞，搭在腾讯云上一天就被封了\n还有解封的希望么？</p>\n","last_modified":1631150619,"replies":20,"id":800740},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/2387/337b/1005_large.png?m=1579006175","name":"csharp","avatar_normal":"https://cdn.v2ex.com/navatar/2387/337b/1005_normal.png?m=1579006175","title":"C#","url":"https://www.v2ex.com/go/csharp","topics":139,"footer":"","header":"","title_alternative":"C#","avatar_mini":"https://cdn.v2ex.com/navatar/2387/337b/1005_mini.png?m=1579006175","stars":498,"aliases":[],"root":false,"id":1005,"parent_node_name":"programming"},"member":{"username":"KageroY","website":null,"github":null,"psn":null,"avatar_normal":"https://cdn.v2ex.com/avatar/4722/7ff8/524962_mini.png?m=1608563956","bio":null,"url":"https://www.v2ex.com/u/KageroY","tagline":null,"twitter":null,"created":1608562856,"avatar_large":"https://cdn.v2ex.com/avatar/4722/7ff8/524962_mini.png?m=1608563956","avatar_mini":"https://cdn.v2ex.com/avatar/4722/7ff8/524962_mini.png?m=1608563956","location":null,"btc":null,"id":524962},"last_reply_by":"mangohaoming","last_touched":1631154102,"title":"VScode 配置 c 语言环境求助","url":"https://www.v2ex.com/t/800734","created":1631147358,"content":"csdn 上的博客看了个遍，还是没搞好，那三个配置文件怎么弄呢？请各位大佬指点！😉","content_rendered":"csdn 上的博客看了个遍，还是没搞好，那三个配置文件怎么弄呢？请各位大佬指点！😉","last_modified":1631147358,"replies":20,"id":800734},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/57ae/ee35/229_large.png?m=1448883313","name":"en","avatar_normal":"https://cdn.v2ex.com/navatar/57ae/ee35/229_normal.png?m=1448883313","title":"English","url":"https://www.v2ex.com/go/en","topics":171,"footer":"","header":"英语学习及使用问题讨论。","title_alternative":"English","avatar_mini":"https://cdn.v2ex.com/navatar/57ae/ee35/229_mini.png?m=1448883313","stars":190,"aliases":[],"root":false,"id":229,"parent_node_name":""},"member":{"username":"RunningDurian","website":null,"github":null,"psn":null,"avatar_normal":"https://cdn.v2ex.com/avatar/4b4f/9306/513769_mini.png?m=1625728305","bio":null,"url":"https://www.v2ex.com/u/RunningDurian","tagline":null,"twitter":null,"created":1603245925,"avatar_large":"https://cdn.v2ex.com/avatar/4b4f/9306/513769_mini.png?m=1625728305","avatar_mini":"https://cdn.v2ex.com/avatar/4b4f/9306/513769_mini.png?m=1625728305","location":null,"btc":null,"id":513769},"last_reply_by":"fxxkgw","last_touched":1631155291,"title":"程序员想提高英语 进外企，大家有什么 英语学习方法推荐吗？谢谢了","url":"https://www.v2ex.com/t/800746","created":1631151810,"content":"本人 程序员小 C，在一个规模 200 人左右的公司打工。但是公司做的是制造业。感觉前景 很渺茫，没有很大的发展。公司没啥盈利。想走了，但是我这个地方没啥好的公司。就像去 外企做个程序员。但是英语需要 很高的水平。想问问大家，该怎么学习英语，特别着急。。谢谢大伙。当社畜好累","content_rendered":"<p>本人 程序员小 C，在一个规模 200 人左右的公司打工。但是公司做的是制造业。感觉前景 很渺茫，没有很大的发展。公司没啥盈利。想走了，但是我这个地方没啥好的公司。就像去 外企做个程序员。但是英语需要 很高的水平。想问问大家，该怎么学习英语，特别着急。。谢谢大伙。当社畜好累</p>\n","last_modified":1631153657,"replies":19,"id":800746},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1629391393","name":"qna","avatar_normal":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1629391393","title":"问与答","url":"https://www.v2ex.com/go/qna","topics":176293,"footer":"","header":"一个更好的世界需要你持续地提出好问题。","title_alternative":"Questions and Answers","avatar_mini":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1629391393","stars":3310,"aliases":[],"root":false,"id":12,"parent_node_name":"v2ex"},"member":{"username":"JKeita","website":"","github":"","psn":"","avatar_normal":"https://cdn.v2ex.com/avatar/b9e1/a537/208378_mini.png?m=1625557254","bio":"","url":"https://www.v2ex.com/u/JKeita","tagline":"","twitter":"","created":1483059554,"avatar_large":"https://cdn.v2ex.com/avatar/b9e1/a537/208378_mini.png?m=1625557254","avatar_mini":"https://cdn.v2ex.com/avatar/b9e1/a537/208378_mini.png?m=1625557254","location":"","btc":"","id":208378},"last_reply_by":"ysc3839","last_touched":1631155886,"title":"桌面端应用调用 HTML 登录页是怎么实现的。","url":"https://www.v2ex.com/t/800756","created":1631153498,"content":"需求是编写 dll 能够弹出一个 web 登录页面并且进行回调；\r\n\r\n微软有一个 webview2 但是兼容性不好，依赖 edge 。\r\n\r\n最好是使用 golang 编写 dll，然后调用 html 页面的实现。","content_rendered":"<p>需求是编写 dll 能够弹出一个 web 登录页面并且进行回调；</p>\n<p>微软有一个 webview2 但是兼容性不好，依赖 edge 。</p>\n<p>最好是使用 golang 编写 dll，然后调用 html 页面的实现。</p>\n","last_modified":1631153498,"replies":14,"id":800756},{"node":{"avatar_large":"/static/img/node_default_large.png","name":"bigdata","avatar_normal":"/static/img/node_default_normal.png","title":"Big Data","url":"https://www.v2ex.com/go/bigdata","topics":20,"footer":null,"header":null,"title_alternative":"Big Data","avatar_mini":"/static/img/node_default_mini.png","stars":43,"aliases":[],"root":false,"id":621,"parent_node_name":null},"member":{"username":"Geekerstar","website":"","github":null,"psn":null,"avatar_normal":"https://cdn.v2ex.com/avatar/66d5/eebe/424937_mini.png?m=1603440470","bio":"","url":"https://www.v2ex.com/u/Geekerstar","tagline":"","twitter":null,"created":1561543035,"avatar_large":"https://cdn.v2ex.com/avatar/66d5/eebe/424937_mini.png?m=1603440470","avatar_mini":"https://cdn.v2ex.com/avatar/66d5/eebe/424937_mini.png?m=1603440470","location":"","btc":null,"id":424937},"last_reply_by":"Felldeadbird","last_touched":1631156078,"title":"不影响业务系统的情况下如何做实时大屏展示呢？","url":"https://www.v2ex.com/t/800736","created":1631148567,"content":"目前需要做个大屏展示，不能对业务系统有侵入性，需要实现类似于新增一件商品大屏上数字就实时加 1，数据库 MySQL\r\n\r\n目前考虑是通过 canal 通过 binlog 订阅某几张表来实现新增通知机制，有没有什么更好的办法呢？是个小工程，周期很短。\r\n\r\n感谢大家！！！","content_rendered":"<p>目前需要做个大屏展示，不能对业务系统有侵入性，需要实现类似于新增一件商品大屏上数字就实时加 1，数据库 MySQL</p>\n<p>目前考虑是通过 canal 通过 binlog 订阅某几张表来实现新增通知机制，有没有什么更好的办法呢？是个小工程，周期很短。</p>\n<p>感谢大家！！！</p>\n","last_modified":1631148567,"replies":9,"id":800736},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/9a11/5815/52_large.png?m=1630576655","name":"hardware","avatar_normal":"https://cdn.v2ex.com/navatar/9a11/5815/52_normal.png?m=1630576655","title":"硬件","url":"https://www.v2ex.com/go/hardware","topics":3997,"footer":"","header":"硬件发烧友的讨论节点","title_alternative":"Hardware","avatar_mini":"https://cdn.v2ex.com/navatar/9a11/5815/52_mini.png?m=1630576655","stars":1836,"aliases":[],"root":false,"id":52,"parent_node_name":"computer"},"member":{"username":"Zien","website":"","github":"","psn":"","avatar_normal":"https://cdn.v2ex.com/gravatar/c7bf51717d24bc360222a9e7c32bce47?s=24&d=retro","bio":"","url":"https://www.v2ex.com/u/Zien","tagline":"","twitter":"","created":1538877355,"avatar_large":"https://cdn.v2ex.com/gravatar/c7bf51717d24bc360222a9e7c32bce47?s=24&d=retro","avatar_mini":"https://cdn.v2ex.com/gravatar/c7bf51717d24bc360222a9e7c32bce47?s=24&d=retro","location":"","btc":"","id":354209},"last_reply_by":"ch2","last_touched":1631155455,"title":"求大佬们帮推荐一款性价比高的 nuc 类似的小机器","url":"https://www.v2ex.com/t/800743","created":1631150969,"content":"<div class=\"markdown_body\">\n <ol> \n  <li>看的眼花缭乱，只好来求助。不需要什么性能，可以 win10 开 idea+wsl 富余些即可，奔腾什么的都无所谓，尽量小，支持扩展信号不错的 Wi-Fi，最好支持 VGA+hdmi，尽量发热低，要稳定耐操。</li> \n  <li>希望利用的东西：闲置 ryzen 2200g 处理器，闲置 1t nvme 硬盘，闲置 16g 笔记本 ddr4 内存条，</li> \n  <li>我目前看中了 nuc8i5bek 和 deskmini a/x300 Wi-Fi 版，nuc8 性能过剩，不知道其他 nuc 在满足性能的情况下，哪个性价比高些？</li> \n  <li>小机器渠道是海鲜市场最划算吗？因为不是我自己用，在节约资金的前提下，尽量要少折腾不翻车。</li> \n </ol> \n</div>","content_rendered":"<div>\n<ol>\n<li>看的眼花缭乱，只好来求助。不需要什么性能，可以 win10 开 idea+wsl 富余些即可，奔腾什么的都无所谓，尽量小，支持扩展信号不错的 Wi-Fi，最好支持 VGA+hdmi，尽量发热低，要稳定耐操。</li>\n<li>希望利用的东西：闲置 ryzen 2200g 处理器，闲置 1t nvme 硬盘，闲置 16g 笔记本 ddr4 内存条，</li>\n<li>我目前看中了 nuc8i5bek 和 deskmini a/x300 Wi-Fi 版，nuc8 性能过剩，不知道其他 nuc 在满足性能的情况下，哪个性价比高些？</li>\n<li>小机器渠道是海鲜市场最划算吗？因为不是我自己用，在节约资金的前提下，尽量要少折腾不翻车。</li>\n</ol>\n</div>","last_modified":1631151325,"replies":8,"id":800743},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1629391393","name":"qna","avatar_normal":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1629391393","title":"问与答","url":"https://www.v2ex.com/go/qna","topics":176293,"footer":"","header":"一个更好的世界需要你持续地提出好问题。","title_alternative":"Questions and Answers","avatar_mini":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1629391393","stars":3310,"aliases":[],"root":false,"id":12,"parent_node_name":"v2ex"},"member":{"username":"ikichen","website":null,"github":null,"psn":null,"avatar_normal":"https://cdn.v2ex.com/avatar/96d5/1b9a/515866_mini.png?m=1605508411","bio":null,"url":"https://www.v2ex.com/u/ikichen","tagline":null,"twitter":null,"created":1604451506,"avatar_large":"https://cdn.v2ex.com/avatar/96d5/1b9a/515866_mini.png?m=1605508411","avatar_mini":"https://cdn.v2ex.com/avatar/96d5/1b9a/515866_mini.png?m=1605508411","location":null,"btc":null,"id":515866},"last_reply_by":"jerryjhou","last_touched":1631151385,"title":"ios 上有什么值得使用的广告屏蔽类 app？","url":"https://www.v2ex.com/t/800735","created":1631148466,"content":"","content_rendered":"","last_modified":1631148466,"replies":8,"id":800735},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1630512279","name":"programmer","avatar_normal":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1630512279","title":"程序员","url":"https://www.v2ex.com/go/programmer","topics":45633,"footer":"","header":"While code monkeys are not eating bananas, they're coding.","title_alternative":"Programmer","avatar_mini":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1630512279","stars":7507,"aliases":[],"root":false,"id":300,"parent_node_name":"computer"},"member":{"username":"felix021","website":"http://www.felix021.com","github":"felix021","psn":"","avatar_normal":"https://cdn.v2ex.com/avatar/ac0d/7b02/30753_mini.png?m=1588869191","bio":"","url":"https://www.v2ex.com/u/felix021","tagline":"静坐常思己过，闲谈莫论人非。","twitter":"","created":1355754362,"avatar_large":"https://cdn.v2ex.com/avatar/ac0d/7b02/30753_mini.png?m=1588869191","avatar_mini":"https://cdn.v2ex.com/avatar/ac0d/7b02/30753_mini.png?m=1588869191","location":"上海","btc":"","id":30753},"last_reply_by":"nickr","last_touched":1631155782,"title":"单元测试 ——「简单」的乐趣","url":"https://www.v2ex.com/t/800759","created":1631153867,"content":"![]( https://image-static.segmentfault.com/219/330/2193306574-6138e9cb99ed7)\r\n\r\n\r\n# 忍受简单的能力\r\n\r\n知乎大 V 李松蔚讲了个和女儿互动的故事，很有意思：\r\n\r\n> 我关上灯，对女儿说：「闭上眼睛，别乱动了。」 \r\n>\r\n> 女儿立刻大声抗议：「可是我睡不着！」 \r\n>\r\n> 我只好又强调了一遍：「我只是请你闭上眼睛，别乱动。」\r\n>\r\n> -- 李松蔚 《[忍受简单的能力]( https://mp.weixin.qq.com/s/jsLN0ApNkDJSi-wOkrKSIw)》\r\n\r\n他并没有要求女儿「尽快睡着」，而是做了个更简单的要求；但是聪明的女儿立刻联想到了「即使闭上眼睛现在也睡不着」并做出抗议。\r\n\r\n在这篇文章里，他说：「对于聪明人来说，最难以忍受的情况不是一件事有多难，而是纯粹的简单」，「没有难度挑战的任务，会让他们感到无所着力」，「重复的练习是他们的死穴」。\r\n\r\n---\r\n\r\n# 单元测试\r\n\r\n单元测试似乎就是一种「简单而重复」的过程，不论是看起来还是写起来，都是由一大堆 GIVEN - WHEN - THEN 组成。\r\n\r\n但是这「简单」的表象之下，隐藏着两个「简单」却很重要的问题：\r\n\r\n1. 为什么要写单测？\r\n2. 如何写好单测？\r\n\r\n按照套路，接下来应该先说「为什么要写单测」，但是太套路就有点无聊，所以咱们先聊聊「如何写好单测」。\r\n\r\n\r\n# 面条式代码\r\n\r\n所谓面条式代码（ spaghetti code ），是说某段代码和意大利面（不是通心粉）一样。\r\n\r\n反正不是什么好话。\r\n\r\n最近看到这么一段代码，功能是创建某个月的值班记录：\r\n\r\n```\r\ndef onduty(names):\r\n  date = datetime.strptime(\"2021-07-01\", \"%Y-%m-%d\")\r\n  idx = 0\r\n  while date < datetime.strptime(\"2021-07-31\", \"%Y-%m-%d\"):\r\n    post_data = {\r\n      \"date\": date.strftime(\"%Y-%m-%d\"),\r\n      \"name\": names[idx],\r\n      \"backup\": names[(idx+1)%len(names)],\r\n    }\r\n    requests.post(API_URL, json=post_data)\r\n    idx = (idx + 1) % len(names)\r\n    date += timedelta(days=1)\r\n```\r\n\r\n注：原代码有 60 行，这里略作简化。\r\n\r\n这是一段典型的「逻辑很齐全，但是 un 单测 able 」的代码：\r\n\r\n* 需要请求外部系统（核心原因）\r\n* 硬编码了时间段（次要问题）\r\n\r\n那么应该如何为它写单测呢？\r\n\r\n---\r\n\r\n# 重构\r\n\r\n> 如果一段代码不好写单测，说明它的代码结构有问题。\r\n>\r\n> -- 鲁迅《我没说过这句话》\r\n\r\n对于结构有问题的代码，首先要做的显然是重构。\r\n\r\n我们首先关注这段代码的主要问题：调用「 requests.post 」请求了外部系统，这导致它和外部系统耦合在一起。\r\n\r\n一个很容易想到的思路是，通过依赖注入的方式来解耦：\r\n\r\n```\r\ndef onduty(names, saver)\r\n  ...\r\n  saver(post_data)\r\n  ...\r\n```\r\n\r\n这样简单的改造以后，它就变成了一段「单测 able 」的代码了：通过 mock 一个 saver，我们可以采集并校验它的输出，例如\r\n\r\n```\r\nclass Saver(object):\r\n  def __init__(self):\r\n    self.output = []\r\n  def mocker(self):\r\n    def f(post_data):\r\n      self.output.append(post_data)\r\n    return f\r\n    \r\ndef test():\r\n  f = Saver()\r\n  onduty(['a', 'b', 'c'], f.mocker())\r\n  check(f.output)\r\n```\r\n\r\n但是这样写出来的代码非常晦涩。更合理的方法是，将这段逻辑拆分成「生成值班列表」和「上报到值班系统」：\r\n\r\n```\r\ndef onduty(names):\r\n  arrangement = arrange(names)\r\n  register(arrangement)\r\n```\r\n\r\n然后我们就可以将「生成值班列表」实现成一个纯函数：\r\n\r\n```\r\ndef arrange(names):\r\n  arrangement = []\r\n  date = datetime.strptime(\"2021-07-01\", \"%Y-%m-%d\")\r\n  idx = 0\r\n  while date < datetime.strptime(\"2021-07-31\", \"%Y-%m-%d\"):\r\n    arrangement.append({\r\n      \"date\": date.strftime(\"%Y-%m-%d\"),\r\n      \"name\": names[idx],\r\n      \"backup\": names[(idx+1)%len(names)],\r\n    })\r\n    idx = (idx + 1) % len(names)\r\n    date += timedelta(days=1)\r\n  return arrangement\r\n```\r\n\r\n就像数学课上的 `y = f(x)`，不产生任何副作用，于是我们可以非常容易地给 `arrange` 方法写单测:\r\n\r\n```\r\ndef TestArrage():\r\n    // Given\r\n    names = ['a', 'b', 'c']\r\n    // When\r\n    arrangement = arrange(names)\r\n    // Then\r\n    check(arrangment)\r\n```\r\n\r\n「上报到值班系统」的实现就像这样：\r\n\r\n```\r\ndef register(arrangement):\r\n  for item in arrangement:\r\n    requests.post(API_URL, item)\r\n```\r\n\r\n因为涉及到外部系统，确实不太适合写单测，更适合用功能测试来保障其正确性。\r\n\r\n另外，因为在 `arrange` 里硬编码了两个日期，单测的校验逻辑会非常繁琐，我们可以再对其进行重构，把日期作为参数输入：\r\n\r\n```\r\ndef arrange(names, from_date, to_date):\r\n  ...\r\n```\r\n\r\n这样使得代码的职责更明确，不但可以提高这段代码的复用性，还可以对更特别的 case （例如大小月、闰年等）做校验。\r\n\r\n\r\n小结一下：\r\n\r\n* 通过重构来提高代码的「单测 ability 」\r\n* 通过依赖注入来解决对外部的依赖 ——「面向接口编程」\r\n* 通过拆分不同环节的业务逻辑，进一步提高代码的内聚性\r\n* 通过将硬编码的值参数化，提高代码的可复用性\r\n\r\n当然，以上只是一个简单的例子，并不是完整的单测方法论。实践中还有很多其他环节需要考虑：\r\n\r\n* 选择合适的单测框架（例如 JUnit ）\r\n* 如何使用 mock 工具 /库来提高覆盖率\r\n* 如何在语句覆盖、分支覆盖、条件覆盖之间做权衡\r\n* 如何结合 CI 工具、使用单测覆盖率来评估代码质量\r\n* ……\r\n\r\n感兴趣的同学可以参考腾讯技术工程的《[聊聊单元测试那些事儿]( https://mp.weixin.qq.com/s/DJ_cIV5ytA1TVuz5kd9BAA)》。\r\n\r\n---\r\n\r\n# 单测的好处\r\n\r\n通过上面的一番骚操作，我们已经看到了单测的好处：\r\n\r\n* 为了写单测，结构不好的代码必须被重构，从而提高了**代码的质量**。\r\n\r\n而比重构现有代码更重要的是：\r\n\r\n* 为了写单测，新增的代码也必须保证合理的结构，从而提高了**思维的质量**。\r\n\r\n当然，刚开始实践单测的同学可能会感受到，这降低了编码的速度；\r\n\r\n但是经过一段时间的**重复练习**，这种思维会被**内化**，自然地就能写出高质量的代码。\r\n\r\n在实践中，单测实际上也大幅提高了**测试的效率**。\r\n\r\n构造一个完整的测试往往是很耗时的，编译 1 分钟、启动 1 分钟，发个测试请求 1 秒钟，「性价比」很低（这可能是很多同学不喜欢测试的原因）。\r\n\r\n而单测只需要编译运行少部分代码，因此可以快速验证代码逻辑。\r\n\r\n由于大量代码 bug 在单测时就已经被发现并修复了，可以大幅减少后续 “修改 - 编译 - 启动 - 测试” 环节的数量，这也极大提高了整体的测试效率。\r\n\r\n在《聊聊单元测试那些事儿》里还有一份微软的数据：\r\n\r\n> 不同测试阶段发现 BUG 的平均耗时：\r\n> * 单元测试阶段，平均耗时 3.25 小时\r\n> * 集成测试阶段，平均耗时 6.25 小时 (+92%)\r\n> * 系统测试阶段，平均耗时 11.5 小时 (+254%)\r\n\r\n最近遇到的一个 case 也是很好的例子：手头项目多版本并行，我在 A 版本开发的功能，需要 merge 到 B 版本，merge 以后，跑了一轮 test case，就可以比较放心地说，merge 后的代码没有问题 ——\r\n\r\n![unit-test]( https://image-static.segmentfault.com/370/940/3709404695-6138ebf551e5a_fix732)\r\n\r\n同样地，当我们需要给一段代码添加新功能时，如果有存量的 unit test，我就可以比较放心地去修改它了。\r\n\r\n---\r\n\r\n# 结语\r\n\r\n在《忍受简单的能力》里，李松蔚说：\r\n\r\n> 所以我认识的学生里面，除了少部分天赋异禀的奇才之外，真正最影响一个人的成就的因素，可能不是智商，也不是努力，而在于他有多「踏实」。\r\n\r\n写高质量的代码，从踏实地写单测开始。\r\n\r\nbtw，李松蔚这篇文章实在太经典，我忍不住要再引用一段：\r\n\r\n> 一口一口地吃饭太慢了。恨不得一口吃下一百口，谁叫锅里还有那么多？\r\n> 所以重要的事情才要说三遍。可是上一段让你看了三遍的话是什么，你还记得吗？\r\n\r\n如果不记得的话，可以试试下面这句：\r\n\r\n加入**神策数据**，帮助客户实现数据驱动。\r\n\r\n加入**神策数据**，帮助客户实现数据驱动。\r\n\r\n加入**神策数据**，帮助客户实现数据驱动。\r\n\r\n神策数据是一家致力于“帮助三千万企业重构数据根基，实现数字化经营”的大数据公司。公司正在飞速发展，在北京、上海、武汉、成都、西安、合肥等地都有研发中心，后端、前端、客户端、QA 等岗位均虚位以待，对大数据感兴趣的同学千万不要错过 ——\r\n\r\n→ **[点此查看神策数据的所有职位]( https://app.mokahr.com/recommendation-apply/sensorsdata/2913?sharePageId=722194&recommenderId=1434845#/recommendation/page/722194)**\r\n\r\n\r\n\r\n---\r\n\r\n# 欢迎关注我的公众号\r\n\r\n\r\n```\r\n   ▄▄▄▄▄▄▄   ▄      ▄▄▄▄ ▄▄▄▄▄▄▄  \r\n   █ ▄▄▄ █ ▄▀ ▄ ▀██▄ ▀█▄ █ ▄▄▄ █  \r\n   █ ███ █  █  █  █▀▀▀█▀ █ ███ █  \r\n   █▄▄▄▄▄█ ▄ █▀█ █▀█ ▄▀█ █▄▄▄▄▄█  \r\n   ▄▄▄ ▄▄▄▄█  ▀▄█▀▀▀█ ▄█▄▄   ▄    \r\n   ▄█▄▄▄▄▄▀▄▀▄██   ▀ ▄  █▀▄▄▀▄▄█  \r\n   █ █▀▄▀▄▄▀▀█▄▀█▄▀█████▀█▀▀█ █▄  \r\n    ▀▀  █▄██▄█▀  █ ▀█▀ ▀█▀ ▄▀▀▄█  \r\n   █▀ ▀ ▄▄▄▄▄▄▀▄██  █ ▄████▀▀ █▄  \r\n   ▄▀▄▄▄ ▄ ▀▀▄████▀█▀  ▀ █▄▄▄▀▄█  \r\n   ▄▀▀██▄▄  █▀▄▀█▀▀ █▀ ▄▄▄██▀ ▀   \r\n   ▄▄▄▄▄▄▄ █ █▀ ▀▀   ▄██ ▄ █▄▀██  \r\n   █ ▄▄▄ █ █▄ ▀▄▀ ▀██  █▄▄▄█▄  ▀  \r\n   █ ███ █ ▄ ███▀▀▀█▄ █▀▄ ██▄ ▀█  \r\n   █▄▄▄▄▄█ ██ ▄█▀█  █ ▀██▄▄▄  █▄  \r\n```\r\n\r\n\r\n---\r\n\r\n# 参考链接\r\n\r\n1. [忍受简单的能力]( https://mp.weixin.qq.com/s/jsLN0ApNkDJSi-wOkrKSIw)\r\n2. [聊聊单元测试那些事儿]( https://mp.weixin.qq.com/s/DJ_cIV5ytA1TVuz5kd9BAA)","content_rendered":"<p><img alt=\"\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://image-static.segmentfault.com/219/330/2193306574-6138e9cb99ed7\"/></p>\n<h1>忍受简单的能力</h1>\n<p>知乎大 V 李松蔚讲了个和女儿互动的故事，很有意思：</p>\n<blockquote>\n<p>我关上灯，对女儿说：「闭上眼睛，别乱动了。」 </p>\n<p>女儿立刻大声抗议：「可是我睡不着！」 </p>\n<p>我只好又强调了一遍：「我只是请你闭上眼睛，别乱动。」</p>\n<p>-- 李松蔚 《<a href=\"https://mp.weixin.qq.com/s/jsLN0ApNkDJSi-wOkrKSIw\" rel=\"nofollow\">忍受简单的能力</a>》</p>\n</blockquote>\n<p>他并没有要求女儿「尽快睡着」，而是做了个更简单的要求；但是聪明的女儿立刻联想到了「即使闭上眼睛现在也睡不着」并做出抗议。</p>\n<p>在这篇文章里，他说：「对于聪明人来说，最难以忍受的情况不是一件事有多难，而是纯粹的简单」，「没有难度挑战的任务，会让他们感到无所着力」，「重复的练习是他们的死穴」。</p>\n<hr/>\n<h1>单元测试</h1>\n<p>单元测试似乎就是一种「简单而重复」的过程，不论是看起来还是写起来，都是由一大堆 GIVEN - WHEN - THEN 组成。</p>\n<p>但是这「简单」的表象之下，隐藏着两个「简单」却很重要的问题：</p>\n<ol>\n<li>为什么要写单测？</li>\n<li>如何写好单测？</li>\n</ol>\n<p>按照套路，接下来应该先说「为什么要写单测」，但是太套路就有点无聊，所以咱们先聊聊「如何写好单测」。</p>\n<h1>面条式代码</h1>\n<p>所谓面条式代码（ spaghetti code ），是说某段代码和意大利面（不是通心粉）一样。</p>\n<p>反正不是什么好话。</p>\n<p>最近看到这么一段代码，功能是创建某个月的值班记录：</p>\n<pre><code>def onduty(names):\n  date = datetime.strptime(\"2021-07-01\", \"%Y-%m-%d\")\n  idx = 0\n  while date &lt; datetime.strptime(\"2021-07-31\", \"%Y-%m-%d\"):\n    post_data = {\n      \"date\": date.strftime(\"%Y-%m-%d\"),\n      \"name\": names[idx],\n      \"backup\": names[(idx+1)%len(names)],\n    }\n    requests.post(API_URL, json=post_data)\n    idx = (idx + 1) % len(names)\n    date += timedelta(days=1)\n</code></pre>\n<p>注：原代码有 60 行，这里略作简化。</p>\n<p>这是一段典型的「逻辑很齐全，但是 un 单测 able 」的代码：</p>\n<ul>\n<li>需要请求外部系统（核心原因）</li>\n<li>硬编码了时间段（次要问题）</li>\n</ul>\n<p>那么应该如何为它写单测呢？</p>\n<hr/>\n<h1>重构</h1>\n<blockquote>\n<p>如果一段代码不好写单测，说明它的代码结构有问题。</p>\n<p>-- 鲁迅《我没说过这句话》</p>\n</blockquote>\n<p>对于结构有问题的代码，首先要做的显然是重构。</p>\n<p>我们首先关注这段代码的主要问题：调用「 <a href=\"http://requests.post\" rel=\"nofollow\">requests.post</a> 」请求了外部系统，这导致它和外部系统耦合在一起。</p>\n<p>一个很容易想到的思路是，通过依赖注入的方式来解耦：</p>\n<pre><code>def onduty(names, saver)\n  ...\n  saver(post_data)\n  ...\n</code></pre>\n<p>这样简单的改造以后，它就变成了一段「单测 able 」的代码了：通过 mock 一个 saver，我们可以采集并校验它的输出，例如</p>\n<pre><code>class Saver(object):\n  def __init__(self):\n    self.output = []\n  def mocker(self):\n    def f(post_data):\n      self.output.append(post_data)\n    return f\n    \ndef test():\n  f = Saver()\n  onduty(['a', 'b', 'c'], f.mocker())\n  check(f.output)\n</code></pre>\n<p>但是这样写出来的代码非常晦涩。更合理的方法是，将这段逻辑拆分成「生成值班列表」和「上报到值班系统」：</p>\n<pre><code>def onduty(names):\n  arrangement = arrange(names)\n  register(arrangement)\n</code></pre>\n<p>然后我们就可以将「生成值班列表」实现成一个纯函数：</p>\n<pre><code>def arrange(names):\n  arrangement = []\n  date = datetime.strptime(\"2021-07-01\", \"%Y-%m-%d\")\n  idx = 0\n  while date &lt; datetime.strptime(\"2021-07-31\", \"%Y-%m-%d\"):\n    arrangement.append({\n      \"date\": date.strftime(\"%Y-%m-%d\"),\n      \"name\": names[idx],\n      \"backup\": names[(idx+1)%len(names)],\n    })\n    idx = (idx + 1) % len(names)\n    date += timedelta(days=1)\n  return arrangement\n</code></pre>\n<p>就像数学课上的 <code>y = f(x)</code>，不产生任何副作用，于是我们可以非常容易地给 <code>arrange</code> 方法写单测:</p>\n<pre><code>def TestArrage():\n    // Given\n    names = ['a', 'b', 'c']\n    // When\n    arrangement = arrange(names)\n    // Then\n    check(arrangment)\n</code></pre>\n<p>「上报到值班系统」的实现就像这样：</p>\n<pre><code>def register(arrangement):\n  for item in arrangement:\n    requests.post(API_URL, item)\n</code></pre>\n<p>因为涉及到外部系统，确实不太适合写单测，更适合用功能测试来保障其正确性。</p>\n<p>另外，因为在 <code>arrange</code> 里硬编码了两个日期，单测的校验逻辑会非常繁琐，我们可以再对其进行重构，把日期作为参数输入：</p>\n<pre><code>def arrange(names, from_date, to_date):\n  ...\n</code></pre>\n<p>这样使得代码的职责更明确，不但可以提高这段代码的复用性，还可以对更特别的 case （例如大小月、闰年等）做校验。</p>\n<p>小结一下：</p>\n<ul>\n<li>通过重构来提高代码的「单测 ability 」</li>\n<li>通过依赖注入来解决对外部的依赖 ——「面向接口编程」</li>\n<li>通过拆分不同环节的业务逻辑，进一步提高代码的内聚性</li>\n<li>通过将硬编码的值参数化，提高代码的可复用性</li>\n</ul>\n<p>当然，以上只是一个简单的例子，并不是完整的单测方法论。实践中还有很多其他环节需要考虑：</p>\n<ul>\n<li>选择合适的单测框架（例如 JUnit ）</li>\n<li>如何使用 mock 工具 /库来提高覆盖率</li>\n<li>如何在语句覆盖、分支覆盖、条件覆盖之间做权衡</li>\n<li>如何结合 CI 工具、使用单测覆盖率来评估代码质量</li>\n<li>……</li>\n</ul>\n<p>感兴趣的同学可以参考腾讯技术工程的《<a href=\"https://mp.weixin.qq.com/s/DJ_cIV5ytA1TVuz5kd9BAA\" rel=\"nofollow\">聊聊单元测试那些事儿</a>》。</p>\n<hr/>\n<h1>单测的好处</h1>\n<p>通过上面的一番骚操作，我们已经看到了单测的好处：</p>\n<ul>\n<li>为了写单测，结构不好的代码必须被重构，从而提高了<strong>代码的质量</strong>。</li>\n</ul>\n<p>而比重构现有代码更重要的是：</p>\n<ul>\n<li>为了写单测，新增的代码也必须保证合理的结构，从而提高了<strong>思维的质量</strong>。</li>\n</ul>\n<p>当然，刚开始实践单测的同学可能会感受到，这降低了编码的速度；</p>\n<p>但是经过一段时间的<strong>重复练习</strong>，这种思维会被<strong>内化</strong>，自然地就能写出高质量的代码。</p>\n<p>在实践中，单测实际上也大幅提高了<strong>测试的效率</strong>。</p>\n<p>构造一个完整的测试往往是很耗时的，编译 1 分钟、启动 1 分钟，发个测试请求 1 秒钟，「性价比」很低（这可能是很多同学不喜欢测试的原因）。</p>\n<p>而单测只需要编译运行少部分代码，因此可以快速验证代码逻辑。</p>\n<p>由于大量代码 bug 在单测时就已经被发现并修复了，可以大幅减少后续 “修改 - 编译 - 启动 - 测试” 环节的数量，这也极大提高了整体的测试效率。</p>\n<p>在《聊聊单元测试那些事儿》里还有一份微软的数据：</p>\n<blockquote>\n<p>不同测试阶段发现 BUG 的平均耗时：</p>\n<ul>\n<li>单元测试阶段，平均耗时 3.25 小时</li>\n<li>集成测试阶段，平均耗时 6.25 小时 (+92%)</li>\n<li>系统测试阶段，平均耗时 11.5 小时 (+254%)</li>\n</ul>\n</blockquote>\n<p>最近遇到的一个 case 也是很好的例子：手头项目多版本并行，我在 A 版本开发的功能，需要 merge 到 B 版本，merge 以后，跑了一轮 test case，就可以比较放心地说，merge 后的代码没有问题 ——</p>\n<p><img alt=\"unit-test\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://image-static.segmentfault.com/370/940/3709404695-6138ebf551e5a_fix732\"/></p>\n<p>同样地，当我们需要给一段代码添加新功能时，如果有存量的 unit test，我就可以比较放心地去修改它了。</p>\n<hr/>\n<h1>结语</h1>\n<p>在《忍受简单的能力》里，李松蔚说：</p>\n<blockquote>\n<p>所以我认识的学生里面，除了少部分天赋异禀的奇才之外，真正最影响一个人的成就的因素，可能不是智商，也不是努力，而在于他有多「踏实」。</p>\n</blockquote>\n<p>写高质量的代码，从踏实地写单测开始。</p>\n<p>btw，李松蔚这篇文章实在太经典，我忍不住要再引用一段：</p>\n<blockquote>\n<p>一口一口地吃饭太慢了。恨不得一口吃下一百口，谁叫锅里还有那么多？\n所以重要的事情才要说三遍。可是上一段让你看了三遍的话是什么，你还记得吗？</p>\n</blockquote>\n<p>如果不记得的话，可以试试下面这句：</p>\n<p>加入<strong>神策数据</strong>，帮助客户实现数据驱动。</p>\n<p>加入<strong>神策数据</strong>，帮助客户实现数据驱动。</p>\n<p>加入<strong>神策数据</strong>，帮助客户实现数据驱动。</p>\n<p>神策数据是一家致力于“帮助三千万企业重构数据根基，实现数字化经营”的大数据公司。公司正在飞速发展，在北京、上海、武汉、成都、西安、合肥等地都有研发中心，后端、前端、客户端、QA 等岗位均虚位以待，对大数据感兴趣的同学千万不要错过 ——</p>\n<p>→ <strong><a href=\"https://app.mokahr.com/recommendation-apply/sensorsdata/2913?sharePageId=722194&amp;recommenderId=1434845#/recommendation/page/722194\" rel=\"nofollow\">点此查看神策数据的所有职位</a></strong></p>\n<hr/>\n<h1>欢迎关注我的公众号</h1>\n<pre><code>   ▄▄▄▄▄▄▄   ▄      ▄▄▄▄ ▄▄▄▄▄▄▄  \n   █ ▄▄▄ █ ▄▀ ▄ ▀██▄ ▀█▄ █ ▄▄▄ █  \n   █ ███ █  █  █  █▀▀▀█▀ █ ███ █  \n   █▄▄▄▄▄█ ▄ █▀█ █▀█ ▄▀█ █▄▄▄▄▄█  \n   ▄▄▄ ▄▄▄▄█  ▀▄█▀▀▀█ ▄█▄▄   ▄    \n   ▄█▄▄▄▄▄▀▄▀▄██   ▀ ▄  █▀▄▄▀▄▄█  \n   █ █▀▄▀▄▄▀▀█▄▀█▄▀█████▀█▀▀█ █▄  \n    ▀▀  █▄██▄█▀  █ ▀█▀ ▀█▀ ▄▀▀▄█  \n   █▀ ▀ ▄▄▄▄▄▄▀▄██  █ ▄████▀▀ █▄  \n   ▄▀▄▄▄ ▄ ▀▀▄████▀█▀  ▀ █▄▄▄▀▄█  \n   ▄▀▀██▄▄  █▀▄▀█▀▀ █▀ ▄▄▄██▀ ▀   \n   ▄▄▄▄▄▄▄ █ █▀ ▀▀   ▄██ ▄ █▄▀██  \n   █ ▄▄▄ █ █▄ ▀▄▀ ▀██  █▄▄▄█▄  ▀  \n   █ ███ █ ▄ ███▀▀▀█▄ █▀▄ ██▄ ▀█  \n   █▄▄▄▄▄█ ██ ▄█▀█  █ ▀██▄▄▄  █▄  \n</code></pre>\n<hr/>\n<h1>参考链接</h1>\n<ol>\n<li><a href=\"https://mp.weixin.qq.com/s/jsLN0ApNkDJSi-wOkrKSIw\" rel=\"nofollow\">忍受简单的能力</a></li>\n<li><a href=\"https://mp.weixin.qq.com/s/DJ_cIV5ytA1TVuz5kd9BAA\" rel=\"nofollow\">聊聊单元测试那些事儿</a></li>\n</ol>\n","last_modified":1631153980,"replies":7,"id":800759}]