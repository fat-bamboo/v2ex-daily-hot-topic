[{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/6e27/13a6/557_large.png?m=1608969785","name":"life","avatar_normal":"https://cdn.v2ex.com/navatar/6e27/13a6/557_normal.png?m=1608969785","title":"生活","url":"https://www.v2ex.com/go/life","topics":2917,"footer":"","header":"生活中的技术讨论","title_alternative":"Life","avatar_mini":"https://cdn.v2ex.com/navatar/6e27/13a6/557_mini.png?m=1608969785","stars":772,"aliases":[],"root":false,"id":557,"parent_node_name":""},"member":{"id":563276,"username":"ppllss","url":"https://www.v2ex.com/u/ppllss","website":null,"twitter":null,"psn":null,"github":null,"btc":null,"location":null,"tagline":null,"bio":null,"avatar_mini":"https://cdn.v2ex.com/gravatar/556f117bf417b3a0fec61efbf5b6160e?s=24&d=retro","avatar_normal":"https://cdn.v2ex.com/gravatar/556f117bf417b3a0fec61efbf5b6160e?s=48&d=retro","avatar_large":"https://cdn.v2ex.com/gravatar/556f117bf417b3a0fec61efbf5b6160e?s=73&d=retro","created":1637850193,"last_modified":1644630095},"last_reply_by":"xingshu1990","last_touched":1644648745,"title":"在大城市，年龄越大越发觉得孤独，该怎么缓解这种情绪。","url":"https://www.v2ex.com/t/833351","created":1644630282,"deleted":0,"content":"感觉自己很压抑，每天回去到出租房都是一个人，除了看看电影，看看直播，感觉越发觉得无趣。\r\n\r\n每当回家都一种失落感，感觉很孤独，没有人聊心里话，不知道心里出什么问题了？还是我内心不够强大？\r\n\r\n不知道兄弟们，怎么去缓解这种不良的情绪？","content_rendered":"<p>感觉自己很压抑，每天回去到出租房都是一个人，除了看看电影，看看直播，感觉越发觉得无趣。</p>\n<p>每当回家都一种失落感，感觉很孤独，没有人聊心里话，不知道心里出什么问题了？还是我内心不够强大？</p>\n<p>不知道兄弟们，怎么去缓解这种不良的情绪？</p>\n","last_modified":1644630282,"replies":53,"id":833351},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1629391393","name":"qna","avatar_normal":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1629391393","title":"问与答","url":"https://www.v2ex.com/go/qna","topics":181470,"footer":"","header":"一个更好的世界需要你持续地提出好问题。","title_alternative":"Questions and Answers","avatar_mini":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1629391393","stars":3415,"aliases":[],"root":false,"id":12,"parent_node_name":"v2ex"},"member":{"id":556900,"username":"V9NN","url":"https://www.v2ex.com/u/V9NN","website":"","twitter":null,"psn":null,"github":null,"btc":null,"location":"","tagline":"","bio":"","avatar_mini":"https://cdn.v2ex.com/gravatar/ab5a7987d56e681a68ed920468ec7186?s=24&d=retro","avatar_normal":"https://cdn.v2ex.com/gravatar/ab5a7987d56e681a68ed920468ec7186?s=48&d=retro","avatar_large":"https://cdn.v2ex.com/gravatar/ab5a7987d56e681a68ed920468ec7186?s=73&d=retro","created":1632620580,"last_modified":1644537985},"last_reply_by":"QGabriel","last_touched":1644648662,"title":"如何应对京东金融的频繁骚扰？","url":"https://www.v2ex.com/t/833343","created":1644625016,"deleted":0,"content":"最近京东金融平均一天打 2 次电话，完了还发短信，电话打一次变一个号，识别软件不能识别出来，这该如何是好？","content_rendered":"<p>最近京东金融平均一天打 2 次电话，完了还发短信，电话打一次变一个号，识别软件不能识别出来，这该如何是好？</p>\n","last_modified":1644625091,"replies":32,"id":833343},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/c74d/97b0/16_large.png?m=1628872984","name":"share","avatar_normal":"https://cdn.v2ex.com/navatar/c74d/97b0/16_normal.png?m=1628872984","title":"分享发现","url":"https://www.v2ex.com/go/share","topics":35016,"footer":"","header":"分享你看到的好玩的，有信息量的，欢迎从这里获取灵感。","title_alternative":"Share","avatar_mini":"https://cdn.v2ex.com/navatar/c74d/97b0/16_mini.png?m=1628872984","stars":4730,"aliases":[],"root":false,"id":16,"parent_node_name":"v2ex"},"member":{"id":251364,"username":"LittleState","url":"https://www.v2ex.com/u/LittleState","website":null,"twitter":null,"psn":null,"github":null,"btc":null,"location":null,"tagline":null,"bio":null,"avatar_mini":"https://cdn.v2ex.com/avatar/31e3/3f78/251364_mini.png?m=1566171099","avatar_normal":"https://cdn.v2ex.com/avatar/31e3/3f78/251364_normal.png?m=1566171099","avatar_large":"https://cdn.v2ex.com/avatar/31e3/3f78/251364_large.png?m=1566171099","created":1503985036,"last_modified":1566171099},"last_reply_by":"goodhellonice","last_touched":1644585925,"title":"头一回感觉被拼多多恶心到…","url":"https://www.v2ex.com/t/833350","created":1644629391,"deleted":0,"content":"想上去买个垃圾袋，结果之前的订单提示我可是返现。\n\n我点开看了下让我实名认证，我就赶紧退出了，但是外面有个界面又给了我 1 元，微信到账了。\n\n我就想着那个实名认证应该也是会给的吧，反正也都认证那么多平台了，就弄一下。\n\n\n\n实名认证、绑定银行卡，一顿操作下来给我开通了多多钱包，然后 52 块钱就是给我了…总计 52 元的小额优惠卷……\n\n\n\n注销还要先注销多多钱包，还必须开通时间大于 7 天，真的有被恶心到。我淦！！主要是这顿操作下来给我开通多多钱包、还开通免密支付，结果最后就给我一两元的优惠卷，这特么不是恶心人么，和骗子有区别么…\n\n还有我一路上操作也没看到提示我给我开通免密支付，是看到工行短信提示才发现\n\n\n\n淦！！七天后就注销了这恶心东西","content_rendered":"想上去买个垃圾袋，结果之前的订单提示我可是返现。<br /><br />我点开看了下让我实名认证，我就赶紧退出了，但是外面有个界面又给了我 1 元，微信到账了。<br /><br />我就想着那个实名认证应该也是会给的吧，反正也都认证那么多平台了，就弄一下。<br /><br /><br /><br />实名认证、绑定银行卡，一顿操作下来给我开通了多多钱包，然后 52 块钱就是给我了…总计 52 元的小额优惠卷……<br /><br /><br /><br />注销还要先注销多多钱包，还必须开通时间大于 7 天，真的有被恶心到。我淦！！主要是这顿操作下来给我开通多多钱包、还开通免密支付，结果最后就给我一两元的优惠卷，这特么不是恶心人么，和骗子有区别么…<br /><br />还有我一路上操作也没看到提示我给我开通免密支付，是看到工行短信提示才发现<br /><br /><br /><br />淦！！七天后就注销了这恶心东西","last_modified":1644629391,"replies":17,"id":833350},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/fc49/0ca4/65_large.png?m=1524891806","name":"google","avatar_normal":"https://cdn.v2ex.com/navatar/fc49/0ca4/65_normal.png?m=1524891806","title":"Google","url":"https://www.v2ex.com/go/google","topics":2751,"footer":"","header":"Google’s mission is to organize the world’s information and make it universally accessible and useful.","title_alternative":"Google","avatar_mini":"https://cdn.v2ex.com/navatar/fc49/0ca4/65_mini.png?m=1524891806","stars":3331,"aliases":[],"root":false,"id":65,"parent_node_name":"internet"},"member":{"id":265760,"username":"hongzhng","url":"https://www.v2ex.com/u/hongzhng","website":"","twitter":"","psn":"","github":"","btc":"","location":"","tagline":"","bio":"","avatar_mini":"https://cdn.v2ex.com/avatar/0738/98f2/265760_mini.png?m=1532333298","avatar_normal":"https://cdn.v2ex.com/avatar/0738/98f2/265760_normal.png?m=1532333298","avatar_large":"https://cdn.v2ex.com/avatar/0738/98f2/265760_large.png?m=1532333298","created":1510126581,"last_modified":1532333298},"last_reply_by":"JVMEXCEPTION","last_touched":1644642762,"title":"请问下 google drive 2t 有什么优惠的购买渠道","url":"https://www.v2ex.com/t/833348","created":1644628672,"deleted":0,"content":"想把 NAS 里的接近 2T 的文件存到 google drive 里，感觉花钱的总归会靠谱些。 看到 google one 年付一年 99 刀，可以接受，但是还想请问下除了年付，还有什么别的优惠么？ 还有就是如果 2t 用完，还有更大的空间可以购买么？ 谢谢了\r\n\r\n有自己学校的校友 gd 和 自己弄的 e5 ，但是总觉得不是花钱的不太放心放文件。:(","content_rendered":"<p>想把 NAS 里的接近 2T 的文件存到 google drive 里，感觉花钱的总归会靠谱些。 看到 google one 年付一年 99 刀，可以接受，但是还想请问下除了年付，还有什么别的优惠么？ 还有就是如果 2t 用完，还有更大的空间可以购买么？ 谢谢了</p>\n<p>有自己学校的校友 gd 和 自己弄的 e5 ，但是总觉得不是花钱的不太放心放文件。:(</p>\n","last_modified":1644628714,"replies":17,"id":833348},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/3b5d/ca50/819_large.png?m=1633251402","name":"watch","avatar_normal":"https://cdn.v2ex.com/navatar/3b5d/ca50/819_normal.png?m=1633251402","title":" WATCH","url":"https://www.v2ex.com/go/watch","topics":752,"footer":"","header":"<a href=\"/go/apple\">Apple</a> 公司设计的智能手表产品","title_alternative":" WATCH","avatar_mini":"https://cdn.v2ex.com/navatar/3b5d/ca50/819_mini.png?m=1633251402","stars":358,"aliases":[],"root":false,"id":819,"parent_node_name":"apple"},"member":{"id":495591,"username":"YoungKing6","url":"https://www.v2ex.com/u/YoungKing6","website":"","twitter":"","psn":"","github":"","btc":"","location":"","tagline":"More than","bio":"","avatar_mini":"https://cdn.v2ex.com/avatar/87ed/7214/495591_mini.png?m=1635077020","avatar_normal":"https://cdn.v2ex.com/avatar/87ed/7214/495591_normal.png?m=1635077020","avatar_large":"https://cdn.v2ex.com/avatar/87ed/7214/495591_large.png?m=1635077020","created":1592622490,"last_modified":1635077020},"last_reply_by":"pierrec","last_touched":1644644258,"title":"Apple Watch 有换过电池的吗？健康度 80 了","url":"https://www.v2ex.com/t/833347","created":1644627955,"deleted":0,"content":"Apple Watch Series5","content_rendered":"<p>Apple Watch Series5</p>\n","last_modified":1644640162,"replies":17,"id":833347},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/f033/ab37/80_large.png?m=1584298347","name":"wuhan","avatar_normal":"https://cdn.v2ex.com/navatar/f033/ab37/80_normal.png?m=1584298347","title":"武汉","url":"https://www.v2ex.com/go/wuhan","topics":231,"footer":"","header":"","title_alternative":"Wuhan","avatar_mini":"https://cdn.v2ex.com/navatar/f033/ab37/80_mini.png?m=1584298347","stars":575,"aliases":[],"root":false,"id":80,"parent_node_name":"cn"},"member":{"id":434804,"username":"Zhancha","url":"https://www.v2ex.com/u/Zhancha","website":null,"twitter":null,"psn":null,"github":null,"btc":null,"location":null,"tagline":null,"bio":null,"avatar_mini":"https://cdn.v2ex.com/avatar/50e6/b547/434804_mini.png?m=1642565999","avatar_normal":"https://cdn.v2ex.com/avatar/50e6/b547/434804_normal.png?m=1642565999","avatar_large":"https://cdn.v2ex.com/avatar/50e6/b547/434804_large.png?m=1642565999","avatar_xlarge":"https://cdn.v2ex.com/avatar/50e6/b547/434804_xlarge.png?m=1642565999","avatar_xxlarge":"https://cdn.v2ex.com/avatar/50e6/b547/434804_xlarge.png?m=1642565999","avatar_xxxlarge":"https://cdn.v2ex.com/avatar/50e6/b547/434804_xlarge.png?m=1642565999","created":1565340792,"last_modified":1642565999},"last_reply_by":"jtiantian666","last_touched":1644646909,"title":"武汉购房相关问题求教。","url":"https://www.v2ex.com/t/833345","created":1644626558,"deleted":0,"content":"楼主小白一枚，是一定会在武汉上车的，时间早晚问题（ 5 年内）。\r\n\r\n工作地点在光谷，但光谷房价太高，估计可能会在白沙洲等地上车或者二手房。\r\n\r\n目前只知道在 安居客，幸福里 等平台查看房价，加中介询问，未实地考察过，也不知从何处考察起。\r\n\r\n没接触过金融地产等相关行业，不太看得懂房价走势，目前在 V 站、知乎、油管等地方获取知识。\r\n\r\n所以在此询问下大伙有关建议，关于看房买房，房价走势，二手房等问题的相关建议都可。\r\n\r\n另外如果有武汉购房群求加入。\r\n\r\n附带上在 V 站看到的比较高赞（ 50+）的相关评论：\r\n\r\n- 那些说什么刚需上车就完事的就是扯淡，身边刚有人前几个月上车的 2.2 ，现在开发商直接卖 1.8 还能送车位，你就算刚需你说等几个月入手立减几十万你不在乎？他们已经去砸售楼部跟保安群殴去了\r\n- 对于只有一套房的人来说涨了是拿不到的纸面数字，跌了是可以拿到的真金白银\r\n\r\n感谢各位的慷慨帮助！","content_rendered":"<p>楼主小白一枚，是一定会在武汉上车的，时间早晚问题（ 5 年内）。</p>\n<p>工作地点在光谷，但光谷房价太高，估计可能会在白沙洲等地上车或者二手房。</p>\n<p>目前只知道在 安居客，幸福里 等平台查看房价，加中介询问，未实地考察过，也不知从何处考察起。</p>\n<p>没接触过金融地产等相关行业，不太看得懂房价走势，目前在 V 站、知乎、油管等地方获取知识。</p>\n<p>所以在此询问下大伙有关建议，关于看房买房，房价走势，二手房等问题的相关建议都可。</p>\n<p>另外如果有武汉购房群求加入。</p>\n<p>附带上在 V 站看到的比较高赞（ 50+）的相关评论：</p>\n<ul>\n<li>那些说什么刚需上车就完事的就是扯淡，身边刚有人前几个月上车的 2.2 ，现在开发商直接卖 1.8 还能送车位，你就算刚需你说等几个月入手立减几十万你不在乎？他们已经去砸售楼部跟保安群殴去了</li>\n<li>对于只有一套房的人来说涨了是拿不到的纸面数字，跌了是可以拿到的真金白银</li>\n</ul>\n<p>感谢各位的慷慨帮助！</p>\n","last_modified":1644644626,"replies":17,"id":833345},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/03af/dbd6/63_large.png?m=1644490200","name":"java","avatar_normal":"https://cdn.v2ex.com/navatar/03af/dbd6/63_normal.png?m=1644490200","title":"Java","url":"https://www.v2ex.com/go/java","topics":4786,"footer":"","header":"Sun 公司发明，被广泛使用的一门编程语言。","title_alternative":"Java","avatar_mini":"https://cdn.v2ex.com/navatar/03af/dbd6/63_mini.png?m=1644490200","stars":4790,"aliases":[],"root":false,"id":63,"parent_node_name":"programming"},"member":{"id":100942,"username":"Michelangelono","url":"https://www.v2ex.com/u/Michelangelono","website":null,"twitter":null,"psn":null,"github":null,"btc":null,"location":null,"tagline":null,"bio":null,"avatar_mini":"https://cdn.v2ex.com/gravatar/89d8e993f0b289ff8f72296c9e930f52?s=24&d=retro","avatar_normal":"https://cdn.v2ex.com/gravatar/89d8e993f0b289ff8f72296c9e930f52?s=48&d=retro","avatar_large":"https://cdn.v2ex.com/gravatar/89d8e993f0b289ff8f72296c9e930f52?s=73&d=retro","created":1425050211,"last_modified":1425050211},"last_reply_by":"coala","last_touched":1644647270,"title":"做一个管理停车场设备的硬件要怎么设计？","url":"https://www.v2ex.com/t/833373","created":1644641858,"deleted":0,"content":"我们计划是用 java 写一个跑在工控机的脚本，然后脚本会广播出一个后台管理的网页。脚本还会管理视频流，控制闸道的开启之类的操作。工控机连公网，定期分发配置信息（停车场价格的），然后定期上传订单信息等。\r\n这个方案靠谱吗？还有啥其他更靠谱的方案吗？","content_rendered":"<p>我们计划是用 java 写一个跑在工控机的脚本，然后脚本会广播出一个后台管理的网页。脚本还会管理视频流，控制闸道的开启之类的操作。工控机连公网，定期分发配置信息（停车场价格的），然后定期上传订单信息等。\n这个方案靠谱吗？还有啥其他更靠谱的方案吗？</p>\n","last_modified":1644641858,"replies":16,"id":833373},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/a4f2/3670/260_large.png?m=1633245702","name":"security","avatar_normal":"https://cdn.v2ex.com/navatar/a4f2/3670/260_normal.png?m=1633245702","title":"信息安全","url":"https://www.v2ex.com/go/security","topics":1290,"footer":"","header":"我们都希望自己管理的计算机系统在运转过程中不要遇到任何安全事件。只是，这个不完美的世界的现实告诉我们：学无止境。","title_alternative":"Security","avatar_mini":"https://cdn.v2ex.com/navatar/a4f2/3670/260_mini.png?m=1633245702","stars":1425,"aliases":[],"root":false,"id":260,"parent_node_name":"geek"},"member":{"id":544444,"username":"BloodBlade","url":"https://www.v2ex.com/u/BloodBlade","website":null,"twitter":null,"psn":null,"github":null,"btc":null,"location":null,"tagline":null,"bio":null,"avatar_mini":"https://cdn.v2ex.com/gravatar/cbe542f7a03e365f746c7376b4996c81?s=24&d=retro","avatar_normal":"https://cdn.v2ex.com/gravatar/cbe542f7a03e365f746c7376b4996c81?s=48&d=retro","avatar_large":"https://cdn.v2ex.com/gravatar/cbe542f7a03e365f746c7376b4996c81?s=73&d=retro","created":1620117946,"last_modified":1620117946},"last_reply_by":"4ark","last_touched":1644646896,"title":"请问大家是如何保存账号的恢复代码的？","url":"https://www.v2ex.com/t/833362","created":1644637360,"deleted":0,"content":"原本是保存在密码管理器里面，但是最近想到，如果密码管理器出了问题，那岂不是恢复代码也无法访问了吗？","content_rendered":"<p>原本是保存在密码管理器里面，但是最近想到，如果密码管理器出了问题，那岂不是恢复代码也无法访问了吗？</p>\n","last_modified":1644639586,"replies":15,"id":833362},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/70ef/df2e/17_large.png?m=1629391403","name":"create","avatar_normal":"https://cdn.v2ex.com/navatar/70ef/df2e/17_normal.png?m=1629391403","title":"分享创造","url":"https://www.v2ex.com/go/create","topics":17305,"footer":"","header":"欢迎你在这里发布自己的最新作品！","title_alternative":"Create","avatar_mini":"https://cdn.v2ex.com/navatar/70ef/df2e/17_mini.png?m=1629391403","stars":4181,"aliases":[],"root":false,"id":17,"parent_node_name":"geek"},"member":{"id":73472,"username":"willin","url":"https://www.v2ex.com/u/willin","website":"https://willin.wang","twitter":"willinwang","psn":"","github":"willin","btc":"","location":"Nanjing, China","tagline":"To be Willin is to be willing.","bio":"永远不要让自己的生活，有规律无意义地循环。","avatar_mini":"https://cdn.v2ex.com/avatar/b4f9/4067/73472_mini.png?m=1644639799","avatar_normal":"https://cdn.v2ex.com/avatar/b4f9/4067/73472_normal.png?m=1644639799","avatar_large":"https://cdn.v2ex.com/avatar/b4f9/4067/73472_large.png?m=1644639799","created":1410334600,"last_modified":1644639799},"last_reply_by":"7vps","last_touched":1644644508,"title":"今年的情人节，给心爱的她一个不一样的礼物吧","url":"https://www.v2ex.com/t/833368","created":1644639689,"deleted":0,"content":"给大家隆重介绍一个网站，[憨憨.我爱你]( https://xn--wkua.xn--6qq986b3xl/)\r\n\r\n参考示例网站：\r\n\r\n- [表白幻灯片.憨憨.我爱你]( https://xn--owtp31bqkbezhj50a.xn--wkua.xn--6qq986b3xl/)\r\n  - [源码]( https://github.com/willin-love/romantic_page)\r\n- [恋爱计时器.憨憨.我爱你]( https://xn--m7rx3unue2vok44a.xn--wkua.xn--6qq986b3xl/)\r\n  - [源码]( https://github.com/willin-love/romantic_page)\r\n\r\n\r\n---\r\n\r\n\r\n# 申请流程\r\n\r\n打开官网首页： [憨憨.我爱你]( https://xn--wkua.xn--6qq986b3xl/)\r\n\r\n（由于该网站数据库使用的是 PlanetScale 免费服务，位于美东，所以访问可能会稍微有点慢。请耐心等待。）\r\n\r\n![请添加图片描述]( https://img-blog.csdnimg.cn/f9b3cdea761a4f539f7567270f025add.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAV2lsbGluIFdhbmc=,size_20,color_FFFFFF,t_70,g_se,x_16)\r\n\r\n\r\n使用 Authing 账号登录（可以手机、邮箱注册，Github 账号登录，或者微信小程序扫码，后续还会添加更多登录方式）。\r\n\r\n![请添加图片描述]( https://img-blog.csdnimg.cn/ce02809802af45949fe5e4ebf6b5a13f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAV2lsbGluIFdhbmc=,size_20,color_FFFFFF,t_70,g_se,x_16)\r\n\r\n\r\n可以分别点击进入域名申请和邮箱申请。\r\n\r\n## 域名申请\r\n\r\n域名申请界面如下：\r\n\r\n![请添加图片描述]( https://img-blog.csdnimg.cn/3a5d3b1d9bee42a187d410aaa17fde9e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAV2lsbGluIFdhbmc=,size_20,color_FFFFFF,t_70,g_se,x_16)\r\n\r\n\r\n支持的绑定方式有三种：\r\n\r\n- CNAME： 可以使用 Github Pages 、Netlify 、Gitee 、Coding.net 、Cloudflare 等提供托管服务的平台\r\n  - 值参考： `willin.github.io`\r\n  - 注意： 不支持 Vercel ，因为 Vercel 默认情况下并不支持绑定二级域名（除非所有权在你个人名下）\r\n- A：IPv4 需要自己搭建服务器，并进行绑定\r\n  - 值参考： `1.2.3.4` （你服务器的 ip 地址）\r\n- AAAA: IPv6 需要自己搭建服务器，并进行绑定\r\n  - 不做表述，不太推荐非专业人士选择\r\n  - 如果你需要同时绑定 IPv4 和 IPv6 的话，建议建议注册 A 类型，然后 ISSUE 或邮件联系我配合处理\r\n\r\n其中还有一项 Proxied （ CDN ），如果不知道作用，可以尝试开启或关闭来测试。\r\n\r\n## 邮箱申请\r\n\r\n域名申请界面如下：\r\n\r\n![请添加图片描述]( https://img-blog.csdnimg.cn/8afe37a994924ca4827db00dd3f5b726.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAV2lsbGluIFdhbmc=,size_20,color_FFFFFF,t_70,g_se,x_16)\r\n\r\n\r\n目前使用了 Cloudflare 的邮件转发服务，但由于暂不支持 IDN 域名，所以可以提前抢注，第一时间拥有。\r\n\r\n## 其他说明\r\n\r\n### 如需帮助\r\n\r\n欢迎在 Github 上关注我： [willin]( https://github.com/willin) ，如果在为心爱的她准备礼物时遇到问题，可以为你免费提供技术咨询。\r\n\r\n### 还想要其他的域名\r\n\r\n- [js.cool]( https://github.com/js-cool) （在多次协商后，目前已经支持 Vercel 绑定）\r\n- log.lu （敬请期待）\r\n\r\n### 感觉慷慨\r\n\r\n- 您可以将该网站分享给更多的人\r\n- 您也可以通过以下渠道进行打赏：\r\n  - [微信]( https://willin.github.io/images/wx.png)\r\n  - [支付宝]( https://willin.github.io/images/alipay.png)\r\n  - [爱发电]( https://afdian.net/@willin)\r\n  - [Github Sponsors]( https://github.com/sponsors/willin)\r\n  - [Paypal]( https://www.paypal.com/paypalme/willinwang)\r\n\r\n### 跃跃欲试\r\n\r\n或许你也有很多想法，想要实现。您可以：\r\n\r\n- 使用 [Authing]( https://www.authing.cn/?utm_source=v0&utm_campaign=hanhan) 快速集成开发你自己的应用\r\n- Fork 本项目源码（完全开源），并提供你自己的域名服务\r\n  - [项目源码]( https://github.com/willin/xn--wkua.xn--6qq986b3xL)\r\n- 在 Github 上对本项目进行完善和优化\r\n  - [项目后续规划]( https://github.com/willin/xn--wkua.xn--6qq986b3xL/issues/3)\r\n\r\n---\r\n\r\n# 开源\r\n\r\n接下来，开始一个重要的环节。俗话说，授人以鱼不如授人以渔。我将 [憨憨.我爱你 的源码]( https://github.com/willin/xn--wkua.xn--6qq986b3xL) 进行开源，并详细讲解一下设计与实现的全部过程。\r\n\r\n## 设计\r\n\r\n这个项目大概花了我 3 个小时左右完成。为了扬长避短，我使用了 UI 框架，所以就没有额外的 UI 设计了，直接用几个基础组件快速上手该项目。\r\n\r\n### 技术选型\r\n\r\n首先，第一步是技术选型。因为我要提供的是一项免费的服务，所以尽量也选择一些免费的服务商，及一些相关的技术栈。\r\n\r\n服务商的选择：\r\n\r\n- [Cloudflare]( https://www.cloudflare.com/)： 提供免费的域名解析、CDN 加速以及开放的接口\r\n- [Vercel]( https://vercel.com/)： 面向个人的免费应用托管，支持 Node.js 环境，使用 Next.js 框架\r\n- [PlanetScale]( https://planetscale.com)： 具有一定免费额度的云端 MySQL 服务\r\n- [Prisma]( https://www.prisma.io/)：Cloud Studio 管理数据库\r\n\r\n其实，本来是想使用 Cloudflare 全家桶的，就是用 [Cloudflare Pages]( https://pages.cloudflare.com/) （静态网站） + [Cloudflare Workers]( https://workers.cloudflare.com/) （ Serverless 方法执行）及 [KV]( https://developers.cloudflare.com/workers/learning/how-kv-works) （键值对存储），但是由于时间和精力的限制，所以就采用了更简单快捷的实现方式。\r\n\r\n技术栈：\r\n\r\n- [Typescript]( https://www.typescriptlang.org/)： 虽然我喜欢用更少的代码做更多的事情，但 TS 带给我更高效的团队协作舞台\r\n- [Next.js]( https://nextjs.org/)： 一个全栈框架（前端使用 React ，后端类似于 http 模块和 Express ），支持 SSR （服务器端渲染）和 SSG （静态站点生成）\r\n  - [@authing/nextjs]( https://github.com/Authing/authing-nextjs)：Authing SSO 集成 SDK\r\n- [Prisma]( https://www.prisma.io/)： 下一代的 ORM 框架，支持多种数据库（本项目使用为 MySQL ）和数据库迁移（ Migration ）\r\n- [Tailwind CSS]( https://tailwindcss.com/)： 下一代的 CSS 框架，实用第一\r\n  - [Daisy UI]( https://daisyui.com/)：封装了一些 UI 样式组件\r\n\r\n### 数据库设计\r\n\r\n由于我用的是 Authing 用户集成，所以省去了用户表的设计和用户相关接口的设计。\r\n\r\n```prisma\r\n// 域名类型\r\nenum DomainType {\r\n  A\r\n  AAAA\r\n  CNAME\r\n}\r\n\r\n// 审核状态\r\nenum Status {\r\n  // 待审核\r\n  PENDING\r\n  // 激活\r\n  ACTIVE\r\n  // 已删除\r\n  DELETED\r\n  // 被管理员禁用\r\n  BANNED\r\n}\r\n\r\n// 域名记录表\r\nmodel Domains {\r\n  // Cloudflare 域名记录的 ID ，同时作为表主键 id\r\n  id        String      @id @default(cuid()) @db.VarChar(32)\r\n  // 自增 id ，没有什么实际意义，只是为了减少查询（毕竟有调用配额限制），实际项目中不推荐自增主键及自增 id 使用\r\n  no        Int         @default(autoincrement()) @db.UnsignedInt\r\n  name      String      @db.VarChar(255)\r\n  punycode  String      @db.VarChar(255)\r\n  type      DomainType  @default(CNAME)\r\n  content   String      @default(\"\") @db.VarChar(255)\r\n  proxied   Boolean     @default(true)\r\n  // Authing 的用户 id\r\n  user      String      @default(\"\") @db.VarChar(32)\r\n  status    Status      @default(ACTIVE)\r\n  createdAt DateTime    @default(now())\r\n  updatedAt DateTime    @updatedAt\r\n\r\n  @@index([no])\r\n  @@index([name, punycode])\r\n  @@index([user, status, createdAt])\r\n}\r\n\r\n// 邮箱表\r\nmodel Emails {\r\n  // 由于 Cloudflare 邮箱还没有提供开放接口，所以需要人工审核和操作，这里会填入默认的 cuid 作为主键 id\r\n  id        String      @id @default(cuid()) @db.VarChar(32)\r\n  // 自增 id ，没有什么实际意义，只是为了减少查询（毕竟有调用配额限制），实际项目中不推荐自增主键及自增 id 使用\r\n  no        Int         @default(autoincrement()) @db.UnsignedInt\r\n  name      String      @db.VarChar(255)\r\n  punycode  String      @db.VarChar(255)\r\n  content   String      @default(\"\") @db.VarChar(255)\r\n  user      String      @default(\"\") @db.VarChar(32)\r\n  status    Status      @default(PENDING)\r\n  createdAt DateTime    @default(now())\r\n  updatedAt DateTime    @updatedAt\r\n\r\n  @@index([no])\r\n  @@index([name, punycode])\r\n  @@index([user, status, createdAt])\r\n}\r\n```\r\n\r\n非常简单，参考注释说明。另外，我本来是打算只存一个名称的，但由于会重复注册，比如说我注册了一个中文名`老王`，你又注册了一个对应的 punycode 代码名 `xn--qbyt9x`，就会冲突，所以索性（偷懒）都存下吧。\r\n\r\n### 技术准备\r\n\r\n- 中文域名需要掌握的 Punycode 知识： [RFC 3492]( https://www.rfc-editor.org/rfc/inline-errata/rfc3492.html) 规范\r\n- Cloudflare [API 接口]( https://developers.cloudflare.com/api/)\r\n  - 创建一条解析： [Create DNS Record]( https://api.cloudflare.com/#dns-records-for-a-zone-create-dns-record)\r\n  - 修改一条解析： [Patch DNS Record]( https://api.cloudflare.com/#dns-records-for-a-zone-patch-dns-record)\r\n  - 删除一条解析： [Delete DNS Record]( https://api.cloudflare.com/#dns-records-for-a-zone-delete-dns-record)\r\n- Authing SSO 集成，可以参考我之前的文章： [《全栈框架应用快速集成 Authing SSO 》]( https://willin.wang/posts/authing-full-stack)\r\n\r\n先把 Next.js 网站框架搭建起来，部署到 Vercel 上进行测试。可以再加上 Tailwind CSS 和 Authing SSO 集成。第一步准备工作就算完成了。\r\n\r\n### 接口设计\r\n\r\n为了快速（偷懒）实现，我分别创建了增删改查四个接口。\r\n\r\n查询接口：\r\n\r\n```mermaid\r\ngraph TD\r\n    Start1(Start)\r\n    --> |检查域名是否存在| check1{是否登录}\r\n    --> |F| fail1[失败]\r\n    --> End1(End)\r\n    check1 --> |T| check12{检查是否为保留域名}\r\n    --> |T| fail1\r\n    check12 --> |F| check13{检查数据库重复}\r\n    --> |T| fail1\r\n    check13 --> |F| success1[允许注册]\r\n    --> End1\r\n```\r\n\r\n创建接口：\r\n\r\n```mermaid\r\ngraph TD\r\n    Start2(Start)\r\n    --> |创建域名| check2{是否登录}\r\n    --> |F| fail2[失败]\r\n    --> End2(End)\r\n    check2 --> |T| check22{检查是否为保留域名}\r\n    --> |T| fail2\r\n    check22 --> |F| check23{用户是否已经注册域名}\r\n    --> |T| fail2\r\n    check23 --> |F| check24{检查数据库重复}\r\n    --> |T| fail2\r\n    check24 --> |F| success2[注册]\r\n    --> End2\r\n```\r\n\r\n数据库查询用户是否已经注册域名和是否存在同名可以用一次查询完成，这里为了提高查询性能进行了拆分。\r\n\r\n修改接口：\r\n\r\n```mermaid\r\ngraph TD\r\n    Start3(Start)\r\n    --> |检查域名是否存在| check3{是否登录}\r\n    --> |F| fail3[失败]\r\n    --> End3(End)\r\n    check3 --> |T| check32{修改 id 和 用户匹配的记录}\r\n    --> |F 修改记录数 0| fail3\r\n    check32 --> |T| success3[修改成功]\r\n    --> End3\r\n```\r\n\r\n删除接口与修改接口同。邮箱接口与域名类似，不再赘述。\r\n\r\n## 代码实现\r\n\r\n### 封装 Cloudflare SDK\r\n\r\n当然也有现成的库可以直接用，但是因为没几行代码，我就自己手撸了。\r\n\r\n```ts\r\nimport { Domains } from '@prisma/client';\r\nimport { CfAPIToken, CfZoneId } from '../config';\r\n\r\nconst BASE_URL = 'https://api.cloudflare.com/client/v4';\r\n\r\nexport type CFResult = {\r\n  success: boolean;\r\n  result: {\r\n    id: string;\r\n  };\r\n};\r\n\r\nconst headers = {\r\n  Authorization: `Bearer ${CfAPIToken}`,\r\n  'Content-Type': 'application/json'\r\n};\r\n\r\nexport const createDomain = async (\r\n  form: Pick<Domains, 'name' | 'content' | 'type' | 'proxied'>\r\n): Promise<string> => {\r\n  const res = await fetch(`${BASE_URL}/zones/${CfZoneId}/dns_records`, {\r\n    method: 'POST',\r\n    headers,\r\n    body: JSON.stringify({ ...form, ttl: 1 })\r\n  });\r\n  const data = (await res.json()) as CFResult;\r\n  if (data.success) {\r\n    return data.result.id;\r\n  }\r\n  return '';\r\n};\r\n\r\nexport const updateDomain = async (\r\n  id: string,\r\n  form: Pick<Domains, 'name' | 'content' | 'type' | 'proxied'>\r\n): Promise<boolean> => {\r\n  const res = await fetch(`${BASE_URL}/zones/${CfZoneId}/dns_records/${id}`, {\r\n    method: 'PATCH',\r\n    headers,\r\n    body: JSON.stringify({ ...form, ttl: 1 })\r\n  });\r\n  const data = (await res.json()) as CFResult;\r\n  console.error(data);\r\n  return data.success;\r\n};\r\n\r\nexport const deleteDomain = async (id: string): Promise<boolean> => {\r\n  const res = await fetch(`${BASE_URL}/zones/${CfZoneId}/dns_records/${id}`, {\r\n    method: 'DELETE',\r\n    headers\r\n  });\r\n  const data = (await res.json()) as CFResult;\r\n  return !!data.result.id;\r\n};\r\n```\r\n\r\n### 封装校验工具类\r\n\r\n需要有一定的正则基础，如果你需要在线调试工具，可以访问： [regexper.js.cool]( https://regexper.js.cool/)\r\n\r\n域名（ CNAME ）校验正则：\r\n\r\n```js\r\n/^((?!-))(xn--)?[a-z0-9][a-z0-9-_]{0,61}[a-z0-9]{0,1}\\.(xn--)?([a-z0-9-]{1,61}|[a-z0-9-]{1,30}\\.[a-z]{2,})$/;\r\n```\r\n\r\n邮箱校验正则：\r\n\r\n```js\r\n/^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/;\r\n```\r\n\r\nIPv4 校验正则：\r\n\r\n```js\r\n/^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\r\n```\r\n\r\nIPv6 校验正则：\r\n\r\n```js\r\n/^((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:)))(%.+)?$/;\r\n```\r\n\r\n### 页面请求封装\r\n\r\n以域名注册提交为例：\r\n\r\n```ts\r\nasync function submit(e: SyntheticEvent) {\r\n  e.preventDefault();\r\n  // 因为我 Vue 、React 都会用，且用的都比较少\r\n  // 所以获取表单数据，我用的是 Vanilla JS 方式，通用性更高\r\n  // 如果你不熟悉，可以用 React 的方式\r\n  const target = e.currentTarget as typeof e.currentTarget & {\r\n    type: { value: DomainType };\r\n    content: { value: string };\r\n    proxied: { checked: boolean };\r\n  };\r\n  const type = target.type.value;\r\n  const content = target.content.value;\r\n  if (!validateContent(type, content)) {\r\n    return;\r\n  }\r\n  const form = {\r\n    type,\r\n    content,\r\n    proxied: target.proxied.checked,\r\n    name,\r\n    punycode: toASCII(name)\r\n  };\r\n  // 我建议对 Fetch 进行封装，为了追求效率（偷懒），我就没有做\r\n  const res = await fetch(`/api/domain/create`, {\r\n    method: 'POST',\r\n    body: JSON.stringify(form),\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    }\r\n  });\r\n  // 所以像这样的处理，就非常不优雅，而且还可以统一封装，将错误提示使用通知条组件之类的\r\n  const result = (await res.json()) as { success: boolean; id: string };\r\n  if (result.success) {\r\n    router.reload();\r\n  } else {\r\n    alert('出错啦！请稍后重试');\r\n  }\r\n}\r\n```\r\n\r\n可复用的代码可以进行封装。参考软件工程的思想：高内聚、低耦合。我这里举的是一个较为反面的教材，代码臃肿、可读性低。\r\n\r\n### 注意点\r\n\r\n- 由于 Tailwind CSS 3 采用了全新的 JIT 机制，purgecss 不再需要\r\n- 关注 React 性能，如 `useState` 之类的 Hooks ，尽量放在页面级别，不要放在组件级别（尤其是会循环生成的组件）\r\n- 使用 `useMemo` 、 `debounce` 之类的方式进行缓存、防抖、限流，以提升应用性能\r\n- 使用 Next.js 框架（或普通 React 应用）时，大部分情况下，多了解 `swr` 及其内部的一些核心思想会很有裨益\r\n\r\n剩下的代码部分就枯燥且简单了。\r\n\r\n---\r\n\r\n差不多就讲这么多吧。记得分享哦！\r\n\r\n[willin]( https://github.com/willin) | [憨憨.我爱你]( https://xn--wkua.xn--6qq986b3xl/) | [项目源码]( https://github.com/willin/xn--wkua.xn--6qq986b3xL)","content_rendered":"<p>给大家隆重介绍一个网站，<a href=\"https://xn--wkua.xn--6qq986b3xl/\" rel=\"nofollow\">憨憨.我爱你</a></p>\n<p>参考示例网站：</p>\n<ul>\n<li>\n<a href=\"https://xn--owtp31bqkbezhj50a.xn--wkua.xn--6qq986b3xl/\" rel=\"nofollow\">表白幻灯片.憨憨.我爱你</a><ul>\n<li><a href=\"https://github.com/willin-love/romantic_page\" rel=\"nofollow\">源码</a></li>\n</ul>\n</li>\n<li>\n<a href=\"https://xn--m7rx3unue2vok44a.xn--wkua.xn--6qq986b3xl/\" rel=\"nofollow\">恋爱计时器.憨憨.我爱你</a><ul>\n<li><a href=\"https://github.com/willin-love/romantic_page\" rel=\"nofollow\">源码</a></li>\n</ul>\n</li>\n</ul>\n<hr/>\n<h1>申请流程</h1>\n<p>打开官网首页： <a href=\"https://xn--wkua.xn--6qq986b3xl/\" rel=\"nofollow\">憨憨.我爱你</a></p>\n<p>（由于该网站数据库使用的是 PlanetScale 免费服务，位于美东，所以访问可能会稍微有点慢。请耐心等待。）</p>\n<p><img alt=\"请添加图片描述\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://img-blog.csdnimg.cn/f9b3cdea761a4f539f7567270f025add.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAV2lsbGluIFdhbmc=,size_20,color_FFFFFF,t_70,g_se,x_16\"/></p>\n<p>使用 Authing 账号登录（可以手机、邮箱注册，Github 账号登录，或者微信小程序扫码，后续还会添加更多登录方式）。</p>\n<p><img alt=\"请添加图片描述\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://img-blog.csdnimg.cn/ce02809802af45949fe5e4ebf6b5a13f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAV2lsbGluIFdhbmc=,size_20,color_FFFFFF,t_70,g_se,x_16\"/></p>\n<p>可以分别点击进入域名申请和邮箱申请。</p>\n<h2>域名申请</h2>\n<p>域名申请界面如下：</p>\n<p><img alt=\"请添加图片描述\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://img-blog.csdnimg.cn/3a5d3b1d9bee42a187d410aaa17fde9e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAV2lsbGluIFdhbmc=,size_20,color_FFFFFF,t_70,g_se,x_16\"/></p>\n<p>支持的绑定方式有三种：</p>\n<ul>\n<li>\nCNAME： 可以使用 Github Pages 、Netlify 、Gitee 、<a href=\"http://Coding.net\" rel=\"nofollow\">Coding.net</a> 、Cloudflare 等提供托管服务的平台<ul>\n<li>值参考： <code><a href=\"http://willin.github.io\" rel=\"nofollow\">willin.github.io</a></code></li>\n<li>注意： 不支持 Vercel ，因为 Vercel 默认情况下并不支持绑定二级域名（除非所有权在你个人名下）</li>\n</ul>\n</li>\n<li>\nA：IPv4 需要自己搭建服务器，并进行绑定<ul>\n<li>值参考： <code>1.2.3.4</code> （你服务器的 ip 地址）</li>\n</ul>\n</li>\n<li>\nAAAA: IPv6 需要自己搭建服务器，并进行绑定<ul>\n<li>不做表述，不太推荐非专业人士选择</li>\n<li>如果你需要同时绑定 IPv4 和 IPv6 的话，建议建议注册 A 类型，然后 ISSUE 或邮件联系我配合处理</li>\n</ul>\n</li>\n</ul>\n<p>其中还有一项 Proxied （ CDN ），如果不知道作用，可以尝试开启或关闭来测试。</p>\n<h2>邮箱申请</h2>\n<p>域名申请界面如下：</p>\n<p><img alt=\"请添加图片描述\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://img-blog.csdnimg.cn/8afe37a994924ca4827db00dd3f5b726.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAV2lsbGluIFdhbmc=,size_20,color_FFFFFF,t_70,g_se,x_16\"/></p>\n<p>目前使用了 Cloudflare 的邮件转发服务，但由于暂不支持 IDN 域名，所以可以提前抢注，第一时间拥有。</p>\n<h2>其他说明</h2>\n<h3>如需帮助</h3>\n<p>欢迎在 Github 上关注我： <a href=\"https://github.com/willin\" rel=\"nofollow\">willin</a> ，如果在为心爱的她准备礼物时遇到问题，可以为你免费提供技术咨询。</p>\n<h3>还想要其他的域名</h3>\n<ul>\n<li><a href=\"https://github.com/js-cool\" rel=\"nofollow\">js.cool</a> （在多次协商后，目前已经支持 Vercel 绑定）</li>\n<li><a href=\"http://log.lu\" rel=\"nofollow\">log.lu</a> （敬请期待）</li>\n</ul>\n<h3>感觉慷慨</h3>\n<ul>\n<li>您可以将该网站分享给更多的人</li>\n<li>\n您也可以通过以下渠道进行打赏：<ul>\n<li><a href=\"https://willin.github.io/images/wx.png\" rel=\"nofollow\">微信</a></li>\n<li><a href=\"https://willin.github.io/images/alipay.png\" rel=\"nofollow\">支付宝</a></li>\n<li><a href=\"https://afdian.net/@willin\" rel=\"nofollow\">爱发电</a></li>\n<li><a href=\"https://github.com/sponsors/willin\" rel=\"nofollow\">Github Sponsors</a></li>\n<li><a href=\"https://www.paypal.com/paypalme/willinwang\" rel=\"nofollow\">Paypal</a></li>\n</ul>\n</li>\n</ul>\n<h3>跃跃欲试</h3>\n<p>或许你也有很多想法，想要实现。您可以：</p>\n<ul>\n<li>使用 <a href=\"https://www.authing.cn/?utm_source=v0&amp;utm_campaign=hanhan\" rel=\"nofollow\">Authing</a> 快速集成开发你自己的应用</li>\n<li>\nFork 本项目源码（完全开源），并提供你自己的域名服务<ul>\n<li><a href=\"https://github.com/willin/xn--wkua.xn--6qq986b3xL\" rel=\"nofollow\">项目源码</a></li>\n</ul>\n</li>\n<li>\n在 Github 上对本项目进行完善和优化<ul>\n<li><a href=\"https://github.com/willin/xn--wkua.xn--6qq986b3xL/issues/3\" rel=\"nofollow\">项目后续规划</a></li>\n</ul>\n</li>\n</ul>\n<hr/>\n<h1>开源</h1>\n<p>接下来，开始一个重要的环节。俗话说，授人以鱼不如授人以渔。我将 <a href=\"https://github.com/willin/xn--wkua.xn--6qq986b3xL\" rel=\"nofollow\">憨憨.我爱你 的源码</a> 进行开源，并详细讲解一下设计与实现的全部过程。</p>\n<h2>设计</h2>\n<p>这个项目大概花了我 3 个小时左右完成。为了扬长避短，我使用了 UI 框架，所以就没有额外的 UI 设计了，直接用几个基础组件快速上手该项目。</p>\n<h3>技术选型</h3>\n<p>首先，第一步是技术选型。因为我要提供的是一项免费的服务，所以尽量也选择一些免费的服务商，及一些相关的技术栈。</p>\n<p>服务商的选择：</p>\n<ul>\n<li><a href=\"https://www.cloudflare.com/\" rel=\"nofollow\">Cloudflare</a>： 提供免费的域名解析、CDN 加速以及开放的接口</li>\n<li><a href=\"https://vercel.com/\" rel=\"nofollow\">Vercel</a>： 面向个人的免费应用托管，支持 Node.js 环境，使用 Next.js 框架</li>\n<li><a href=\"https://planetscale.com\" rel=\"nofollow\">PlanetScale</a>： 具有一定免费额度的云端 MySQL 服务</li>\n<li><a href=\"https://www.prisma.io/\" rel=\"nofollow\">Prisma</a>：Cloud Studio 管理数据库</li>\n</ul>\n<p>其实，本来是想使用 Cloudflare 全家桶的，就是用 <a href=\"https://pages.cloudflare.com/\" rel=\"nofollow\">Cloudflare Pages</a> （静态网站） + <a href=\"https://workers.cloudflare.com/\" rel=\"nofollow\">Cloudflare Workers</a> （ Serverless 方法执行）及 <a href=\"https://developers.cloudflare.com/workers/learning/how-kv-works\" rel=\"nofollow\">KV</a> （键值对存储），但是由于时间和精力的限制，所以就采用了更简单快捷的实现方式。</p>\n<p>技术栈：</p>\n<ul>\n<li><a href=\"https://www.typescriptlang.org/\" rel=\"nofollow\">Typescript</a>： 虽然我喜欢用更少的代码做更多的事情，但 TS 带给我更高效的团队协作舞台</li>\n<li>\n<a href=\"https://nextjs.org/\" rel=\"nofollow\">Next.js</a>： 一个全栈框架（前端使用 React ，后端类似于 http 模块和 Express ），支持 SSR （服务器端渲染）和 SSG （静态站点生成）<ul>\n<li><a href=\"https://github.com/Authing/authing-nextjs\" rel=\"nofollow\">@authing/nextjs</a>：Authing SSO 集成 SDK</li>\n</ul>\n</li>\n<li><a href=\"https://www.prisma.io/\" rel=\"nofollow\">Prisma</a>： 下一代的 ORM 框架，支持多种数据库（本项目使用为 MySQL ）和数据库迁移（ Migration ）</li>\n<li>\n<a href=\"https://tailwindcss.com/\" rel=\"nofollow\">Tailwind CSS</a>： 下一代的 CSS 框架，实用第一<ul>\n<li><a href=\"https://daisyui.com/\" rel=\"nofollow\">Daisy UI</a>：封装了一些 UI 样式组件</li>\n</ul>\n</li>\n</ul>\n<h3>数据库设计</h3>\n<p>由于我用的是 Authing 用户集成，所以省去了用户表的设计和用户相关接口的设计。</p>\n<pre><code class=\"language-prisma\">// 域名类型\nenum DomainType {\n  A\n  AAAA\n  CNAME\n}\n\n// 审核状态\nenum Status {\n  // 待审核\n  PENDING\n  // 激活\n  ACTIVE\n  // 已删除\n  DELETED\n  // 被管理员禁用\n  BANNED\n}\n\n// 域名记录表\nmodel Domains {\n  // Cloudflare 域名记录的 ID ，同时作为表主键 id\n  id        String      @id @default(cuid()) @db.VarChar(32)\n  // 自增 id ，没有什么实际意义，只是为了减少查询（毕竟有调用配额限制），实际项目中不推荐自增主键及自增 id 使用\n  no        Int         @default(autoincrement()) @db.UnsignedInt\n  name      String      @db.VarChar(255)\n  punycode  String      @db.VarChar(255)\n  type      DomainType  @default(CNAME)\n  content   String      @default(\"\") @db.VarChar(255)\n  proxied   Boolean     @default(true)\n  // Authing 的用户 id\n  user      String      @default(\"\") @db.VarChar(32)\n  status    Status      @default(ACTIVE)\n  createdAt DateTime    @default(now())\n  updatedAt DateTime    @updatedAt\n\n  @@index([no])\n  @@index([name, punycode])\n  @@index([user, status, createdAt])\n}\n\n// 邮箱表\nmodel Emails {\n  // 由于 Cloudflare 邮箱还没有提供开放接口，所以需要人工审核和操作，这里会填入默认的 cuid 作为主键 id\n  id        String      @id @default(cuid()) @db.VarChar(32)\n  // 自增 id ，没有什么实际意义，只是为了减少查询（毕竟有调用配额限制），实际项目中不推荐自增主键及自增 id 使用\n  no        Int         @default(autoincrement()) @db.UnsignedInt\n  name      String      @db.VarChar(255)\n  punycode  String      @db.VarChar(255)\n  content   String      @default(\"\") @db.VarChar(255)\n  user      String      @default(\"\") @db.VarChar(32)\n  status    Status      @default(PENDING)\n  createdAt DateTime    @default(now())\n  updatedAt DateTime    @updatedAt\n\n  @@index([no])\n  @@index([name, punycode])\n  @@index([user, status, createdAt])\n}\n</code></pre>\n<p>非常简单，参考注释说明。另外，我本来是打算只存一个名称的，但由于会重复注册，比如说我注册了一个中文名<code>老王</code>，你又注册了一个对应的 punycode 代码名 <code>xn--qbyt9x</code>，就会冲突，所以索性（偷懒）都存下吧。</p>\n<h3>技术准备</h3>\n<ul>\n<li>中文域名需要掌握的 Punycode 知识： <a href=\"https://www.rfc-editor.org/rfc/inline-errata/rfc3492.html\" rel=\"nofollow\">RFC 3492</a> 规范</li>\n<li>\nCloudflare <a href=\"https://developers.cloudflare.com/api/\" rel=\"nofollow\">API 接口</a><ul>\n<li>创建一条解析： <a href=\"https://api.cloudflare.com/#dns-records-for-a-zone-create-dns-record\" rel=\"nofollow\">Create DNS Record</a></li>\n<li>修改一条解析： <a href=\"https://api.cloudflare.com/#dns-records-for-a-zone-patch-dns-record\" rel=\"nofollow\">Patch DNS Record</a></li>\n<li>删除一条解析： <a href=\"https://api.cloudflare.com/#dns-records-for-a-zone-delete-dns-record\" rel=\"nofollow\">Delete DNS Record</a></li>\n</ul>\n</li>\n<li>Authing SSO 集成，可以参考我之前的文章： <a href=\"https://willin.wang/posts/authing-full-stack\" rel=\"nofollow\">《全栈框架应用快速集成 Authing SSO 》</a></li>\n</ul>\n<p>先把 Next.js 网站框架搭建起来，部署到 Vercel 上进行测试。可以再加上 Tailwind CSS 和 Authing SSO 集成。第一步准备工作就算完成了。</p>\n<h3>接口设计</h3>\n<p>为了快速（偷懒）实现，我分别创建了增删改查四个接口。</p>\n<p>查询接口：</p>\n<pre><code class=\"language-mermaid\">graph TD\n    Start1(Start)\n    --&gt; |检查域名是否存在| check1{是否登录}\n    --&gt; |F| fail1[失败]\n    --&gt; End1(End)\n    check1 --&gt; |T| check12{检查是否为保留域名}\n    --&gt; |T| fail1\n    check12 --&gt; |F| check13{检查数据库重复}\n    --&gt; |T| fail1\n    check13 --&gt; |F| success1[允许注册]\n    --&gt; End1\n</code></pre>\n<p>创建接口：</p>\n<pre><code class=\"language-mermaid\">graph TD\n    Start2(Start)\n    --&gt; |创建域名| check2{是否登录}\n    --&gt; |F| fail2[失败]\n    --&gt; End2(End)\n    check2 --&gt; |T| check22{检查是否为保留域名}\n    --&gt; |T| fail2\n    check22 --&gt; |F| check23{用户是否已经注册域名}\n    --&gt; |T| fail2\n    check23 --&gt; |F| check24{检查数据库重复}\n    --&gt; |T| fail2\n    check24 --&gt; |F| success2[注册]\n    --&gt; End2\n</code></pre>\n<p>数据库查询用户是否已经注册域名和是否存在同名可以用一次查询完成，这里为了提高查询性能进行了拆分。</p>\n<p>修改接口：</p>\n<pre><code class=\"language-mermaid\">graph TD\n    Start3(Start)\n    --&gt; |检查域名是否存在| check3{是否登录}\n    --&gt; |F| fail3[失败]\n    --&gt; End3(End)\n    check3 --&gt; |T| check32{修改 id 和 用户匹配的记录}\n    --&gt; |F 修改记录数 0| fail3\n    check32 --&gt; |T| success3[修改成功]\n    --&gt; End3\n</code></pre>\n<p>删除接口与修改接口同。邮箱接口与域名类似，不再赘述。</p>\n<h2>代码实现</h2>\n<h3>封装 Cloudflare SDK</h3>\n<p>当然也有现成的库可以直接用，但是因为没几行代码，我就自己手撸了。</p>\n<pre><code class=\"language-ts\">import { Domains } from '@prisma/client';\nimport { CfAPIToken, CfZoneId } from '../config';\n\nconst BASE_URL = 'https://api.cloudflare.com/client/v4';\n\nexport type CFResult = {\n  success: boolean;\n  result: {\n    id: string;\n  };\n};\n\nconst headers = {\n  Authorization: `Bearer ${CfAPIToken}`,\n  'Content-Type': 'application/json'\n};\n\nexport const createDomain = async (\n  form: Pick&lt;Domains, 'name' | 'content' | 'type' | 'proxied'&gt;\n): Promise&lt;string&gt; =&gt; {\n  const res = await fetch(`${BASE_URL}/zones/${CfZoneId}/dns_records`, {\n    method: 'POST',\n    headers,\n    body: JSON.stringify({ ...form, ttl: 1 })\n  });\n  const data = (await res.json()) as CFResult;\n  if (data.success) {\n    return data.result.id;\n  }\n  return '';\n};\n\nexport const updateDomain = async (\n  id: string,\n  form: Pick&lt;Domains, 'name' | 'content' | 'type' | 'proxied'&gt;\n): Promise&lt;boolean&gt; =&gt; {\n  const res = await fetch(`${BASE_URL}/zones/${CfZoneId}/dns_records/${id}`, {\n    method: 'PATCH',\n    headers,\n    body: JSON.stringify({ ...form, ttl: 1 })\n  });\n  const data = (await res.json()) as CFResult;\n  console.error(data);\n  return data.success;\n};\n\nexport const deleteDomain = async (id: string): Promise&lt;boolean&gt; =&gt; {\n  const res = await fetch(`${BASE_URL}/zones/${CfZoneId}/dns_records/${id}`, {\n    method: 'DELETE',\n    headers\n  });\n  const data = (await res.json()) as CFResult;\n  return !!data.result.id;\n};\n</code></pre>\n<h3>封装校验工具类</h3>\n<p>需要有一定的正则基础，如果你需要在线调试工具，可以访问： <a href=\"https://regexper.js.cool/\" rel=\"nofollow\">regexper.js.cool</a></p>\n<p>域名（ CNAME ）校验正则：</p>\n<pre><code class=\"language-js\">/^((?!-))(xn--)?[a-z0-9][a-z0-9-_]{0,61}[a-z0-9]{0,1}\\.(xn--)?([a-z0-9-]{1,61}|[a-z0-9-]{1,30}\\.[a-z]{2,})$/;\n</code></pre>\n<p>邮箱校验正则：</p>\n<pre><code class=\"language-js\">/^[a-z0-9!#$%&amp;'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&amp;'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/;\n</code></pre>\n<p>IPv4 校验正则：</p>\n<pre><code class=\"language-js\">/^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n</code></pre>\n<p>IPv6 校验正则：</p>\n<pre><code class=\"language-js\">/^((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:)))(%.+)?$/;\n</code></pre>\n<h3>页面请求封装</h3>\n<p>以域名注册提交为例：</p>\n<pre><code class=\"language-ts\">async function submit(e: SyntheticEvent) {\n  e.preventDefault();\n  // 因为我 Vue 、React 都会用，且用的都比较少\n  // 所以获取表单数据，我用的是 Vanilla JS 方式，通用性更高\n  // 如果你不熟悉，可以用 React 的方式\n  const target = e.currentTarget as typeof e.currentTarget &amp; {\n    type: { value: DomainType };\n    content: { value: string };\n    proxied: { checked: boolean };\n  };\n  const type = target.type.value;\n  const content = target.content.value;\n  if (!validateContent(type, content)) {\n    return;\n  }\n  const form = {\n    type,\n    content,\n    proxied: target.proxied.checked,\n    name,\n    punycode: toASCII(name)\n  };\n  // 我建议对 Fetch 进行封装，为了追求效率（偷懒），我就没有做\n  const res = await fetch(`/api/domain/create`, {\n    method: 'POST',\n    body: JSON.stringify(form),\n    headers: {\n      'content-type': 'application/json'\n    }\n  });\n  // 所以像这样的处理，就非常不优雅，而且还可以统一封装，将错误提示使用通知条组件之类的\n  const result = (await res.json()) as { success: boolean; id: string };\n  if (result.success) {\n    router.reload();\n  } else {\n    alert('出错啦！请稍后重试');\n  }\n}\n</code></pre>\n<p>可复用的代码可以进行封装。参考软件工程的思想：高内聚、低耦合。我这里举的是一个较为反面的教材，代码臃肿、可读性低。</p>\n<h3>注意点</h3>\n<ul>\n<li>由于 Tailwind CSS 3 采用了全新的 JIT 机制，purgecss 不再需要</li>\n<li>关注 React 性能，如 <code>useState</code> 之类的 Hooks ，尽量放在页面级别，不要放在组件级别（尤其是会循环生成的组件）</li>\n<li>使用 <code>useMemo</code> 、 <code>debounce</code> 之类的方式进行缓存、防抖、限流，以提升应用性能</li>\n<li>使用 Next.js 框架（或普通 React 应用）时，大部分情况下，多了解 <code>swr</code> 及其内部的一些核心思想会很有裨益</li>\n</ul>\n<p>剩下的代码部分就枯燥且简单了。</p>\n<hr/>\n<p>差不多就讲这么多吧。记得分享哦！</p>\n<p><a href=\"https://github.com/willin\" rel=\"nofollow\">willin</a> | <a href=\"https://xn--wkua.xn--6qq986b3xl/\" rel=\"nofollow\">憨憨.我爱你</a> | <a href=\"https://github.com/willin/xn--wkua.xn--6qq986b3xL\" rel=\"nofollow\">项目源码</a></p>\n","last_modified":1644639733,"replies":11,"id":833368},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/a3c6/5c29/108_large.png?m=1635654723","name":"bb","avatar_normal":"https://cdn.v2ex.com/navatar/a3c6/5c29/108_normal.png?m=1635654723","title":"宽带症候群","url":"https://www.v2ex.com/go/bb","topics":10324,"footer":"","header":"网速很重要。比快更快。","title_alternative":"Broadband Symptom Complex","avatar_mini":"https://cdn.v2ex.com/navatar/a3c6/5c29/108_mini.png?m=1635654723","stars":5381,"aliases":[],"root":false,"id":108,"parent_node_name":"geek"},"member":{"id":274962,"username":"uhoo","url":"https://www.v2ex.com/u/uhoo","website":null,"twitter":null,"psn":null,"github":null,"btc":null,"location":null,"tagline":null,"bio":null,"avatar_mini":"https://cdn.v2ex.com/gravatar/5cd9081fc1ac57c300dd68a06d6d5067?s=24&d=retro","avatar_normal":"https://cdn.v2ex.com/gravatar/5cd9081fc1ac57c300dd68a06d6d5067?s=48&d=retro","avatar_large":"https://cdn.v2ex.com/gravatar/5cd9081fc1ac57c300dd68a06d6d5067?s=73&d=retro","created":1513422541,"last_modified":1513422541},"last_reply_by":"uhoo","last_touched":1644638657,"title":"n1 单臂路由 无法访问 ipv4 网络","url":"https://www.v2ex.com/t/833342","created":1644624225,"deleted":0,"content":"之前请教各位推荐路由的，于是入了一个 n1 组单臂路由\n\n猫 桥接 后台 192.168.1.1\n\nn1 后台 192.168.1.2\n\nAP 后台 192.168.1.3\n\n现在只能用 ipv6 上网，请问 n1 的 lan 是不是要配置下 dns 和网关，目前都是留空的，不太懂，网上的教程都没有提到这部分，请各位赐教","content_rendered":"之前请教各位推荐路由的，于是入了一个 n1 组单臂路由<br /><br />猫 桥接 后台 192.168.1.1<br /><br />n1 后台 192.168.1.2<br /><br />AP 后台 192.168.1.3<br /><br />现在只能用 ipv6 上网，请问 n1 的 lan 是不是要配置下 dns 和网关，目前都是留空的，不太懂，网上的教程都没有提到这部分，请各位赐教","last_modified":1644624225,"replies":10,"id":833342},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/d3d9/4468/10_large.png?m=1630643933","name":"mbp","avatar_normal":"https://cdn.v2ex.com/navatar/d3d9/4468/10_normal.png?m=1630643933","title":"MacBook Pro","url":"https://www.v2ex.com/go/mbp","topics":7828,"footer":"","header":"State-of-the-art processors. All-new graphics. Breakthrough high-speed I/O. Three very big leaps forward.","title_alternative":"MacBook Pro","avatar_mini":"https://cdn.v2ex.com/navatar/d3d9/4468/10_mini.png?m=1630643933","stars":3054,"aliases":[],"root":false,"id":10,"parent_node_name":"apple"},"member":{"id":172104,"username":"2ruowqe9r","url":"https://www.v2ex.com/u/2ruowqe9r","website":null,"twitter":null,"psn":null,"github":null,"btc":null,"location":null,"tagline":null,"bio":null,"avatar_mini":"https://cdn.v2ex.com/gravatar/887111361f08d4b51cc1baef24c34d95?s=24&d=retro","avatar_normal":"https://cdn.v2ex.com/gravatar/887111361f08d4b51cc1baef24c34d95?s=48&d=retro","avatar_large":"https://cdn.v2ex.com/gravatar/887111361f08d4b51cc1baef24c34d95?s=73&d=retro","created":1462625538,"last_modified":1462625538},"last_reply_by":"ArJun","last_touched":1644648299,"title":"MBP 2015 MID 15',更换电池及硬盘，希望有实战经验的出出注意~","url":"https://www.v2ex.com/t/833386","created":1644645807,"deleted":0,"content":"今年已经是第 7 个年头了，还是有感情的（其实穷），昨天提示电池需要维修，另外硬盘 256 的，也只有 50G 可用了。\r\n想咨询下，如果第三方换电池，有没有推荐的渠道或者电池品牌，希望有实战经验的出出注意~","content_rendered":"<p>今年已经是第 7 个年头了，还是有感情的（其实穷），昨天提示电池需要维修，另外硬盘 256 的，也只有 50G 可用了。\n想咨询下，如果第三方换电池，有没有推荐的渠道或者电池品牌，希望有实战经验的出出注意~</p>\n","last_modified":1644645807,"replies":9,"id":833386},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/b6d7/67d2/22_large.png?m=1635652519","name":"macos","avatar_normal":"https://cdn.v2ex.com/navatar/b6d7/67d2/22_normal.png?m=1635652519","title":"macOS","url":"https://www.v2ex.com/go/macos","topics":17912,"footer":"<a href=\"/mbp\">MacBook Pro</a> 及 <a href=\"/go/imac\">iMac</a> 等 <a href=\"/go/apple\">Apple</a> 公司设计的计算机所运行的操作系统。<a href=\"/go/idev\">iOS</a> 的基础。","header":"The world’s most advanced desktop operating system.","title_alternative":"macOS","avatar_mini":"https://cdn.v2ex.com/navatar/b6d7/67d2/22_mini.png?m=1635652519","stars":4527,"aliases":[],"root":false,"id":22,"parent_node_name":"os"},"member":{"id":547460,"username":"NodeSans","url":"https://www.v2ex.com/u/NodeSans","website":null,"twitter":null,"psn":null,"github":null,"btc":null,"location":null,"tagline":null,"bio":null,"avatar_mini":"https://cdn.v2ex.com/gravatar/3ac11260bfab2804823ec0aacddad5b4?s=24&d=retro","avatar_normal":"https://cdn.v2ex.com/gravatar/3ac11260bfab2804823ec0aacddad5b4?s=48&d=retro","avatar_large":"https://cdn.v2ex.com/gravatar/3ac11260bfab2804823ec0aacddad5b4?s=73&d=retro","created":1622881465,"last_modified":1644644411},"last_reply_by":"NodeSans","last_touched":1644646588,"title":"MacWK 这事彻底关停了码","url":"https://www.v2ex.com/t/833383","created":1644644618,"deleted":0,"content":"之前站内有通知说网站运营将移交第三方，刚刚看网站已经上不去了\r\n![image.png]( https://s2.loli.net/2022/02/12/swLXZyf58oIVuF6.png)\r\n\r\n不知道是不是暂时性的","content_rendered":"<p>之前站内有通知说网站运营将移交第三方，刚刚看网站已经上不去了\n<img alt=\"image.png\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://s2.loli.net/2022/02/12/swLXZyf58oIVuF6.png\"/></p>\n<p>不知道是不是暂时性的</p>\n","last_modified":1644644618,"replies":8,"id":833383},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/d67d/8ab4/39_large.png?m=1635654647","name":"android","avatar_normal":"https://cdn.v2ex.com/navatar/d67d/8ab4/39_normal.png?m=1635654647","title":"Android","url":"https://www.v2ex.com/go/android","topics":9259,"footer":"","header":"来自 <a href=\"/go/google\">Google</a> 的开放源代码智能手机平台。","title_alternative":"Android","avatar_mini":"https://cdn.v2ex.com/navatar/d67d/8ab4/39_mini.png?m=1635654647","stars":4992,"aliases":[],"root":false,"id":39,"parent_node_name":"hardware"},"member":{"id":268058,"username":"Easedge","url":"https://www.v2ex.com/u/Easedge","website":null,"twitter":null,"psn":null,"github":null,"btc":null,"location":null,"tagline":null,"bio":null,"avatar_mini":"https://cdn.v2ex.com/gravatar/eaf9f9da7bfd2cd6fba3c4c0c8fbdcf4?s=24&d=retro","avatar_normal":"https://cdn.v2ex.com/gravatar/eaf9f9da7bfd2cd6fba3c4c0c8fbdcf4?s=48&d=retro","avatar_large":"https://cdn.v2ex.com/gravatar/eaf9f9da7bfd2cd6fba3c4c0c8fbdcf4?s=73&d=retro","created":1511070199,"last_modified":1511070199},"last_reply_by":"dzyou2007","last_touched":1644646858,"title":"原生安卓 ROM 可以通过安装支付证书使用支付宝的指纹支付吗","url":"https://www.v2ex.com/t/833380","created":1644643925,"deleted":0,"content":"刷了原生 evolution x 觉得各方面都不错，唯一想吐槽的就是没有原生的支付宝指纹支付支持。遂打算去看看有没有模块来实现我的想法。在 github 上找到了一个  eritpchy/FingerprintPay  的 magisk 包，看了一下源码，是代替输入密码那种指纹支付，而不是让指纹识别模块支持支付宝的证书。想来论坛问问有没有懂这个的，这种想法可行吗，有现成的包可以使用嘛","content_rendered":"<p>刷了原生 evolution x 觉得各方面都不错，唯一想吐槽的就是没有原生的支付宝指纹支付支持。遂打算去看看有没有模块来实现我的想法。在 github 上找到了一个  eritpchy/FingerprintPay  的 magisk 包，看了一下源码，是代替输入密码那种指纹支付，而不是让指纹识别模块支持支付宝的证书。想来论坛问问有没有懂这个的，这种想法可行吗，有现成的包可以使用嘛</p>\n","last_modified":1644644045,"replies":8,"id":833380},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/3417/3cb3/30_large.png?m=1598508698","name":"chengdu","avatar_normal":"https://cdn.v2ex.com/navatar/3417/3cb3/30_normal.png?m=1598508698","title":"成都","url":"https://www.v2ex.com/go/chengdu","topics":1180,"footer":"","header":"","title_alternative":"Chengdu","avatar_mini":"https://cdn.v2ex.com/navatar/3417/3cb3/30_mini.png?m=1598508698","stars":975,"aliases":[],"root":false,"id":30,"parent_node_name":"cn"},"member":{"id":546058,"username":"ersansan233","url":"https://www.v2ex.com/u/ersansan233","website":null,"twitter":null,"psn":null,"github":null,"btc":null,"location":null,"tagline":null,"bio":null,"avatar_mini":"https://cdn.v2ex.com/avatar/800a/c142/546058_mini.png?m=1636087979","avatar_normal":"https://cdn.v2ex.com/avatar/800a/c142/546058_normal.png?m=1636087979","avatar_large":"https://cdn.v2ex.com/avatar/800a/c142/546058_large.png?m=1636087979","created":1621735438,"last_modified":1636087979},"last_reply_by":"bug403","last_touched":1644643376,"title":"成都新房摇号太难了","url":"https://www.v2ex.com/t/833355","created":1644632409,"deleted":0,"content":"本人外省户口，只有高新两年社保，新盘摇号太难了","content_rendered":"本人外省户口，只有高新两年社保，新盘摇号太难了","last_modified":1644633319,"replies":8,"id":833355},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1641688451","name":"programmer","avatar_normal":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1641688451","title":"程序员","url":"https://www.v2ex.com/go/programmer","topics":47360,"footer":"","header":"While code monkeys are not eating bananas, they're coding.","title_alternative":"Programmer","avatar_mini":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1641688451","stars":7698,"aliases":[],"root":false,"id":300,"parent_node_name":"computer"},"member":{"id":73472,"username":"willin","url":"https://www.v2ex.com/u/willin","website":"https://willin.wang","twitter":"willinwang","psn":"","github":"willin","btc":"","location":"Nanjing, China","tagline":"To be Willin is to be willing.","bio":"永远不要让自己的生活，有规律无意义地循环。","avatar_mini":"https://cdn.v2ex.com/avatar/b4f9/4067/73472_mini.png?m=1644639799","avatar_normal":"https://cdn.v2ex.com/avatar/b4f9/4067/73472_normal.png?m=1644639799","avatar_large":"https://cdn.v2ex.com/avatar/b4f9/4067/73472_large.png?m=1644639799","created":1410334600,"last_modified":1644639799},"last_reply_by":"duke807","last_touched":1644648322,"title":"网站的未来： Next.js 与 Remix","url":"https://www.v2ex.com/t/833374","created":1644642255,"deleted":0,"content":"## 横向对比\r\n\r\n先上一行对比图：\r\n\r\n|                        | Next.js                                     | Remix                                          |\r\n| ---------------------- | ------------------------------------------- | ---------------------------------------------- |\r\n| SSG 静态站点生成        | ✅内置                                       | 不支持                                         |\r\n| SSR 服务器端渲染        | ✅内置                                       | ✅通过 loader                                   |\r\n| API 路由               | ✅pages/api/ 目录下                          | Remix 就是路由，你可以更加灵活去进行自定义路由 |\r\n| Forms 表单              | 非内置                                      | ✅ 内置，且功能强大                             |\r\n| 基于文件系统的路由管理 | ✅ 页面级                                    | ✅ 组件级                                       |\r\n| 会话管理               | 非内置                                      | ✅ 内置 Cookie 、Sessions                        |\r\n| 禁用 JS                | 未提供充分支持                              | ✅ 静态页面路由                                 |\r\n| 样式                   | ✅ 提供了全局及组件级样式支持 TailwindCSS 等 | 非内置                                         |\r\n| 嵌套布局               | 不支持                                      | ✅内置                                          |\r\n| i18n 国际化             | ✅内置                                       | 非内置                                         |\r\n| 图片优化               | ✅通过 next/image 组件                       | ✅通过简单转换、备选质量等方式                  |\r\n| 谷歌 AMP               | ✅内置                                       | 非内置                                         |\r\n| 适配器                 | Node.js Request 和 Response 接口            | Fetch API Request 和 Response 接口             |\r\n| Preload                | 链接自动                                    | 非自动                                         |\r\n| 异常处理               | 创建 404 ，500 等页面                        | 使用 ErrorBoundary 组件局部抛错                |\r\n| Polyfill               | fetch 、Object.assign 和 URL                 | fetch                                          |\r\n\r\n##    适用场景  Next.js\r\n\r\n\r\n静态网站。这是其最大优势。在使用 TailwindCSS 等，可以更加灵活的制作出样式优美的页面及组件。拥有着较为完善的生态圈。\r\n\r\n适合快速上手做项目。\r\n\r\n###  Remix\r\n\r\n\r\n管理后台，对于数据的加载、嵌套数据或者组件的路由、并发加载优化做得很好，并且异常的处理已经可以精确到局部级别。\r\n\r\n或许是下一代的 Web 开发框架，需要折腾。\r\n\r\n###  小结 \r\n\r\n- 数据复杂，内容较多（如可视化大屏）：Remix\r\n- 包含表单和会话的管理系统：Remix\r\n- SEO 友好的网站：Next.js\r\n- 纯静态部署：Next.js\r\n- 国际化支持：Next.js\r\n\r\n---\r\n2022 年 1 月 19 日补：\r\n\r\n首先 Next.js 已经很快了，是 SSG 的快。生成了静态的\"页面\"，但是“页面”是个很大的东西，所以 Remix 的快，可以理解为组件的快，路由即组件。在经过对比了之后，我自己的站点选择使用 Remix 框架，不仅仅是因为快，而是因为这一套东西更“全栈”。Next.js 里可以在 pages/api 目录下写后端。你说它全栈吧，也说得通，但是很多东西用起来很别扭。\r\n\r\n### 从生态角度出发\r\n\r\n如果你想快速上手做项目，现阶段（指 2022 年初） Next.js 生态足够强大，Vercel 团队也新进了很多大牛。你想要的，基本都有一些示例的代码，现成的库或者插件。而且 Next.js 本身就内置了 i18n 路由的支持（这是我最喜欢它的一点）。\r\n\r\n举个最简单的例子，我想在我的站点上实现 i18n （国际化翻译），Remix 中可用的选择只有一个，remix-i18next ， 还是个半成品。在折腾了一周之后，我放弃了先做国际化的最初规划，改向做 mdx 内容管理。同时还有主题切换，也是半成品，remix-themes 插件只支持深浅主题的切换，所以当我选择用 daisy ui 框架的多主题风格时，虽然需要的代码量不算多，我却得写了那么一段塞进了自己的项目里。\r\n\r\n小结：如果你愿意折腾，Remix 。 新手友好，Next.js 。\r\n\r\n### 从成本角度\r\n\r\nNext.js 可以生成纯静态站点，任何类似于 Github Pages 的地方都可以托管。同时 Vercel 个人版本永久免费，团队需要付费。Vercel 的性能非常不错，而且只用按人头来收费（相较于 Remix 的主力平台 [Fly.io]( http://fly.io/) 来说成本也不算高）。\r\n\r\nRemix 则不行，只能跑在服务器上或者 Serverless 服务上。 [Fly.io]( http://fly.io/) 是容器化的服务，按量（资源使用量）付费，所以业务越大成本越高。[Fly.io]( http://fly.io/) 目前的模式和收费我个人很难接受，可能我还在幻想着我自己做好的网站能够在很短时间内有爆发的流量增长吧，而且容器化使用的门槛就抬高了，现在所谓的全栈开发更多还是偏向于前端领域。相信对于不是后端的同学来说，写个页面还要考虑 docker-compose 容器文件优化，资源分配调度什么乱七八糟的运维或者侧重于后端的事情，没什么必要。\r\n\r\nNext.js ，虽然生态很完善，但这种框架本身的束缚，出于经验的判断我并不会在团队技术选型中用其参与大型项目。这应该也间接反应出一个事情，企业提供服务都是需要考虑成本和收益的。所以 Remix 是有足够信心去支撑大型引用场景的。\r\n\r\n小结： 如果你并不是产品化的东西，或者预算方面有约束，Next.js 可以满足你更灵活的需求（静态网站、Serverless 托管、服务器或者容器都很 OK ）。Remix 目前来说，并没有一个很好的托管平台。\r\n\r\n### 从性能角度\r\n\r\n其实很有意思的一件事情。我们都特别喜欢看框架的性能，却忽略了真正使性能成指数形下降的，大多数是糟糕透顶的业务代码。\r\n\r\nRemix 初始性能更强一些，但 Next.js 性能的优化更容易去做。所以就简单讲讲 Remix 性能优化的一些案例：\r\n\r\n- https://github.com/kentcdodds/kentcdodds.com/blob/main/app/utils/metrics.server.ts\r\n- https://github.com/abereghici/remix-bereghici-dev/blob/main/app/utils/metrics.server.ts\r\n\r\n这也是目前我自己能想到的笨办法，记录每个关键流程的调用时长。Remix 后端性能优化的话目前从有限的文档中看不到特别好的方案，并且由于案例非常少，也没有最佳实践指南。这一部分的注入，很不优雅，但有效。\r\n\r\n也可以衍生到 React 与 Vue 框架的对比。我更喜欢 Vue ， 尤其 Vue 3 之后加入了更多新的语法糖如 setup 之类的。React JSX 给我就有种代码跟 HTML 混写在一起的原始感觉。 而且从性能来说 Vue 是明显在赶超中，框架的初始性能也会高于 React 。但 Vue 的入门门槛低，生态的质量就很难有保障了。\r\n\r\n小结：在你没有能力去改变框架性能的时候，关注框架的性能不如关注你用的库、你写的业务，至少这些你都可以去进一步提升它的性能。等你有能力去改变框架性能的时候，PR 不仅仅会让你赢得更多尊重。\r\n\r\n建议：你可以更多考虑这个框架在用起来的舒适性。比如说我真的特别喜欢 Vue ，所以我也特别喜欢 Next.js Vue 的版本—— Nuxt.js 。写起来非常惬意，所以即便是我发现做起优化来挺难的，也会乐在其中。\r\n\r\n不可否认 Next.js 在现阶段是既方便又好用的框架。Remix 还像一个襁褓里的婴儿。现在谈论它为时尚早，如果感兴趣，可以学习借鉴一下。这篇 Remix 发布的对比[博文]( https://remix.run/blog/remix-vs-next)，和很多文章一样。王婆卖瓜，自卖自夸，说完全客观谈不上，但数据这一块造假的可能性也不大。\r\n\r\n以上，是客观的个人观点。\r\n\r\n\r\n\r\n---\r\n\r\n\r\n\r\n以下，说说主观的个人观点。\r\n\r\n就像我喜欢 Vue ，却在写 React 一样。有很多时候，有些因素会干扰我们的选择，就比如说客户定的 Deadline 。使用 Nuxt.js 产品化的路子，就是败给了时间。如果给我更多的时间，我觉得我用 Nuxt.js 也能折腾出更优雅性能更强的东西出来。以后，我可能会在公司产品项目中去尝试使用一下 Remix ，但目前，我 Next.js 还在深入去探索。\r\n\r\n折腾这么一个多月下来，我只能说磕磕绊绊，生态等于没有，文档也不全，还的经常去看源码。在反复推翻重做了十几次之后，我打算重新写的个人网站，现在连个顶部导航菜单都还没有完成。\r\n\r\n在没有公司 KPI 指标压力的情况下，在没有人指手画脚告诉你这该怎么做那该怎么最佳实现的情况下，在不用赶时间进度的情况下。你喜欢什么去用什么，不是一件快了的事情吗？所以我选择折腾 Remix ，很大一部分原因是因为想要折腾一下自己喜欢的东西。仅此而已。\r\n\r\n我并不想去推给别人 Remix 多好你快来用吧，但它很吸引我。就像小时候在电视里看到的棒棒糖非要买来吃，它究竟好吃不好吃并不重要，就是这种简单单纯的抉择，它会让你快乐。","content_rendered":"<h2>横向对比</h2>\n<p>先上一行对比图：</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Next.js</th>\n<th>Remix</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>SSG 静态站点生成</td>\n<td>✅内置</td>\n<td>不支持</td>\n</tr>\n<tr>\n<td>SSR 服务器端渲染</td>\n<td>✅内置</td>\n<td>✅通过 loader</td>\n</tr>\n<tr>\n<td>API 路由</td>\n<td>✅pages/api/ 目录下</td>\n<td>Remix 就是路由，你可以更加灵活去进行自定义路由</td>\n</tr>\n<tr>\n<td>Forms 表单</td>\n<td>非内置</td>\n<td>✅ 内置，且功能强大</td>\n</tr>\n<tr>\n<td>基于文件系统的路由管理</td>\n<td>✅ 页面级</td>\n<td>✅ 组件级</td>\n</tr>\n<tr>\n<td>会话管理</td>\n<td>非内置</td>\n<td>✅ 内置 Cookie 、Sessions</td>\n</tr>\n<tr>\n<td>禁用 JS</td>\n<td>未提供充分支持</td>\n<td>✅ 静态页面路由</td>\n</tr>\n<tr>\n<td>样式</td>\n<td>✅ 提供了全局及组件级样式支持 TailwindCSS 等</td>\n<td>非内置</td>\n</tr>\n<tr>\n<td>嵌套布局</td>\n<td>不支持</td>\n<td>✅内置</td>\n</tr>\n<tr>\n<td>i18n 国际化</td>\n<td>✅内置</td>\n<td>非内置</td>\n</tr>\n<tr>\n<td>图片优化</td>\n<td>✅通过 next/image 组件</td>\n<td>✅通过简单转换、备选质量等方式</td>\n</tr>\n<tr>\n<td>谷歌 AMP</td>\n<td>✅内置</td>\n<td>非内置</td>\n</tr>\n<tr>\n<td>适配器</td>\n<td>Node.js Request 和 Response 接口</td>\n<td>Fetch API Request 和 Response 接口</td>\n</tr>\n<tr>\n<td>Preload</td>\n<td>链接自动</td>\n<td>非自动</td>\n</tr>\n<tr>\n<td>异常处理</td>\n<td>创建 404 ，500 等页面</td>\n<td>使用 ErrorBoundary 组件局部抛错</td>\n</tr>\n<tr>\n<td>Polyfill</td>\n<td>fetch 、Object.assign 和 URL</td>\n<td>fetch</td>\n</tr>\n</tbody></table><h2>适用场景  Next.js</h2>\n<p>静态网站。这是其最大优势。在使用 TailwindCSS 等，可以更加灵活的制作出样式优美的页面及组件。拥有着较为完善的生态圈。</p>\n<p>适合快速上手做项目。</p>\n<h3>Remix</h3>\n<p>管理后台，对于数据的加载、嵌套数据或者组件的路由、并发加载优化做得很好，并且异常的处理已经可以精确到局部级别。</p>\n<p>或许是下一代的 Web 开发框架，需要折腾。</p>\n<h3>小结</h3>\n<ul>\n<li>数据复杂，内容较多（如可视化大屏）：Remix</li>\n<li>包含表单和会话的管理系统：Remix</li>\n<li>SEO 友好的网站：Next.js</li>\n<li>纯静态部署：Next.js</li>\n<li>国际化支持：Next.js</li>\n</ul>\n<hr/>\n<p>2022 年 1 月 19 日补：</p>\n<p>首先 Next.js 已经很快了，是 SSG 的快。生成了静态的\"页面\"，但是“页面”是个很大的东西，所以 Remix 的快，可以理解为组件的快，路由即组件。在经过对比了之后，我自己的站点选择使用 Remix 框架，不仅仅是因为快，而是因为这一套东西更“全栈”。Next.js 里可以在 pages/api 目录下写后端。你说它全栈吧，也说得通，但是很多东西用起来很别扭。</p>\n<h3>从生态角度出发</h3>\n<p>如果你想快速上手做项目，现阶段（指 2022 年初） Next.js 生态足够强大，Vercel 团队也新进了很多大牛。你想要的，基本都有一些示例的代码，现成的库或者插件。而且 Next.js 本身就内置了 i18n 路由的支持（这是我最喜欢它的一点）。</p>\n<p>举个最简单的例子，我想在我的站点上实现 i18n （国际化翻译），Remix 中可用的选择只有一个，remix-i18next ， 还是个半成品。在折腾了一周之后，我放弃了先做国际化的最初规划，改向做 mdx 内容管理。同时还有主题切换，也是半成品，remix-themes 插件只支持深浅主题的切换，所以当我选择用 daisy ui 框架的多主题风格时，虽然需要的代码量不算多，我却得写了那么一段塞进了自己的项目里。</p>\n<p>小结：如果你愿意折腾，Remix 。 新手友好，Next.js 。</p>\n<h3>从成本角度</h3>\n<p>Next.js 可以生成纯静态站点，任何类似于 Github Pages 的地方都可以托管。同时 Vercel 个人版本永久免费，团队需要付费。Vercel 的性能非常不错，而且只用按人头来收费（相较于 Remix 的主力平台 <a href=\"http://fly.io/\" rel=\"nofollow\">Fly.io</a> 来说成本也不算高）。</p>\n<p>Remix 则不行，只能跑在服务器上或者 Serverless 服务上。 <a href=\"http://fly.io/\" rel=\"nofollow\">Fly.io</a> 是容器化的服务，按量（资源使用量）付费，所以业务越大成本越高。<a href=\"http://fly.io/\" rel=\"nofollow\">Fly.io</a> 目前的模式和收费我个人很难接受，可能我还在幻想着我自己做好的网站能够在很短时间内有爆发的流量增长吧，而且容器化使用的门槛就抬高了，现在所谓的全栈开发更多还是偏向于前端领域。相信对于不是后端的同学来说，写个页面还要考虑 docker-compose 容器文件优化，资源分配调度什么乱七八糟的运维或者侧重于后端的事情，没什么必要。</p>\n<p>Next.js ，虽然生态很完善，但这种框架本身的束缚，出于经验的判断我并不会在团队技术选型中用其参与大型项目。这应该也间接反应出一个事情，企业提供服务都是需要考虑成本和收益的。所以 Remix 是有足够信心去支撑大型引用场景的。</p>\n<p>小结： 如果你并不是产品化的东西，或者预算方面有约束，Next.js 可以满足你更灵活的需求（静态网站、Serverless 托管、服务器或者容器都很 OK ）。Remix 目前来说，并没有一个很好的托管平台。</p>\n<h3>从性能角度</h3>\n<p>其实很有意思的一件事情。我们都特别喜欢看框架的性能，却忽略了真正使性能成指数形下降的，大多数是糟糕透顶的业务代码。</p>\n<p>Remix 初始性能更强一些，但 Next.js 性能的优化更容易去做。所以就简单讲讲 Remix 性能优化的一些案例：</p>\n<ul>\n<li><a href=\"https://github.com/kentcdodds/kentcdodds.com/blob/main/app/utils/metrics.server.ts\" rel=\"nofollow\">https://github.com/kentcdodds/kentcdodds.com/blob/main/app/utils/metrics.server.ts</a></li>\n<li><a href=\"https://github.com/abereghici/remix-bereghici-dev/blob/main/app/utils/metrics.server.ts\" rel=\"nofollow\">https://github.com/abereghici/remix-bereghici-dev/blob/main/app/utils/metrics.server.ts</a></li>\n</ul>\n<p>这也是目前我自己能想到的笨办法，记录每个关键流程的调用时长。Remix 后端性能优化的话目前从有限的文档中看不到特别好的方案，并且由于案例非常少，也没有最佳实践指南。这一部分的注入，很不优雅，但有效。</p>\n<p>也可以衍生到 React 与 Vue 框架的对比。我更喜欢 Vue ， 尤其 Vue 3 之后加入了更多新的语法糖如 setup 之类的。React JSX 给我就有种代码跟 HTML 混写在一起的原始感觉。 而且从性能来说 Vue 是明显在赶超中，框架的初始性能也会高于 React 。但 Vue 的入门门槛低，生态的质量就很难有保障了。</p>\n<p>小结：在你没有能力去改变框架性能的时候，关注框架的性能不如关注你用的库、你写的业务，至少这些你都可以去进一步提升它的性能。等你有能力去改变框架性能的时候，PR 不仅仅会让你赢得更多尊重。</p>\n<p>建议：你可以更多考虑这个框架在用起来的舒适性。比如说我真的特别喜欢 Vue ，所以我也特别喜欢 Next.js Vue 的版本—— Nuxt.js 。写起来非常惬意，所以即便是我发现做起优化来挺难的，也会乐在其中。</p>\n<p>不可否认 Next.js 在现阶段是既方便又好用的框架。Remix 还像一个襁褓里的婴儿。现在谈论它为时尚早，如果感兴趣，可以学习借鉴一下。这篇 Remix 发布的对比<a href=\"https://remix.run/blog/remix-vs-next\" rel=\"nofollow\">博文</a>，和很多文章一样。王婆卖瓜，自卖自夸，说完全客观谈不上，但数据这一块造假的可能性也不大。</p>\n<p>以上，是客观的个人观点。</p>\n<hr/>\n<p>以下，说说主观的个人观点。</p>\n<p>就像我喜欢 Vue ，却在写 React 一样。有很多时候，有些因素会干扰我们的选择，就比如说客户定的 Deadline 。使用 Nuxt.js 产品化的路子，就是败给了时间。如果给我更多的时间，我觉得我用 Nuxt.js 也能折腾出更优雅性能更强的东西出来。以后，我可能会在公司产品项目中去尝试使用一下 Remix ，但目前，我 Next.js 还在深入去探索。</p>\n<p>折腾这么一个多月下来，我只能说磕磕绊绊，生态等于没有，文档也不全，还的经常去看源码。在反复推翻重做了十几次之后，我打算重新写的个人网站，现在连个顶部导航菜单都还没有完成。</p>\n<p>在没有公司 KPI 指标压力的情况下，在没有人指手画脚告诉你这该怎么做那该怎么最佳实现的情况下，在不用赶时间进度的情况下。你喜欢什么去用什么，不是一件快了的事情吗？所以我选择折腾 Remix ，很大一部分原因是因为想要折腾一下自己喜欢的东西。仅此而已。</p>\n<p>我并不想去推给别人 Remix 多好你快来用吧，但它很吸引我。就像小时候在电视里看到的棒棒糖非要买来吃，它究竟好吃不好吃并不重要，就是这种简单单纯的抉择，它会让你快乐。</p>\n","last_modified":1644642255,"replies":7,"id":833374},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/3b5d/ca50/819_large.png?m=1633251402","name":"watch","avatar_normal":"https://cdn.v2ex.com/navatar/3b5d/ca50/819_normal.png?m=1633251402","title":" WATCH","url":"https://www.v2ex.com/go/watch","topics":752,"footer":"","header":"<a href=\"/go/apple\">Apple</a> 公司设计的智能手表产品","title_alternative":" WATCH","avatar_mini":"https://cdn.v2ex.com/navatar/3b5d/ca50/819_mini.png?m=1633251402","stars":358,"aliases":[],"root":false,"id":819,"parent_node_name":"apple"},"member":{"id":99144,"username":"EVJohn","url":"https://www.v2ex.com/u/EVJohn","website":null,"twitter":null,"psn":null,"github":null,"btc":null,"location":null,"tagline":null,"bio":null,"avatar_mini":"https://cdn.v2ex.com/gravatar/0a1e49433932a37d4dd93180582ea7e9?s=24&d=retro","avatar_normal":"https://cdn.v2ex.com/gravatar/0a1e49433932a37d4dd93180582ea7e9?s=48&d=retro","avatar_large":"https://cdn.v2ex.com/gravatar/0a1e49433932a37d4dd93180582ea7e9?s=73&d=retro","created":1424505911,"last_modified":1644636160},"last_reply_by":"jip","last_touched":1644647701,"title":"说说前几天跟朋友开 ECG V2 的经历把，供各位参考","url":"https://www.v2ex.com/t/833360","created":1644636680,"deleted":0,"content":"前不久搞了个 S5/GPS/国行机，遂在网上查阅资料后与朋友前往深圳-福田口岸接信号升 ECG V2.\r\n## 准备\r\n\t1 、需要一个热点机。\r\n    2 、准备一个联通卡，开通港澳台漫游。\r\n    3 、如果可以的话带个 http proxy 的 ios 设备也连到热点。\r\n## 到达福田口岸公交站外\r\n\t1 、关闭手机的数据、定位及 WiFI ，网络类型降到 4G ，打开漫游。\r\n    2 、打开网络选择，切到手动，搜寻“3”的信号。\r\n    3A 、未搜到信号就四处走动下，选择“中国联通”后切到自动再切回手动。\r\n    3B 、搜到“3”的信号后，返回上级菜单并开始等待。\r\n    4 、由低信号转为无信号，等到“3”的运营商标识出现并等待一会。\r\n    5 、连入热点（接入 http proxy ）进入健康-心脏-心率变异性，下拉找到更新。\r\n    6 、一路 next 就完了。\r\n如果只是单纯的信号漫游不会花流量钱。","content_rendered":"<p>前不久搞了个 S5/GPS/国行机，遂在网上查阅资料后与朋友前往深圳-福田口岸接信号升 ECG V2.</p>\n<h2>准备</h2>\n<pre><code>1 、需要一个热点机。\n2 、准备一个联通卡，开通港澳台漫游。\n3 、如果可以的话带个 http proxy 的 ios 设备也连到热点。\n</code></pre>\n<h2>到达福田口岸公交站外</h2>\n<pre><code>1 、关闭手机的数据、定位及 WiFI ，网络类型降到 4G ，打开漫游。\n2 、打开网络选择，切到手动，搜寻“3”的信号。\n3A 、未搜到信号就四处走动下，选择“中国联通”后切到自动再切回手动。\n3B 、搜到“3”的信号后，返回上级菜单并开始等待。\n4 、由低信号转为无信号，等到“3”的运营商标识出现并等待一会。\n5 、连入热点（接入 http proxy ）进入健康-心脏-心率变异性，下拉找到更新。\n6 、一路 next 就完了。\n</code></pre>\n<p>如果只是单纯的信号漫游不会花流量钱。</p>\n","last_modified":1644636680,"replies":6,"id":833360}]