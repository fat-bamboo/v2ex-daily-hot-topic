[{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/70ef/df2e/17_large.png?m=1660301119","name":"create","avatar_normal":"https://cdn.v2ex.com/navatar/70ef/df2e/17_normal.png?m=1660301119","title":"分享创造","url":"https://www.v2ex.com/go/create","topics":19366,"footer":"","header":"欢迎你在这里发布自己的最新作品！","title_alternative":"Create","avatar_mini":"https://cdn.v2ex.com/navatar/70ef/df2e/17_mini.png?m=1660301119","stars":4720,"aliases":[],"root":false,"id":17,"parent_node_name":"geek"},"member":{"id":590712,"username":"darkce","url":"https://www.v2ex.com/u/darkce","website":"","twitter":"","psn":"","github":"luoxuhai","btc":"","location":"北京","tagline":"","bio":"","avatar_mini":"https://cdn.v2ex.com/avatar/a266/b658/590712_mini.png?m=1676511377","avatar_normal":"https://cdn.v2ex.com/avatar/a266/b658/590712_normal.png?m=1676511377","avatar_large":"https://cdn.v2ex.com/avatar/a266/b658/590712_large.png?m=1676511377","avatar_xlarge":"https://cdn.v2ex.com/avatar/a266/b658/590712_xlarge.png?m=1676511377","avatar_xxlarge":"https://cdn.v2ex.com/avatar/a266/b658/590712_xlarge.png?m=1676511377","created":1659970800,"last_modified":1676511377},"last_reply_by":"ios","last_touched":1676597933,"title":"爆肝 2 个月，隐私盒子 App 2.0 终于上线了！拥有隐藏 App 功能！","url":"https://www.v2ex.com/t/916821","created":1676593679,"deleted":0,"content":"🎈 经过 2 个月的开发，把隐私盒子 App v1.0 的代码全部重构一遍，相当于重新开发了个 App ，无论是 UI 、用户体验还是性能都得到了大幅度提升，并新增了 **隐私 App 、伪装首页** 等实用功能，后续即将推出 **iCloud 备份**功能。\r\n\r\n🎊 App Store: https://apps.apple.com/cn/app/id1597534147\r\n\r\n### 🎉 简介\r\n\r\n隐私盒子是一款免费无广告的隐藏图片、视频和文件的 App ，与同类 App 相比：**无广告、功能齐全、iOS 式的交互体验**。多项独创功能带来的多重保护，给您创造属于自己的“私人空间”\r\n\r\n### 🎉 特色功能\r\n\r\n  - 免费无广告\r\n  - 支持伪装密码，打造两个空间\r\n  - 支持伪装首页，双重保护\r\n  - 支持隐藏 App ，从 iPhone 、iPad 隐藏指定的 App\r\n  - 支持更换应用图标\r\n  - 支持使用面容、指纹解锁\r\n  - 紧急切换，将手机屏幕面向下放置，可锁定隐私空间并打开指定应用\r\n  - 支持电脑、手机链接至同一 Wi-Fi 极速互传文件\r\n  - 智能搜索功能，AI 离线识别图片内容，根据关键词搜索图片\r\n  - 隐私文件管理，可添加任意格式文件：PDF 、Word 、Excel 、PPT 、TXT 、HTML 等\r\n\r\n### 🎉 截图\r\n\r\n![pwSYx.png]( https://i.328888.xyz/2023/02/17/pwSYx.png)\r\n![pw5Fa.png]( https://i.328888.xyz/2023/02/17/pw5Fa.png)\r\n\r\n### 🎉 下载安装\r\n\r\nApp Store: https://apps.apple.com/cn/app/id1597534147","content_rendered":"<p>🎈 经过 2 个月的开发，把隐私盒子 App v1.0 的代码全部重构一遍，相当于重新开发了个 App ，无论是 UI 、用户体验还是性能都得到了大幅度提升，并新增了 <strong>隐私 App 、伪装首页</strong> 等实用功能，后续即将推出 <strong>iCloud 备份</strong>功能。</p>\n<p>🎊 App Store: <a href=\"https://apps.apple.com/cn/app/id1597534147\" rel=\"nofollow\">https://apps.apple.com/cn/app/id1597534147</a></p>\n<h3>🎉 简介</h3>\n<p>隐私盒子是一款免费无广告的隐藏图片、视频和文件的 App ，与同类 App 相比：<strong>无广告、功能齐全、iOS 式的交互体验</strong>。多项独创功能带来的多重保护，给您创造属于自己的“私人空间”</p>\n<h3>🎉 特色功能</h3>\n<ul>\n<li>免费无广告</li>\n<li>支持伪装密码，打造两个空间</li>\n<li>支持伪装首页，双重保护</li>\n<li>支持隐藏 App ，从 iPhone 、iPad 隐藏指定的 App</li>\n<li>支持更换应用图标</li>\n<li>支持使用面容、指纹解锁</li>\n<li>紧急切换，将手机屏幕面向下放置，可锁定隐私空间并打开指定应用</li>\n<li>支持电脑、手机链接至同一 Wi-Fi 极速互传文件</li>\n<li>智能搜索功能，AI 离线识别图片内容，根据关键词搜索图片</li>\n<li>隐私文件管理，可添加任意格式文件：PDF 、Word 、Excel 、PPT 、TXT 、HTML 等</li>\n</ul>\n<h3>🎉 截图</h3>\n<p><img alt=\"pwSYx.png\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://i.328888.xyz/2023/02/17/pwSYx.png\"/>\n<img alt=\"pw5Fa.png\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://i.328888.xyz/2023/02/17/pw5Fa.png\"/></p>\n<h3>🎉 下载安装</h3>\n<p>App Store: <a href=\"https://apps.apple.com/cn/app/id1597534147\" rel=\"nofollow\">https://apps.apple.com/cn/app/id1597534147</a></p>\n","last_modified":1676593679,"replies":27,"id":916821},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1650095340","name":"qna","avatar_normal":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1650095340","title":"问与答","url":"https://www.v2ex.com/go/qna","topics":197451,"footer":"","header":"一个更好的世界需要你持续地提出好问题。","title_alternative":"Questions and Answers","avatar_mini":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1650095340","stars":3702,"aliases":[],"root":false,"id":12,"parent_node_name":"v2ex"},"member":{"id":167917,"username":"rojer12","url":"https://www.v2ex.com/u/rojer12","website":"","twitter":"","psn":"","github":"","btc":"","location":"","tagline":"","bio":"","avatar_mini":"https://cdn.v2ex.com/avatar/9ba1/6941/167917_mini.png?m=1657009753","avatar_normal":"https://cdn.v2ex.com/avatar/9ba1/6941/167917_normal.png?m=1657009753","avatar_large":"https://cdn.v2ex.com/avatar/9ba1/6941/167917_large.png?m=1657009753","avatar_xlarge":"https://cdn.v2ex.com/avatar/9ba1/6941/167917_xlarge.png?m=1657009753","avatar_xxlarge":"https://cdn.v2ex.com/avatar/9ba1/6941/167917_xlarge.png?m=1657009753","avatar_xxxlarge":"https://cdn.v2ex.com/avatar/9ba1/6941/167917_xlarge.png?m=1657009753","created":1460461042,"last_modified":1657009753},"last_reply_by":"liushaokang","last_touched":1676597882,"title":"现在哪些地方的运营商的家宽还会提供动态公网 ip(v4)","url":"https://www.v2ex.com/t/916824","created":1676594966,"deleted":0,"content":"坐标湖南，电信原来一直是免费提供的，最近两年开始收费了，20 一个月\r\n联通不提供，但是用一些特别的手法可以拿到（在宽带账号后面加上 @changsha ，可以把账号变成测试账号）\r\n移动没用过","content_rendered":"<p>坐标湖南，电信原来一直是免费提供的，最近两年开始收费了，20 一个月\n联通不提供，但是用一些特别的手法可以拿到（在宽带账号后面加上 @<a href=\"/member/changsha\">changsha</a> ，可以把账号变成测试账号）\n移动没用过</p>\n","last_modified":1676594966,"replies":14,"id":916824},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1673261684","name":"programmer","avatar_normal":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1673261684","title":"程序员","url":"https://www.v2ex.com/go/programmer","topics":53415,"footer":"","header":"While code monkeys are not eating bananas, they're coding.","title_alternative":"Programmer","avatar_mini":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1673261684","stars":8194,"aliases":[],"root":false,"id":300,"parent_node_name":"computer"},"member":{"id":593619,"username":"machen","url":"https://www.v2ex.com/u/machen","website":"https://hippo4j.cn","twitter":"","psn":"","github":"magegoofy","btc":"","location":"","tagline":"","bio":"Apache ShardingSphere Committer, Maintainer of https://hippo4j.cn","avatar_mini":"https://cdn.v2ex.com/avatar/ffc9/7dab/593619_mini.png?m=1676594810","avatar_normal":"https://cdn.v2ex.com/avatar/ffc9/7dab/593619_normal.png?m=1676594810","avatar_large":"https://cdn.v2ex.com/avatar/ffc9/7dab/593619_large.png?m=1676594810","avatar_xlarge":"https://cdn.v2ex.com/avatar/ffc9/7dab/593619_xlarge.png?m=1676594810","avatar_xxlarge":"https://cdn.v2ex.com/avatar/ffc9/7dab/593619_xlarge.png?m=1676594810","avatar_xxxlarge":"https://cdn.v2ex.com/avatar/ffc9/7dab/593619_xlarge.png?m=1676594810","created":1662461827,"last_modified":1676594810},"last_reply_by":"Xusually","last_touched":1676597728,"title":"美团：某动态线程池框架是官方开源的么？","url":"https://www.v2ex.com/t/916816","created":1676592036,"deleted":0,"content":"大家好，我是马称。\r\n\r\n最近，有很多同学在微信上问我这么一个问题：\r\n\r\n**Hippo4j 动态线程池框架是美团开源的么**？\r\n\r\n类似于这样的问题还挺多，在这里统一回复下：\r\n\r\n**美团官方并没有开源任何关于动态线程池的框架**。\r\n\r\n美团官方关于对动态线程池框架的唯一产出，来自于大家基本上看过或者有印象的一篇博客。\r\n\r\n[Java 线程池实现原理及其在美团业务中的实践]( https://tech.meituan.com/2020/04/02/java-pooling-pratice-in-meituan.html)\r\n\r\n如果不了解动态线程池概念的同学可以深入了解下。文章深入浅出，讲的很透彻，同时也是美团罪受欢迎的文章之一。\r\n\r\n在此之后，**美团官方并没有基于动态线程池这个 IDEA 做任何的产出**。不过，开源社区基于美团这篇文章做了很多开源框架，比如笔者开源的 Hippo4j ，以及另外一位开源作者 DynamicTP 框架等。\r\n\r\n说完 Hippo4j 是否美团动态线程池开源后，接下来和大家聊两件和平常工作有关并且有意思的事。\r\n\r\n## 美团动态线程池框架为什么没有开源\r\n\r\n根据我的想法，如果当初美团推出动态线程池概念后，顺势推出一款开源框架，肯定会“爆火”。\r\n\r\n毕竟，对于工作这么多年的开发来说，谁的线上环境还没有被线程池“坑”过呢。\r\n\r\n但是，实际却没有按照这种设想发展，我就找了在美团工作的朋友聊了聊，下面根据我的了解说下是怎么回事。\r\n\r\n### 1. 依赖办公软件大象\r\n\r\n动态参数通知和线程池运行中报警，都需要通过办公通信软件或者邮件进行通知。\r\n\r\n通过上面提到的美团动态线程池文章可知，在线程池变更通知和过载告警功能上，依赖了美团办公通信软件大象。\r\n\r\n<img src=\"https://images-machen.oss-cn-beijing.aliyuncs.com/image-20230214214820444.png\" style=\"zoom:50%;\" />\r\n\r\n如果要开源，如何进行改造呢？\r\n\r\n基于通知报警方案，其实很好解决，抽象出去一个通知接口以及核心参数，并提供 SPI 加载方式，基本上就能完成开源兼容适配。\r\n\r\n### 2. 依赖监控工具 Cat\r\n\r\n美团线程池支持查看内部任务级别的执行情况，进行细粒度任务级别监控。\r\n\r\n核心原理是通过 Cat Transaction 打点进行的支持，下图表就是从 Cat 上汇总进行展示。\r\n\r\n![]( https://images-machen.oss-cn-beijing.aliyuncs.com/cd0b9445c3c93a866201b7cfb24d2ce7214776.png)\r\n\r\nCat 这种依赖，不太好替换，因为会对原有业务代码进行侵入。如果说开源方案的话，可能就需要牺牲一部分功能性或者针对动态线程池框架底层实现这一功能。\r\n\r\n### 3. 依赖消息队列 Kafka\r\n\r\n通过美团文章中看到线程池框架使用了 Kafka 消息队列，这里暂且当一个存疑点，动态线程池中哪部分业务需要使用 Kafka 呢？\r\n\r\n如果说使用动态线程池功能，还需要依赖消息队列，这可能对于大部分场景来说是说不通用的。\r\n\r\n![]( https://images-machen.oss-cn-beijing.aliyuncs.com/image-20230216215505371.png)\r\n\r\n如果要进行开源，我的建议和想法是将这里设置为可替换项。也就是说默认不支持 MQ 功能，同时对市场上主流 MQ 进行适配。如果客户端项目想用的话，可根据项目实际选择。\r\n\r\n比较常见的是 Seata 和 SkyWalking 的做法，以 SkyWalking 举例，链路数据存储支持 H2 、MySQL 、ElasticSearch 等数据库，让用户根据场景以及服务体量灵活选择。\r\n\r\n### 4. 动态线程池是监控体系中的“小”模块\r\n\r\n之前有和美团的一位技术朋友沟通过，为什么美团的动态线程池框架没有开源出来？\r\n\r\n他给我的回复是，动态线程池框架只是美团监控体系下一个“小”模块。\r\n\r\n而且，根据不可靠消息，似乎内部该框架的实现不止一个，如果有美团的哥们看到可以评论下。\r\n\r\n### 5. 小结\r\n\r\n经过上面的分析，在这里我得出一个结论：**美团在最初设计开发动态线程池时，似乎就没有打算对外开源。因此才会依赖如此多的组件以及美团内部的产品**。\r\n\r\n上文中所有想法都是笔者主观想法，实际情况有待考究。\r\n\r\n## 如何识别框架是否官方开源\r\n\r\n### 1. 开源仓库\r\n\r\n国内公司中开源框架比较多的，基本上都会在 GitHub 命名空间下运维项目。\r\n\r\n这里列举一些大厂开源公司对应的官方 GitHub 地址。\r\n\r\n1. 阿里巴巴： https://github.com/alibaba\r\n2. 腾讯： https://github.com/tencent\r\n3. 美团： https://github.com/meituan\r\n4. ......\r\n\r\n### 2. 依赖包地址\r\n\r\n在我们导入依赖包的时候，会输入 groupId 、artifactId 、version 三种信息，是否官方开源在 groupId 上基本就能体现出来。 \r\n\r\ngroupId：一般由三部分组成，`标识.公司名.项目名`，拿 Apache 、Alibaba 两个组织的 groupId 举例子说明。\r\n\r\n```xml\r\n<dependency>\r\n  <groupId>org.apache.shardingsphere</groupId>\r\n  <artifactId>shardingsphere-jdbc-core-spring-boot-starter</artifactId>\r\n  <version>${shardingsphere-jdbc-core-spring-boot-starter.version}</version>\r\n</dependency>\r\n\r\n<dependency>\r\n    <groupId>com.alibaba.cloud</groupId>\r\n    <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>\r\n  \t<version>${spring-cloud-starter-alibaba-nacos-discovery.version}</version>\r\n</dependency>\r\n```\r\n\r\n所以，如果说项目为官方开源，那么通过 groupId 很容易就能辨别出来。\r\n\r\n### 3. 非官方地址就不是官方开源的么\r\n\r\n非官方地址就不是官方开源的么，也不一定，并不是所有项目都在公司命名空间下发展。\r\n\r\n有些项目是独立于公司创建的命名空间，比如说阿里的 seata 、ant-design 等。\r\n\r\n- https://github.com/ant-design/ant-design\r\n- https://github.com/seata/seata\r\n\r\n再比如美团一篇比较火的文章，讲的是操作日志如何记录，相信大多数同学也都有看到。\r\n\r\n[如何优雅地记录操作日志？]( https://mp.weixin.qq.com/s/JC51S_bI02npm4CE5NEEow)\r\n\r\nGitHub： https://github.com/mouzt/mzt-biz-log\r\n\r\n同样不是官方开源，但是开源项目是由文章本人进行维护，代码质量和项目活跃度不输官方维护项目。\r\n\r\n## 什么是 Hippo4j\r\n\r\n上面说了很多关于开源的小知识，接下来向大家介绍下笔者开源的动态线程池框架 Hippo4j 。\r\n\r\n原理：通过对 JDK 线程池的增强，以及扩展三方框架底层线程池等功能，为业务系统提高线上运行保障能力。\r\n\r\nHippo4j 提供了两种模式，一种是 [依赖配置中心]( https://hippo4j.cn/docs/user_docs/getting_started/config/hippo4j-config-start)，另一种是 [无中间件依赖]( https://hippo4j.cn/docs/user_docs/getting_started/server/hippo4j-server-start)，部署个 Jar 包就能带来 Web 端控制台使用。\r\n\r\nGitHub： https://github.com/opengoofy/hippo4j\r\n\r\nGitee： https://gitee.com/magestack/hippo4j\r\n\r\n### 1. 线程池痛点\r\n\r\n如果有在项目中实际使用线程池，相信你可能会遇到以下痛点：\r\n\r\n- 线程池随便定义，线程资源过多，造成服务器高负载。\r\n- 线程池参数不易评估，随着业务的并发提升，业务面临出现故障的风险。\r\n- 线程池任务执行时间超过平均执行周期，开发人员无法感知。\r\n- 线程池任务堆积，触发拒绝策略，影响既有业务正常运行。\r\n- 当业务出现超时、熔断等问题时，因为没有监控，无法确定是不是线程池引起。\r\n- 原生线程池不支持运行时变量的传递，比如 MDC 上下文遇到线程池就 GG 。\r\n- 无法执行优雅关闭，当项目关闭时，大量正在运行的线程池任务被丢弃。\r\n- 线程池运行中，任务执行停止，怀疑发生死锁或执行耗时操作，但是无从下手。\r\n\r\n### 2. 功能支持\r\n\r\n基于以上痛点，Hippo4j 提供以下线程池功能扩展支持：\r\n\r\n- 全局管控 - 管理应用线程池实例。\r\n- 动态变更 - 应用运行时动态变更线程池参数，包括但不限于：核心、最大线程数、阻塞队列容量、拒绝策略等。\r\n- 通知报警 - 内置四种报警通知策略，线程池活跃度、容量水位、拒绝策略以及任务执行时间超长。\r\n- 数据采集 - 支持多种方式采集线程池数据，包括但不限于：日志、内置采集、Prometheus 、InfluxDB 、ElasticSearch 等。\r\n- 运行监控 - 实时查看线程池运行时数据，自定义时间内线程池运行数据图表展示。\r\n- 功能扩展 - 支持线程池任务传递上下文；项目关闭时，支持等待线程池在指定时间内完成任务。\r\n- 多种模式 - 内置两种使用模式：[依赖配置中心]( https://hippo4j.cn/docs/user_docs/getting_started/config/hippo4j-config-start) 和 [无中间件依赖]( https://hippo4j.cn/docs/user_docs/getting_started/server/hippo4j-server-start)。\r\n- 容器管理 - Tomcat 、Jetty 、Undertow 容器线程池运行时查看和线程数变更。\r\n- 框架适配 - Dubbo 、Hystrix 、RabbitMQ 、RocketMQ 等消费线程池运行时数据查看和线程数变更。\r\n- 变更审核 - 提供多种用户角色，普通用户变更线程池参数需要 Admin 用户审核方可生效。\r\n- 动态化插件 - 内置多种线程池插件，支持用户自定义插件以及运行时扩展。\r\n- 多版本适配 - 经过实际测试，已支持客户端 SpringBoot 1.5.x => 2.7.5 版本（更高版本未测试）。\r\n\r\n### 3. 小结\r\n\r\n截止目前，共计 [30+ 公司]( https://hippo4j.cn/users) 线上使用 Hippo4j 管理应用线程池，使用公司中包括支付、电商、快递、保险以及教育等行业。\r\n\r\n同时，共有 [86 名]( https://github.com/opengoofy/hippo4j/graphs/contributors) 开源同学对 Hippo4j 进行了代码贡献，有 [10 名]( https://hippo4j.cn/team) 小伙伴持续投入较多精力维护，晋升为 Hippo4j Committer ，得到官方支持 Jetbrains 全家桶 Licenses 。\r\n\r\n## 最后总结\r\n\r\n关于动态线程池的热度一直居高不下，本篇文章讲述了美团动态线程池的上下文，以及对为什么没有开源进行了简单分析。\r\n\r\n最终得出的结论是：**美团最初设计动态线程池时就没有打算开源，所以才会依赖美团相关中间件以及 Kafka 等“重量级”组件**。\r\n\r\n同时针对有些同学说无法分辨框架是否官方开源，笔者针对这个话题做了几项总结输出。\r\n\r\n最后，介绍了下 GitHub 开源领域中比较火的项目 Hippo4j ，如果各位同学觉得不错可以持续关注。\r\n\r\nGitHub： https://github.com/opengoofy/hippo4j\r\n\r\nGitee： https://gitee.com/magestack/hippo4j","content_rendered":"<p>大家好，我是马称。</p>\n<p>最近，有很多同学在微信上问我这么一个问题：</p>\n<p><strong>Hippo4j 动态线程池框架是美团开源的么</strong>？</p>\n<p>类似于这样的问题还挺多，在这里统一回复下：</p>\n<p><strong>美团官方并没有开源任何关于动态线程池的框架</strong>。</p>\n<p>美团官方关于对动态线程池框架的唯一产出，来自于大家基本上看过或者有印象的一篇博客。</p>\n<p><a href=\"https://tech.meituan.com/2020/04/02/java-pooling-pratice-in-meituan.html\" rel=\"nofollow\">Java 线程池实现原理及其在美团业务中的实践</a></p>\n<p>如果不了解动态线程池概念的同学可以深入了解下。文章深入浅出，讲的很透彻，同时也是美团罪受欢迎的文章之一。</p>\n<p>在此之后，<strong>美团官方并没有基于动态线程池这个 IDEA 做任何的产出</strong>。不过，开源社区基于美团这篇文章做了很多开源框架，比如笔者开源的 Hippo4j ，以及另外一位开源作者 DynamicTP 框架等。</p>\n<p>说完 Hippo4j 是否美团动态线程池开源后，接下来和大家聊两件和平常工作有关并且有意思的事。</p>\n<h2>美团动态线程池框架为什么没有开源</h2>\n<p>根据我的想法，如果当初美团推出动态线程池概念后，顺势推出一款开源框架，肯定会“爆火”。</p>\n<p>毕竟，对于工作这么多年的开发来说，谁的线上环境还没有被线程池“坑”过呢。</p>\n<p>但是，实际却没有按照这种设想发展，我就找了在美团工作的朋友聊了聊，下面根据我的了解说下是怎么回事。</p>\n<h3>1. 依赖办公软件大象</h3>\n<p>动态参数通知和线程池运行中报警，都需要通过办公通信软件或者邮件进行通知。</p>\n<p>通过上面提到的美团动态线程池文章可知，在线程池变更通知和过载告警功能上，依赖了美团办公通信软件大象。</p>\n<img class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://images-machen.oss-cn-beijing.aliyuncs.com/image-20230214214820444.png\"/>\n<p>如果要开源，如何进行改造呢？</p>\n<p>基于通知报警方案，其实很好解决，抽象出去一个通知接口以及核心参数，并提供 SPI 加载方式，基本上就能完成开源兼容适配。</p>\n<h3>2. 依赖监控工具 Cat</h3>\n<p>美团线程池支持查看内部任务级别的执行情况，进行细粒度任务级别监控。</p>\n<p>核心原理是通过 Cat Transaction 打点进行的支持，下图表就是从 Cat 上汇总进行展示。</p>\n<p><img alt=\"\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://images-machen.oss-cn-beijing.aliyuncs.com/cd0b9445c3c93a866201b7cfb24d2ce7214776.png\"/></p>\n<p>Cat 这种依赖，不太好替换，因为会对原有业务代码进行侵入。如果说开源方案的话，可能就需要牺牲一部分功能性或者针对动态线程池框架底层实现这一功能。</p>\n<h3>3. 依赖消息队列 Kafka</h3>\n<p>通过美团文章中看到线程池框架使用了 Kafka 消息队列，这里暂且当一个存疑点，动态线程池中哪部分业务需要使用 Kafka 呢？</p>\n<p>如果说使用动态线程池功能，还需要依赖消息队列，这可能对于大部分场景来说是说不通用的。</p>\n<p><img alt=\"\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://images-machen.oss-cn-beijing.aliyuncs.com/image-20230216215505371.png\"/></p>\n<p>如果要进行开源，我的建议和想法是将这里设置为可替换项。也就是说默认不支持 MQ 功能，同时对市场上主流 MQ 进行适配。如果客户端项目想用的话，可根据项目实际选择。</p>\n<p>比较常见的是 Seata 和 SkyWalking 的做法，以 SkyWalking 举例，链路数据存储支持 H2 、MySQL 、ElasticSearch 等数据库，让用户根据场景以及服务体量灵活选择。</p>\n<h3>4. 动态线程池是监控体系中的“小”模块</h3>\n<p>之前有和美团的一位技术朋友沟通过，为什么美团的动态线程池框架没有开源出来？</p>\n<p>他给我的回复是，动态线程池框架只是美团监控体系下一个“小”模块。</p>\n<p>而且，根据不可靠消息，似乎内部该框架的实现不止一个，如果有美团的哥们看到可以评论下。</p>\n<h3>5. 小结</h3>\n<p>经过上面的分析，在这里我得出一个结论：<strong>美团在最初设计开发动态线程池时，似乎就没有打算对外开源。因此才会依赖如此多的组件以及美团内部的产品</strong>。</p>\n<p>上文中所有想法都是笔者主观想法，实际情况有待考究。</p>\n<h2>如何识别框架是否官方开源</h2>\n<h3>1. 开源仓库</h3>\n<p>国内公司中开源框架比较多的，基本上都会在 GitHub 命名空间下运维项目。</p>\n<p>这里列举一些大厂开源公司对应的官方 GitHub 地址。</p>\n<ol>\n<li>阿里巴巴： <a href=\"https://github.com/alibaba\" rel=\"nofollow\">https://github.com/alibaba</a></li>\n<li>腾讯： <a href=\"https://github.com/tencent\" rel=\"nofollow\">https://github.com/tencent</a></li>\n<li>美团： <a href=\"https://github.com/meituan\" rel=\"nofollow\">https://github.com/meituan</a></li>\n<li>......</li>\n</ol>\n<h3>2. 依赖包地址</h3>\n<p>在我们导入依赖包的时候，会输入 groupId 、artifactId 、version 三种信息，是否官方开源在 groupId 上基本就能体现出来。 </p>\n<p>groupId：一般由三部分组成，<code>标识.公司名.项目名</code>，拿 Apache 、Alibaba 两个组织的 groupId 举例子说明。</p>\n<pre><code class=\"language-xml\">&lt;dependency&gt;\n  &lt;groupId&gt;org.apache.shardingsphere&lt;/groupId&gt;\n  &lt;artifactId&gt;shardingsphere-jdbc-core-spring-boot-starter&lt;/artifactId&gt;\n  &lt;version&gt;${shardingsphere-jdbc-core-spring-boot-starter.version}&lt;/version&gt;\n&lt;/dependency&gt;\n\n&lt;dependency&gt;\n    &lt;groupId&gt;com.alibaba.cloud&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-discovery&lt;/artifactId&gt;\n  \t&lt;version&gt;${spring-cloud-starter-alibaba-nacos-discovery.version}&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre>\n<p>所以，如果说项目为官方开源，那么通过 groupId 很容易就能辨别出来。</p>\n<h3>3. 非官方地址就不是官方开源的么</h3>\n<p>非官方地址就不是官方开源的么，也不一定，并不是所有项目都在公司命名空间下发展。</p>\n<p>有些项目是独立于公司创建的命名空间，比如说阿里的 seata 、ant-design 等。</p>\n<ul>\n<li><a href=\"https://github.com/ant-design/ant-design\" rel=\"nofollow\">https://github.com/ant-design/ant-design</a></li>\n<li><a href=\"https://github.com/seata/seata\" rel=\"nofollow\">https://github.com/seata/seata</a></li>\n</ul>\n<p>再比如美团一篇比较火的文章，讲的是操作日志如何记录，相信大多数同学也都有看到。</p>\n<p><a href=\"https://mp.weixin.qq.com/s/JC51S_bI02npm4CE5NEEow\" rel=\"nofollow\">如何优雅地记录操作日志？</a></p>\n<p>GitHub： <a href=\"https://github.com/mouzt/mzt-biz-log\" rel=\"nofollow\">https://github.com/mouzt/mzt-biz-log</a></p>\n<p>同样不是官方开源，但是开源项目是由文章本人进行维护，代码质量和项目活跃度不输官方维护项目。</p>\n<h2>什么是 Hippo4j</h2>\n<p>上面说了很多关于开源的小知识，接下来向大家介绍下笔者开源的动态线程池框架 Hippo4j 。</p>\n<p>原理：通过对 JDK 线程池的增强，以及扩展三方框架底层线程池等功能，为业务系统提高线上运行保障能力。</p>\n<p>Hippo4j 提供了两种模式，一种是 <a href=\"https://hippo4j.cn/docs/user_docs/getting_started/config/hippo4j-config-start\" rel=\"nofollow\">依赖配置中心</a>，另一种是 <a href=\"https://hippo4j.cn/docs/user_docs/getting_started/server/hippo4j-server-start\" rel=\"nofollow\">无中间件依赖</a>，部署个 Jar 包就能带来 Web 端控制台使用。</p>\n<p>GitHub： <a href=\"https://github.com/opengoofy/hippo4j\" rel=\"nofollow\">https://github.com/opengoofy/hippo4j</a></p>\n<p>Gitee： <a href=\"https://gitee.com/magestack/hippo4j\" rel=\"nofollow\">https://gitee.com/magestack/hippo4j</a></p>\n<h3>1. 线程池痛点</h3>\n<p>如果有在项目中实际使用线程池，相信你可能会遇到以下痛点：</p>\n<ul>\n<li>线程池随便定义，线程资源过多，造成服务器高负载。</li>\n<li>线程池参数不易评估，随着业务的并发提升，业务面临出现故障的风险。</li>\n<li>线程池任务执行时间超过平均执行周期，开发人员无法感知。</li>\n<li>线程池任务堆积，触发拒绝策略，影响既有业务正常运行。</li>\n<li>当业务出现超时、熔断等问题时，因为没有监控，无法确定是不是线程池引起。</li>\n<li>原生线程池不支持运行时变量的传递，比如 MDC 上下文遇到线程池就 GG 。</li>\n<li>无法执行优雅关闭，当项目关闭时，大量正在运行的线程池任务被丢弃。</li>\n<li>线程池运行中，任务执行停止，怀疑发生死锁或执行耗时操作，但是无从下手。</li>\n</ul>\n<h3>2. 功能支持</h3>\n<p>基于以上痛点，Hippo4j 提供以下线程池功能扩展支持：</p>\n<ul>\n<li>全局管控 - 管理应用线程池实例。</li>\n<li>动态变更 - 应用运行时动态变更线程池参数，包括但不限于：核心、最大线程数、阻塞队列容量、拒绝策略等。</li>\n<li>通知报警 - 内置四种报警通知策略，线程池活跃度、容量水位、拒绝策略以及任务执行时间超长。</li>\n<li>数据采集 - 支持多种方式采集线程池数据，包括但不限于：日志、内置采集、Prometheus 、InfluxDB 、ElasticSearch 等。</li>\n<li>运行监控 - 实时查看线程池运行时数据，自定义时间内线程池运行数据图表展示。</li>\n<li>功能扩展 - 支持线程池任务传递上下文；项目关闭时，支持等待线程池在指定时间内完成任务。</li>\n<li>多种模式 - 内置两种使用模式：<a href=\"https://hippo4j.cn/docs/user_docs/getting_started/config/hippo4j-config-start\" rel=\"nofollow\">依赖配置中心</a> 和 <a href=\"https://hippo4j.cn/docs/user_docs/getting_started/server/hippo4j-server-start\" rel=\"nofollow\">无中间件依赖</a>。</li>\n<li>容器管理 - Tomcat 、Jetty 、Undertow 容器线程池运行时查看和线程数变更。</li>\n<li>框架适配 - Dubbo 、Hystrix 、RabbitMQ 、RocketMQ 等消费线程池运行时数据查看和线程数变更。</li>\n<li>变更审核 - 提供多种用户角色，普通用户变更线程池参数需要 Admin 用户审核方可生效。</li>\n<li>动态化插件 - 内置多种线程池插件，支持用户自定义插件以及运行时扩展。</li>\n<li>多版本适配 - 经过实际测试，已支持客户端 SpringBoot 1.5.x =&gt; 2.7.5 版本（更高版本未测试）。</li>\n</ul>\n<h3>3. 小结</h3>\n<p>截止目前，共计 <a href=\"https://hippo4j.cn/users\" rel=\"nofollow\">30+ 公司</a> 线上使用 Hippo4j 管理应用线程池，使用公司中包括支付、电商、快递、保险以及教育等行业。</p>\n<p>同时，共有 <a href=\"https://github.com/opengoofy/hippo4j/graphs/contributors\" rel=\"nofollow\">86 名</a> 开源同学对 Hippo4j 进行了代码贡献，有 <a href=\"https://hippo4j.cn/team\" rel=\"nofollow\">10 名</a> 小伙伴持续投入较多精力维护，晋升为 Hippo4j Committer ，得到官方支持 Jetbrains 全家桶 Licenses 。</p>\n<h2>最后总结</h2>\n<p>关于动态线程池的热度一直居高不下，本篇文章讲述了美团动态线程池的上下文，以及对为什么没有开源进行了简单分析。</p>\n<p>最终得出的结论是：<strong>美团最初设计动态线程池时就没有打算开源，所以才会依赖美团相关中间件以及 Kafka 等“重量级”组件</strong>。</p>\n<p>同时针对有些同学说无法分辨框架是否官方开源，笔者针对这个话题做了几项总结输出。</p>\n<p>最后，介绍了下 GitHub 开源领域中比较火的项目 Hippo4j ，如果各位同学觉得不错可以持续关注。</p>\n<p>GitHub： <a href=\"https://github.com/opengoofy/hippo4j\" rel=\"nofollow\">https://github.com/opengoofy/hippo4j</a></p>\n<p>Gitee： <a href=\"https://gitee.com/magestack/hippo4j\" rel=\"nofollow\">https://gitee.com/magestack/hippo4j</a></p>\n","last_modified":1676592036,"replies":14,"id":916816},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/6e27/13a6/557_large.png?m=1608969785","name":"life","avatar_normal":"https://cdn.v2ex.com/navatar/6e27/13a6/557_normal.png?m=1608969785","title":"生活","url":"https://www.v2ex.com/go/life","topics":3959,"footer":"","header":"生活中的技术讨论","title_alternative":"Life","avatar_mini":"https://cdn.v2ex.com/navatar/6e27/13a6/557_mini.png?m=1608969785","stars":1056,"aliases":[],"root":false,"id":557,"parent_node_name":""},"member":{"id":265392,"username":"Cheons","url":"https://www.v2ex.com/u/Cheons","website":"","twitter":"","psn":"","github":"","btc":"","location":"","tagline":"","bio":"","avatar_mini":"https://cdn.v2ex.com/avatar/631e/fd74/265392_mini.png?m=1651916249","avatar_normal":"https://cdn.v2ex.com/avatar/631e/fd74/265392_normal.png?m=1651916249","avatar_large":"https://cdn.v2ex.com/avatar/631e/fd74/265392_large.png?m=1651916249","created":1509988046,"last_modified":1651916249},"last_reply_by":"Cheons","last_touched":1676597209,"title":"2023 年 2 月，有人能分享一下炒菜机的使用体验。","url":"https://www.v2ex.com/t/916826","created":1676596291,"deleted":0,"content":"家里改造，准备搞开放式厨房。想着尽可能从源头缓解油烟问题，油烟大的菜用炒菜机隔离。\r\n洗菜、切菜不是问题，能减少油烟嘛？","content_rendered":"家里改造，准备搞开放式厨房。想着尽可能从源头缓解油烟问题，油烟大的菜用炒菜机隔离。<br />洗菜、切菜不是问题，能减少油烟嘛？","last_modified":1676596291,"replies":9,"id":916826},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/e7b2/4b11/360_large.png?m=1670319927","name":"windows","avatar_normal":"https://cdn.v2ex.com/navatar/e7b2/4b11/360_normal.png?m=1670319927","title":"Windows","url":"https://www.v2ex.com/go/windows","topics":3112,"footer":"","header":"Windows, not walls.","title_alternative":"Windows","avatar_mini":"https://cdn.v2ex.com/navatar/e7b2/4b11/360_mini.png?m=1670319927","stars":1024,"aliases":[],"root":false,"id":360,"parent_node_name":"os"},"member":{"id":433522,"username":"zhwguest","url":"https://www.v2ex.com/u/zhwguest","website":null,"twitter":null,"psn":null,"github":null,"btc":null,"location":null,"tagline":null,"bio":null,"avatar_mini":"https://cdn.v2ex.com/gravatar/5ba1b152c01cc785dcf55a3963e92aa1?s=24&d=retro","avatar_normal":"https://cdn.v2ex.com/gravatar/5ba1b152c01cc785dcf55a3963e92aa1?s=48&d=retro","avatar_large":"https://cdn.v2ex.com/gravatar/5ba1b152c01cc785dcf55a3963e92aa1?s=73&d=retro","created":1564718222,"last_modified":1672119202},"last_reply_by":"poorcai","last_touched":1676597990,"title":"windows 的 terminal 升级了，好黑啊","url":"https://www.v2ex.com/t/916820","created":1676593616,"deleted":0,"content":"","content_rendered":"","last_modified":1676593616,"replies":8,"id":916820}]