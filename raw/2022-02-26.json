[{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/6cdd/60ea/184_large.png?m=1630643913","name":"apple","avatar_normal":"https://cdn.v2ex.com/navatar/6cdd/60ea/184_normal.png?m=1630643913","title":"Apple","url":"https://www.v2ex.com/go/apple","topics":17690,"footer":"","header":"设计了 <a href=\"/go/watch\">Apple Watch</a>，<a href=\"/go/ipad\">iPad</a>，<a href=\"/go/iphone\">iPhone</a>，<a href=\"/go/imac\">iMac</a> 及 <a href=\"/go/mbp\">MacBook Pro</a> 等电子产品的美国公司。","title_alternative":"Apple","avatar_mini":"https://cdn.v2ex.com/navatar/6cdd/60ea/184_mini.png?m=1630643913","stars":2078,"aliases":[],"root":false,"id":184,"parent_node_name":"hardware"},"member":{"id":559465,"username":"chenaifadin","url":"https://www.v2ex.com/u/chenaifadin","website":"","twitter":null,"psn":null,"github":null,"btc":null,"location":"","tagline":"","bio":"","avatar_mini":"https://cdn.v2ex.com/gravatar/0694cddf638946c1f6f191eca6178385?s=24&d=retro","avatar_normal":"https://cdn.v2ex.com/gravatar/0694cddf638946c1f6f191eca6178385?s=48&d=retro","avatar_large":"https://cdn.v2ex.com/gravatar/0694cddf638946c1f6f191eca6178385?s=73&d=retro","created":1635006176,"last_modified":1635006176},"last_reply_by":"chenaifadin","last_touched":1645842211,"title":"LG Ultrafine 4K、Dell U2723QE 体验感受","url":"https://www.v2ex.com/t/836529","created":1645838779,"deleted":0,"content":"戴尔 IPS Black 新品 U2723QE 最近有点火，18 号官网下单 25 号到货。\r\n\r\n下完单发现苹果官网 Ultrafine 4K 又有货了，于是立马下单。\r\n\r\n到货后简单对比了一下，发现还是一分价钱一分货啊。Ultrafine 确实通透很多，看起来非常舒服。而 Dell\r\nIPS Black 看起来就是灰蒙蒙的，视角稍微侧一点就有泛光，所谓的 IPS Glow 吧。但 Ultrafine 同是 IPS 就没有这种问题。我理解还是成本限制？\r\n\r\n另外：\r\n- 发现 U2723QE 做工一言难尽，面板边框缝隙非常不均匀。\r\n- Ultrafine 做工稍好，但用清洁布擦拭屏幕边缘发现轻轻往下按就会发出咔哒咔哒声音，好像面板固定不牢固。纠结要不要 7 天无理由换一台。v 友们的 Ultrafine 有这个问题吗？大家来谈一谈。","content_rendered":"<p>戴尔 IPS Black 新品 U2723QE 最近有点火，18 号官网下单 25 号到货。</p>\n<p>下完单发现苹果官网 Ultrafine 4K 又有货了，于是立马下单。</p>\n<p>到货后简单对比了一下，发现还是一分价钱一分货啊。Ultrafine 确实通透很多，看起来非常舒服。而 Dell\nIPS Black 看起来就是灰蒙蒙的，视角稍微侧一点就有泛光，所谓的 IPS Glow 吧。但 Ultrafine 同是 IPS 就没有这种问题。我理解还是成本限制？</p>\n<p>另外：</p>\n<ul>\n<li>发现 U2723QE 做工一言难尽，面板边框缝隙非常不均匀。</li>\n<li>Ultrafine 做工稍好，但用清洁布擦拭屏幕边缘发现轻轻往下按就会发出咔哒咔哒声音，好像面板固定不牢固。纠结要不要 7 天无理由换一台。v 友们的 Ultrafine 有这个问题吗？大家来谈一谈。</li>\n</ul>\n","last_modified":1645838814,"replies":11,"id":836529},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/03af/dbd6/63_large.png?m=1644490200","name":"java","avatar_normal":"https://cdn.v2ex.com/navatar/03af/dbd6/63_normal.png?m=1644490200","title":"Java","url":"https://www.v2ex.com/go/java","topics":4812,"footer":"","header":"Sun 公司发明，被广泛使用的一门编程语言。","title_alternative":"Java","avatar_mini":"https://cdn.v2ex.com/navatar/03af/dbd6/63_mini.png?m=1644490200","stars":4810,"aliases":[],"root":false,"id":63,"parent_node_name":"programming"},"member":{"id":465080,"username":"gosidealone","url":"https://www.v2ex.com/u/gosidealone","website":"","twitter":"","psn":"","github":"","btc":"","location":"","tagline":"","bio":"","avatar_mini":"https://cdn.v2ex.com/avatar/4739/12db/465080_mini.png?m=1645834957","avatar_normal":"https://cdn.v2ex.com/avatar/4739/12db/465080_normal.png?m=1645834957","avatar_large":"https://cdn.v2ex.com/avatar/4739/12db/465080_large.png?m=1645834957","created":1579000187,"last_modified":1645834957},"last_reply_by":"gosidealone","last_touched":1645840181,"title":"求助 Java 大佬 synchronized 的问题","url":"https://www.v2ex.com/t/836521","created":1645835134,"deleted":0,"content":"synchronized 加在方法上锁的是对象的实例吗？\r\n```\r\npublic class Test {\r\n\r\n    public static void main(String[] args) {\r\n        //Main main = new Main();\r\n        new Thread(()->{\r\n            Main main = new Main();\r\n            main.get();\r\n        }).start();\r\n        new Thread(()->{\r\n            Main main = new Main();\r\n            main.get();\r\n        }).start();\r\n    }\r\n\r\n}\r\n\r\nclass Main{\r\n    private static int i = 0;\r\n\r\n    public synchronized void get(){\r\n        i++;\r\n        System.out.println(i);\r\n    }\r\n}\r\n```\r\n这两个线程执行 get 函数的时候会互斥吗？如果是同一个 Main 对象肯定是输出 1 ，2 ，如果不是同一个对象输出的是 2 ，2 或者 1 ，2 或者 2 ，1 ，这是为什么呢？","content_rendered":"<p>synchronized 加在方法上锁的是对象的实例吗？</p>\n<pre><code>public class Test {\n\n    public static void main(String[] args) {\n        //Main main = new Main();\n        new Thread(()-&gt;{\n            Main main = new Main();\n            main.get();\n        }).start();\n        new Thread(()-&gt;{\n            Main main = new Main();\n            main.get();\n        }).start();\n    }\n\n}\n\nclass Main{\n    private static int i = 0;\n\n    public synchronized void get(){\n        i++;\n        System.out.println(i);\n    }\n}\n</code></pre>\n<p>这两个线程执行 get 函数的时候会互斥吗？如果是同一个 Main 对象肯定是输出 1 ，2 ，如果不是同一个对象输出的是 2 ，2 或者 1 ，2 或者 2 ，1 ，这是为什么呢？</p>\n","last_modified":1645835434,"replies":9,"id":836521}]